# app-interface granular permission model change-types

With the granular permission model, engineering teams & partner SRE teams can acquire more capabilities to manage and support their own services in app-interface without AppSREs explicit reviews and approvals.

## How does it work?

Declarative policies (a.k.a. app-interface change-types) enables change permissions from something wide like "change everything for all namespaces in a cluster" to something fine grained as "bump the version of a single vault secret" or "change the TTL of a record in a specific DNS zone".

Declaring such policies is a matter of defining what is desired, what makes sense and what is safe.

## What is available right now?

Here is a list of supported `change-types` and the `app-interfaces` [schemas](https://github.com/app-sre/qontract-schemas) they can be applied to.

| **change-type** | **description** | **applicable to** |
|-----------------|-----------------|-------------------|
{% for file, ct in change_types.items() -%}
| [{{ relative_change_type_dir }}/{{ file }}](/data{{relative_change_type_dir}}/{{file}}) | {{ ct.description | replace("\n", "<br/>") }} | {{ ct.contextType }} [{{ ct.contextSchema }}](https://github.com/app-sre/qontract-schemas/tree/main/schemas/{{ ct.contextSchema }}) |
{% endfor %}

You an idea for a new `change-type`? Let us know and create a ticket on the [AppSRE Jira Board](https://issues.redhat.com/projects/APPSRE)

## How can i use a change-type?

Have a look at the change-type documentation section [Role based self-service](https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/app-sre/change-types.md#role-based-self-service) to learn how to apply `change-types` within roles.
