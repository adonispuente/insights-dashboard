---
$schema: /app-sre/saas-file-1.yml

labels:
  service: telemeter

name: saas-telemeter
description: SaaS tracking file for Telemeter services

app:
  $ref: /services/rhobs/telemeter/app.yml

instance:
  $ref: /dependencies/ci-int/ci-int.yml

slack:
  workspace:
    $ref: /dependencies/slack/coreos.yml
  channel: team-monitoring-info

authentication:
  image:
    path: app-sre/ci-int/redhat-registry-io-pull
    field: all

compare: true

managedResourceTypes:
- Deployment
- Service
- StatefulSet
- ConfigMap
- Role
- RoleBinding
- ServiceAccount
- PodDisruptionBudget
- PersistentVolumeClaim
- PrometheusRule # adding everything that exists. this will be moved to a separate saas file

imagePatterns:
- quay.io/conprof/conprof
- quay.io/thanos/thanos
- quay.io/cortexproject/cortex
- quay.io/observatorium
- quay.io/app-sre
- quay.io/openshift/origin-oauth-proxy
- quay.io/prometheus/memcached-exporter
- registry.redhat.io/rhel8/memcached
- quay.io/jpkroehling/all-in-one
- quay.io/app-sre/gubernator

parameters:
  OAUTH_PROXY_IMAGE: quay.io/openshift/origin-oauth-proxy
  OAUTH_PROXY_IMAGE_TAG: 4.9.0

resourceTemplates:
- name: telemeter
  path: /resources/services/telemeter-template.yaml
  url: https://github.com/rhobs/configuration
  parameters:
    # NOTICE: Please specify image tags for each environment separately.
    # And sort them alphabetically.
    IMAGE: quay.io/app-sre/telemeter
    JAEGER_AGENT_IMAGE: quay.io/app-sre/jaegertracing-jaeger-agent
    TELEMETER_SERVER_TOKEN_EXPIRE_SECONDS: 86400
    MEMCACHED_IMAGE: registry.redhat.io/rhel8/memcached
    MEMCACHED_EXPORTER_IMAGE: quay.io/prometheus/memcached-exporter
    IMAGE_CANARY: quay.io/app-sre/telemeter
  targets:
  - namespace:
      $ref: /services/rhobs/telemeter/namespaces/telemeter-stage.yml
    ref: e8af106d25cc3a48a043c86a012beaa8901e838b
    parameters:
      NAMESPACE: telemeter-stage
      OBSERVATORIUM_NAMESPACE: telemeter-stage # TODO(prekumar): Change to observatorium-stage after migration.
      OBSERVATORIUM_METRICS_NAMESPACE: telemeter-stage
      OBSERVATORIUM_LOGS_NAMESPACE: observatorium-logs-stage
      IMAGE_TAG: '8e65e1c'
      IMAGE_CANARY_TAG: 'b4f226c'
      REPLICAS: 3
      REPLICAS_CANARY: 0
      JAEGER_AGENT_IMAGE_TAG: 1.22.0
      MEMCACHED_EXPORTER_IMAGE_TAG: v0.6.0
      MEMCACHED_IMAGE_TAG: 1.5
      PROMETHEUS_AMS_REMOTE_WRITE_PROXY_TARGET: 'observatorium-thanos-receive'
      SERVICE_ACCOUNT_NAME: prometheus-telemeter
      TELEMETER_FORWARD_URL: 'http://observatorium-observatorium-api.telemeter-stage.svc.cluster.local:8080/api/metrics/v1/telemeter/api/v1/receive'
      TELEMETER_LOG_LEVEL: 'debug'
      TELEMETER_SERVER_CPU_LIMIT: 1
      TELEMETER_SERVER_CPU_REQUEST: 100m
      TELEMETER_SERVER_MEMORY_LIMIT: 1Gi
      TELEMETER_SERVER_MEMORY_REQUEST: 100Mi
      TOKEN_REFRESHER_IMAGE_TAG: master-2021-06-17-7761b62
      TOKEN_REFRESHER_LOG_LEVEL: debug
      THANOS_STORE_INDEX_CACHE_CONNECTION_LIMIT: 5000
      THANOS_STORE_INDEX_CACHE_MEMORY_LIMIT_MB: 3072
      THANOS_STORE_INDEX_CACHE_MEMCACHED_CPU_LIMIT: 1
      THANOS_STORE_INDEX_CACHE_MEMCACHED_MEMORY_LIMIT: '3Gi'
  - namespace:
      $ref: /services/rhobs/telemeter/namespaces/telemeter-production.yml
    ref: 1281bd1a1b10d1c725cb6ec51f2c8c8152953037
    parameters:
      NAMESPACE: telemeter-production
      OBSERVATORIUM_METRICS_NAMESPACE: telemeter-production
      OBSERVATORIUM_LOGS_NAMESPACE: observatorium-logs-production
      IMAGE_TAG: '8e65e1c'
      IMAGE_CANARY_TAG: '8e65e1c'
      REPLICAS: 10
      REPLICAS_CANARY: 0
      JAEGER_AGENT_IMAGE_TAG: 1.22.0
      MEMCACHED_EXPORTER_IMAGE_TAG: v0.6.0
      MEMCACHED_IMAGE_TAG: 1.5
      MEMCACHED_IMAGE: registry.redhat.io/rhel8/memcached
      PROMETHEUS_AMS_REMOTE_WRITE_PROXY_TARGET: 'observatorium-thanos-receive'
      SERVICE_ACCOUNT_NAME: prometheus-telemeter
      TELEMETER_FORWARD_URL: 'http://observatorium-observatorium-api.telemeter-production.svc.cluster.local:8080/api/metrics/v1/telemeter/api/v1/receive'
      TELEMETER_LOG_LEVEL: 'warn'
      TELEMETER_SERVER_CPU_LIMIT: 1500m
      TELEMETER_SERVER_CPU_REQUEST: 100m
      TELEMETER_SERVER_MEMORY_LIMIT: 1Gi
      TELEMETER_SERVER_MEMORY_REQUEST: 100Mi
