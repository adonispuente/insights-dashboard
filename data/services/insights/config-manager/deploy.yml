---
$schema: /app-sre/saas-file-2.yml

labels:
  service: config-manager
  platform: insights

name: config-manager
description: The Config Manager service allows users to set a service configuration for all hosts connected through Red Hat Connector

app:
  $ref: /services/insights/config-manager/app.yml

pipelinesProvider:
  $ref: /services/insights/pipelines/tekton.crc-pipelines.appsrep05ue1.yaml

slack:
  workspace:
    $ref: /dependencies/slack/coreos.yml
  channel: team-clouddot-info

managedResourceTypes:
- ClowdApp
- ClowdJobInvocation
- Frontend

imagePatterns:
- quay.io/cloudservices

authentication:
  image:
    path: insights/quay/cloudservices-push
    field: all
    version: 3

resourceTemplates:
- name: config-manager
  path: /deploy/clowdapp.yml
  url: https://github.com/RedHatInsights/config-manager
  targets:
  - namespace:
      $ref: /services/insights/config-manager/namespaces/config-manager-stage.yml
    ref: master
    upstream:
      instance:
        $ref: /dependencies/ci-ext/ci-ext.yml
      name: RedHatInsights-config-manager-gh-build-master
    parameters:
      CM_LOG_LEVEL: debug
      CM_DISPATCHER_HOST: http://${PLAYBOOK_DISPATCHER_HOST}:${PLAYBOOK_DISPATCHER_PORT}
      CM_INVENTORY_HOST: http://${HOST_INVENTORY_HOST}:8000
      CM_CLOUD_CONNECTOR_HOST: http://${CLOUD_CONNECTOR_HOST}:${CLOUD_CONNECTOR_PORT}
      CM_PLAYBOOK_HOST: https://cert.${PLATFORM_HOSTNAME}
      REPLICAS: 2
  - namespace:
      $ref: /services/insights/config-manager/namespaces/config-manager-prod.yml
    ref: 3daa0836d6974230edc809bc5d888c19ee07f00b
    parameters:
      CM_LOG_LEVEL: debug
      CM_DISPATCHER_HOST: http://${PLAYBOOK_DISPATCHER_HOST}:${PLAYBOOK_DISPATCHER_PORT}
      CM_INVENTORY_HOST: http://${HOST_INVENTORY_HOST}:8000
      CM_CLOUD_CONNECTOR_HOST: http://${CLOUD_CONNECTOR_HOST}:${CLOUD_CONNECTOR_PORT}
      CM_PLAYBOOK_HOST: https://cert.${PLATFORM_HOSTNAME}
      REPLICAS: 2
  - namespace:
      $ref: /services/insights/ephemeral/namespaces/ephemeral-base.yml
    disable: true  # do not create an app-sre deploy job for ephemeral namespace
    ref: internal  # populated by bonfire
    parameters:
      REPLICAS: 1
      CM_DISPATCHER_IMPL: mock
      CM_CLOUD_CONNECTOR_IMPL: mock
      CM_INVENTORY_IMPL: mock
      CM_DISPATCHER_HOST: mock
      CM_CLOUD_CONNECTOR_HOST: mock
      CM_INVENTORY_HOST: mock
      CM_PLAYBOOK_HOST: mock

- name: sed-frontend
  path: /deploy/frontend.yml
  url: https://github.com/RedHatInsights/sed-frontend
  targets:
  - namespace:
      $ref: /services/insights/ephemeral/namespaces/ephemeral-base.yml
    disable: true  # do not create an app-sre deploy job for ephemeral namespace
    ref: internal  # populated by bonfire
  - namespace:
      $ref: /services/insights/ephemeral/namespaces/consoledot-frontend-stage.yml
    ref: 8dced7bf3a50ac666ddaea496308e42b16814e5d
    parameters:
      ENV_NAME: env-stage
