---
$schema: /app-sre/saas-file-2.yml

labels:
  service: automation-hub
  platform: insights

name: automation-hub-clowder
description: automation-hub app on the Insights Platform

app:
  $ref: /services/insights/automation-hub/app.yml

pipelinesProvider:
  $ref: /services/insights/pipelines/tekton.crc-pipelines.appsrep05ue1.yaml

deployResources:
  requests:
    cpu: 200m
    memory: 600Mi
  limits:
    cpu: 200m
    memory: 600Mi

slack:
  workspace:
    $ref: /dependencies/slack/coreos.yml
  channel: team-clouddot-info

managedResourceTypes:
- ClowdApp
- ClowdJobInvocation
- Service
- ConfigMap
- Job

imagePatterns:
- quay.io/cloudservices

authentication:
  image:
    path: insights/quay/cloudservices-push
    field: all
    version: 3

parameters:
  CLOUD_WATCH_LOG_GROUP: automation-hub-stage

resourceTemplates:
  - name: automation-hub
    path: /openshift/clowder/clowd-app.yaml
    url: https://github.com/ansible/galaxy_ng
    targets:
    - namespace:
        $ref: /services/insights/ephemeral/namespaces/ephemeral-base.yml
      disable: true  # do not create an app-sre deploy job for ephemeral namespace
      ref: internal  # populated by bonfire
      parameters:
        REPLICAS: 1
    - namespace:
        $ref: /services/insights/automation-hub/namespaces/stage-automation-hub-stage.yml
      ref: master
      upstream:
        instance:
          $ref: /dependencies/ci-ext/ci-ext.yml
        name: ansible-galaxy_ng-gh-build-master
      parameters:
        REPLICAS: 1
        SUFFIX: '-cwa'

        NGINX_IMAGE_TAG: '99d0310'
        NGINX_CPU_REQUEST: 100m
        NGINX_MEMORY_REQUEST: 128Mi

        GALAXY_API_CPU_REQUEST: 200m
        GALAXY_API_CPU_LIMIT: 600m
        GALAXY_API_MEMORY_REQUEST: 1536Mi
        GALAXY_API_MEMORY_LIMIT: 1536Mi

        CONTENT_ORIGIN: 'https://console.stage.redhat.com/'
        IMPORTER_JOB_NAMESPACE: automation-hub-jobs-stage
        IMPORTER_IMAGE_TAG: '573a599'
        REDIS_SSL: 'true'
        ENABLE_SIGNING: "2"
        GALAXY_SIGNATURE_UPLOAD_ENABLED: 'true'
        GALAXY_REQUIRE_SIGNATURE_FOR_APPROVAL: 'true'
        GALAXY_AUTO_SIGN_COLLECTIONS: 'false'
        GALAXY_COLLECTION_SIGNING_SERVICE: ""
        GALAXY_FEATURE_FLAGS_DISPLAY_SIGNATURES: 'false'  # temporary until AAH-1794 resolved
      promotion:
        publish:
        - automation-hub-stage-deploy-success-channel
    - namespace:
        $ref: /services/insights/automation-hub/namespaces/automation-hub-prod.yml
      ref: 14f148a699b42ba380f85af1ffea9f7c75a183bb
      parameters:
        REPLICAS: 1
        SUFFIX: '-cwa'

        NGINX_IMAGE_TAG: '99d0310'
        NGINX_CPU_REQUEST: 100m
        NGINX_MEMORY_REQUEST: 128Mi

        GALAXY_API_CPU_REQUEST: '1'
        GALAXY_API_CPU_LIMIT: '1'
        GALAXY_API_MEMORY_REQUEST: 2048Mi
        GALAXY_API_MEMORY_LIMIT: 2048Mi

        CONTENT_ORIGIN: 'https://console.redhat.com/'
        IMPORTER_JOB_NAMESPACE: automation-hub-jobs-prod
        IMPORTER_IMAGE_TAG: '573a599'
        REDIS_SSL: 'true'
        ENABLE_SIGNING: "2"
        GALAXY_SIGNATURE_UPLOAD_ENABLED: 'true'
        GALAXY_REQUIRE_SIGNATURE_FOR_APPROVAL: 'true'
        GALAXY_AUTO_SIGN_COLLECTIONS: 'false'
        GALAXY_COLLECTION_SIGNING_SERVICE: ""
        GALAXY_FEATURE_FLAGS_DISPLAY_SIGNATURES: 'false'

        NGINX_REPLICAS: '3'
        GALAXY_API_REPLICAS: '6'
        PULP_CONTENT_APP_REPLICAS: '3'
        PULP_WORKER_REPLICAS: '6'
        TRIGGER_RESTART: '1'
  - name: automation-hub-frontend
    path: /deploy/frontend.yaml
    url: https://github.com/ansible/ansible-hub-ui
    targets:
    - namespace:
        $ref: /services/insights/ephemeral/namespaces/ephemeral-base.yml
      disable: true  # do not create an app-sre deploy job for ephemeral namespace
      ref: internal  # populated by bonfire
  - name: automation-hub-job
    path: /openshift/clowder/run-job.yaml
    url: https://github.com/ansible/galaxy_ng
    targets:
    - namespace:
        $ref: /services/insights/automation-hub/namespaces/stage-automation-hub-stage.yml
      ref: 2cdc7b795fcb77a163d611b52d672710756979d9
      parameters:
        ARGS: django-admin shell -c 'from django.db import connection; cursor = connection.cursor(); cursor.execute("""SELECT OID, relname FROM pg_class;"""); print("\n".join([str(x) for x in cursor.fetchall() ])); cursor.close()'
        RERUN: 1
    - namespace:
        $ref: /services/insights/automation-hub/namespaces/automation-hub-prod.yml
      ref: 2cdc7b795fcb77a163d611b52d672710756979d9
      parameters:
        ARGS: django-admin shell -c 'from pulpcore.app.models.task import TaskSchedule; print(TaskSchedule.objects.all().count()); print(TaskSchedule.objects.all()); t = TaskSchedule.objects.all().first(); print(vars(t))'
        RERUN: 0
