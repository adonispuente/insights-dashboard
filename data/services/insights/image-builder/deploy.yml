---
$schema: /app-sre/saas-file-2.yml

labels:
  service: image-builder
  platform: insights

name: image-builder
description: image-builder service deployment

# We reference our app definition here
app:
  $ref: /services/insights/image-builder/app.yml

# Deploys are carried out by a Tekton Pipeline. We have to specify which pipelines
# provider will do our deploys for us.
pipelinesProvider:
  $ref: /services/insights/pipelines/tekton.crc-pipelines.appsrep05ue1.yaml

# Every time a deploy is attempted, updates are fed to the CoreOS Slack instance
# in the #osbuild-image-builder-service channel.
slack:
  workspace:
    $ref: /dependencies/slack/redhat-internal.yml
  channel: osbuild-image-builder-service

# Like in the namespace definition, for integrity purposes, we enumerate what
# types of OpenShift resources we're expecting to be created in the templates
managedResourceTypes:
  - ConfigMap
  - Deployment
  - DeploymentConfig
  - Service
  - ServiceAccount
  - FloorPlan
  - ClowdApp

# For integrity purposes, we enumerate here what container image registry path
# patterns we are expecting to exist in our OpenShift template. Usually you
# would only include quay.io/cloudservices here. If you want to use stock images
# for other services, it is recommended you mirror them to Quay by listing them
# in your app.yml
imagePatterns:
  - quay.io/cloudservices
  - quay.io/app-sre/fluentd-hec

# The authentication section is for providing the deploy integrations with the
# credentials they'd need to validate and perform a deploy.
authentication:
  image:
    path: app-sre/quay/app-sre-pull
    field: all


# Here we list the templates that go into deploying into our various
# clusters, along with the parameters that go into processing the templates.
resourceTemplates:
- name: image-builder
  # The URL of the Git repo where the OpenShift template can be found
  url: https://github.com/osbuild/image-builder
  # The path in the repository where the OpenShift template can be found
  path: /templates/image-builder.yml
  targets:
    - namespace:
        $ref: /services/insights/ephemeral/namespaces/ephemeral-base.yml
      disable: true # do not create an app-sre deploy job for ephemeral namespace
      ref: internal # populated by bonfire
    - namespace:
        $ref: /services/insights/image-builder/namespaces/stage-image-builder-stage.yml
      # The ref in the Git repo from which to find the version of the template to
      # deploy
      ref: main
      # We can't deploy the new version of the container until it is built, so to
      # make sure our deploy job waits until that build is complete, we specify
      # the name of the Jenkins job that performs the build for us. It's the
      # composition of the values of the gh_org, gh_repo, and build job name
      # from our build.yml file
      upstream:
        instance:
          $ref: /dependencies/ci-ext/ci-ext.yml
        name: osbuild-image-builder-gh-build-main
      parameters:
        COMPOSER_URL: "https://api.stage.openshift.com"
        FLOORIST_QUERY_PREFIX: "hms_analytics/image-builder/stage"
        PGSSLMODE: "require"
        QUOTA_FILE: "/app/config/quotas.json"
        ALLOW_FILE: "/app/config/allow_list.json"
      promotion:
        publish:
          - image-builder-stage-deploy-success-channel
    - namespace:
        $ref: /services/insights/image-builder/namespaces/prod-image-builder-prod.yml
      ref: eafc743d0acb27a34f95ce51178f642109a9b85b
      parameters:
        COMPOSER_URL: "https://api.openshift.com"
        FLOORIST_QUERY_PREFIX: "hms_analytics/image-builder/prod"
        PGSSLMODE: "require"
        QUOTA_FILE: "/app/config/quotas.json"
        ALLOW_FILE: "/app/config/allow_list.json"
      promotion:
        publish:
          - image-builder-prod-deploy-success-channel
- name: image-builder-crc-dashboards
  url: https://github.com/osbuild/image-builder
  path: /templates/dashboards
  provider: directory
  targets:
  - namespace:
      $ref: /services/observability/namespaces/app-sre-observability-stage-int.yml
    ref: main
  - namespace:
      $ref: /services/observability/namespaces/app-sre-observability-production-int.yml
    ref: eafc743d0acb27a34f95ce51178f642109a9b85b
- name: image-builder-frontend
  url: https://github.com/RedHatInsights/image-builder-frontend
  path: /deploy/frontend-clowder.yml
  targets:
    - namespace:
        $ref: /services/insights/ephemeral/namespaces/ephemeral-base.yml
      disable: true # do not create an app-sre deploy job for ephemeral namespace
      ref: internal # populated by bonfire
