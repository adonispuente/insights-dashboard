---
$schema: /app-sre/saas-file-2.yml

labels:
  service: xjoin-operator
  platform: insights

name: xjoin-operator
description: xjoin operator on the Insights Platform

app:
  $ref: /services/insights/xjoin/app.yml

pipelinesProvider:
  $ref: /services/insights/pipelines/tekton.crc-pipelines.appsrep05ue1.yaml

slack:
  workspace:
    $ref: /dependencies/slack/coreos.yml
  channel: team-clouddot-info

managedResourceTypes:
- ConfigMap
- OperatorGroup
- CatalogSource
- Subscription
- Service
- XJoinPipeline
- KafkaUser

imagePatterns:
- quay.io/cloudservices

authentication:
  image:
    path: insights/quay/cloudservices-push
    field: all
    version: 3
  code:
    path: app-sre/creds/github-app-sre-bot
    field: openshift-saas-deploy

resourceTemplates:
- name: xjoin-operator
  path: /deploy/operator.yml
  url: https://github.com/RedHatInsights/xjoin-operator
  parameters:
    RECONCILE_INTERVAL: "120"
    ES_CONNECTOR_TASKS_MAX: "50"
    KAFKA_TOPIC_PARTITIONS: "500"
    KAFKA_TOPIC_REPLICAS: "2"
  targets:
  - namespace:
      $ref: /services/insights/xjoin/namespaces/stage-xjoin-operator-stage.yml
    ref: master
    upstream:
      instance:
        $ref: /dependencies/ci-int/ci-int.yml
      name: RedHatInsights-xjoin-operator-gh-build-catalog-master-upstream-RedHatInsights-xjoin-operator-gh-build-master
    parameters:
      HBI_DB_SSL_MODE: "disable"
      TARGET_NAMESPACE: xjoin-operator-stage
      SOURCE_NAMESPACE: xjoin-operator-stage
      LOG_LEVEL: "info"
      VALIDATION_INTERVAL: "1800"
      VALIDATION_ATTEMPTS_THRESHOLD: "2"
      VALIDATION_ATTEMPTS_THRESHOLD_INIT: "10"
      VALIDATION_INTERVAL_INIT: "30"
      FULL_VALIDATION_NUM_THREADS: "20"
      FULL_VALIDATION_CHUNK_SIZE: "50"
      MANAGER_POD_MEM_LIMIT: "8Gi"
      MANAGER_POD_CPU_LIMIT: "2"
      MANAGER_POD_MEM_REQUESTS: "4Gi"
      MANAGER_POD_CPU_REQUESTS: "1"
      FULL_VALIDATION_ENABLED: "true"
      KAFKA_TOPIC_REPLICAS: "3"
      KAFKA_TOPIC_PARTITIONS: "1"
      SCHEMA_REGISTRY_SECRET_NAME: "service-registry-stage"
      DEBEZIUM_CONNECTOR_CONFIG: >-
        { 
          "tasks.max": "{{.DebeziumTasksMax}}",
          "producer.override.max.request.size": "2097152",
          "database.hostname": "${env:HOST_INVENTORY_DB_HOSTNAME}",
          "database.port": "{{.HBIDBPort}}",
          "database.user": "${env:HOST_INVENTORY_DB_USERNAME}",
          "database.password": "${env:HOST_INVENTORY_DB_PASSWORD}",
          "database.dbname": "${env:HOST_INVENTORY_DB_NAME}",
          "database.server.name": "{{.ResourceNamePrefix}}.{{.Version}}",
          "database.sslmode": "{{.HBIDBSSLMode}}",
          "database.sslrootcert": "{{.HBIDBSSLRootCert}}",
          "table.whitelist": "public.hosts",
          "plugin.name": "pgoutput",
          "transforms": "unwrap",
          "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
          "transforms.unwrap.delete.handling.mode": "rewrite",
          "errors.log.enable": {{.DebeziumErrorsLogEnable}},
          "errors.log.include.messages": true,
          "slot.name": "{{.ReplicationSlotName}}",
          "max.queue.size": {{.DebeziumQueueSize}},
          "max.batch.size": {{.DebeziumMaxBatchSize}},
          "poll.interval.ms": {{.DebeziumPollIntervalMS}},
          "key.converter": "org.apache.kafka.connect.storage.StringConverter",
          "value.converter": "io.apicurio.registry.utils.converter.AvroConverter",
          "value.converter.apicurio.registry.url": "{{.SchemaRegistryUrl}}",
          "value.converter.apicurio.auth.username": "{{.SchemaRegistryClientId}}",
          "value.converter.apicurio.auth.password": "{{.SchemaRegistryClientSecret}}",
          "value.converter.apicurio.registry.auto-register": "true",
          "value.converter.apicurio.registry.find-latest": "true",
          "value.converter.enhanced.avro.schema.support": "true"
        }
      ES_CONNECTOR_CONFIG: >-
        { 
          "tasks.max": "{{.ElasticSearchTasksMax}}",
          "topics": "{{.Topic}}",
          "key.ignore": "false",
          "connection.url": "${env:ELASTICSEARCH_ENDPOINT}",
          {{if .ElasticSearchUsername}}
            "connection.username": "{{.ElasticSearchUsername}}",
          {{end}}
          {{if .ElasticSearchPassword}}
            "connection.password": "{{.ElasticSearchPassword}}",
          {{end}}
          "type.name": "_doc",
          "transforms": "valueToKey, extractKey, expandJSON, expandPRSJSON, deleteIf, flattenList, flattenListString, flattenPRS, renameTopic",
          "transforms.valueToKey.type": "org.apache.kafka.connect.transforms.ValueToKey",
          "transforms.valueToKey.fields": "id",
          "transforms.extractKey.type": "org.apache.kafka.connect.transforms.ExtractField$Key",
          "transforms.extractKey.field": "id",
          "transforms.expandJSON.type": "com.redhat.insights.expandjsonsmt.ExpandJSON$Value",
          "transforms.expandJSON.sourceFields": "tags",
          "transforms.expandPRSJSON.type": "com.redhat.insights.expandjsonsmt.ExpandJSON$Value",
          "transforms.expandPRSJSON.sourceFields": "per_reporter_staleness",
          "transforms.deleteIf.type": "com.redhat.insights.deleteifsmt.DeleteIf$Value",
          "transforms.deleteIf.field": "__deleted",
          "transforms.deleteIf.value": "true",
          "transforms.flattenList.type": "com.redhat.insights.flattenlistsmt.FlattenList$Value",
          "transforms.flattenList.sourceField": "tags",
          "transforms.flattenList.outputField": "tags_structured",
          "transforms.flattenList.mode": "keys",
          "transforms.flattenList.keys": "namespace,key,value",
          "transforms.flattenListString.type": "com.redhat.insights.flattenlistsmt.FlattenList$Value",
          "transforms.flattenListString.sourceField": "tags",
          "transforms.flattenListString.outputField": "tags_string",
          "transforms.flattenListString.mode": "join",
          "transforms.flattenListString.delimiterJoin": "/",
          "transforms.flattenListString.encode": true,
          "transforms.flattenPRS.type": "com.redhat.insights.flattenlistsmt.FlattenList$Value",
          "transforms.flattenPRS.sourceField": "per_reporter_staleness",
          "transforms.flattenPRS.outputField": "per_reporter_staleness_flat",
          "transforms.flattenPRS.mode": "object",
          "transforms.flattenPRS.rootKey": "reporter",
          "transforms.renameTopic.type": "org.apache.kafka.connect.transforms.RegexRouter",
          "transforms.renameTopic.regex": "{{.Topic}}",
          "transforms.renameTopic.replacement": "{{.RenameTopicReplacement}}",
          "behavior.on.null.values": "delete",
          "behavior.on.malformed.documents": "warn",
          "auto.create.indices.at.start": false,
          "schema.ignore": true,
          "max.in.flight.requests": {{.ElasticSearchMaxInFlightRequests}},
          "errors.log.enable": {{.ElasticSearchErrorsLogEnable}},
          "errors.log.include.messages": true,
          "max.retries": {{.ElasticSearchMaxRetries}},
          "retry.backoff.ms": {{.ElasticSearchRetryBackoffMS}},
          "batch.size": {{.ElasticSearchBatchSize}},
          "max.buffered.records": {{.ElasticSearchMaxBufferedRecords}},
          "linger.ms": {{.ElasticSearchLingerMS}},
          "key.converter": "org.apache.kafka.connect.storage.StringConverter",
          "value.converter": "io.apicurio.registry.utils.converter.AvroConverter",
          "value.converter.apicurio.registry.auto-register": "false",
          "value.converter.apicurio.registry.find-latest": "true",
          "value.converter.apicurio.registry.url": "{{.SchemaRegistryUrl}}",
          "value.converter.apicurio.auth.username": "{{.SchemaRegistryClientId}}",
          "value.converter.apicurio.auth.password": "{{.SchemaRegistryClientSecret}}",
          "value.converter.enhanced.avro.schema.support": "true"
        }
  - namespace:
      $ref: /services/insights/xjoin/namespaces/xjoin-operator-prod.yml
    ref: 61d5ac9dd274cd5cfbcdba93d9cecb8425dcd0a2
    parameters:
      HBI_DB_SSL_MODE: "disable"
      TARGET_NAMESPACE: xjoin-operator-prod
      SOURCE_NAMESPACE: xjoin-operator-prod
      VALIDATION_PERIOD_MINUTES: "90"
      VALIDATION_LAG_COMPENSATION_SECONDS: "600"
      VALIDATION_ATTEMPTS_THRESHOLD: "2"
      VALIDATION_INTERVAL: "600"
      VALIDATION_INTERVAL_INIT: "120"
      VALIDATION_ATTEMPTS_THRESHOLD_INIT: "60"
      LOG_LEVEL: "info"
      MANAGER_POD_MEM_LIMIT: "26Gi"
      MANAGER_POD_CPU_LIMIT: "4"
      MANAGER_POD_MEM_REQUESTS: "13Gi"
      MANAGER_POD_CPU_REQUESTS: "2"
      FULL_VALIDATION_ENABLED: "true"
      FULL_VALIDATION_NUM_THREADS: "25"
      FULL_VALIDATION_CHUNK_SIZE: "25"
      SCHEMA_REGISTRY_SECRET_NAME: "service-registry-prod"
      DEBEZIUM_CONNECTOR_CONFIG: >-
        { 
          "tasks.max": "{{.DebeziumTasksMax}}",
          "producer.override.max.request.size": "2097152",
          "database.hostname": "${env:HOST_INVENTORY_DB_HOSTNAME}",
          "database.port": "{{.HBIDBPort}}",
          "database.user": "${env:HOST_INVENTORY_DB_USERNAME}",
          "database.password": "${env:HOST_INVENTORY_DB_PASSWORD}",
          "database.dbname": "${env:HOST_INVENTORY_DB_NAME}",
          "database.server.name": "{{.ResourceNamePrefix}}.{{.Version}}",
          "database.sslmode": "{{.HBIDBSSLMode}}",
          "database.sslrootcert": "{{.HBIDBSSLRootCert}}",
          "table.whitelist": "public.hosts",
          "plugin.name": "pgoutput",
          "transforms": "unwrap",
          "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
          "transforms.unwrap.delete.handling.mode": "rewrite",
          "errors.log.enable": {{.DebeziumErrorsLogEnable}},
          "errors.log.include.messages": true,
          "slot.name": "{{.ReplicationSlotName}}",
          "max.queue.size": {{.DebeziumQueueSize}},
          "max.batch.size": {{.DebeziumMaxBatchSize}},
          "poll.interval.ms": {{.DebeziumPollIntervalMS}},
          "key.converter": "org.apache.kafka.connect.storage.StringConverter",
          "value.converter": "io.apicurio.registry.utils.converter.AvroConverter",
          "value.converter.apicurio.registry.url": "{{.SchemaRegistryUrl}}",
          "value.converter.apicurio.auth.username": "{{.SchemaRegistryClientId}}",
          "value.converter.apicurio.auth.password": "{{.SchemaRegistryClientSecret}}",
          "value.converter.apicurio.registry.auto-register": "true",
          "value.converter.apicurio.registry.find-latest": "true",
          "value.converter.enhanced.avro.schema.support": "true"
        }
      ES_CONNECTOR_CONFIG: >-
        { 
          "tasks.max": "{{.ElasticSearchTasksMax}}",
          "topics": "{{.Topic}}",
          "key.ignore": "false",
          "connection.url": "${env:ELASTICSEARCH_ENDPOINT}",
          {{if .ElasticSearchUsername}}
            "connection.username": "{{.ElasticSearchUsername}}",
          {{end}}
          {{if .ElasticSearchPassword}}
            "connection.password": "{{.ElasticSearchPassword}}",
          {{end}}
          "type.name": "_doc",
          "transforms": "valueToKey, extractKey, expandJSON, expandPRSJSON, deleteIf, flattenList, flattenListString, flattenPRS, renameTopic",
          "transforms.valueToKey.type": "org.apache.kafka.connect.transforms.ValueToKey",
          "transforms.valueToKey.fields": "id",
          "transforms.extractKey.type": "org.apache.kafka.connect.transforms.ExtractField$Key",
          "transforms.extractKey.field": "id",
          "transforms.expandJSON.type": "com.redhat.insights.expandjsonsmt.ExpandJSON$Value",
          "transforms.expandJSON.sourceFields": "tags",
          "transforms.expandPRSJSON.type": "com.redhat.insights.expandjsonsmt.ExpandJSON$Value",
          "transforms.expandPRSJSON.sourceFields": "per_reporter_staleness",
          "transforms.deleteIf.type": "com.redhat.insights.deleteifsmt.DeleteIf$Value",
          "transforms.deleteIf.field": "__deleted",
          "transforms.deleteIf.value": "true",
          "transforms.flattenList.type": "com.redhat.insights.flattenlistsmt.FlattenList$Value",
          "transforms.flattenList.sourceField": "tags",
          "transforms.flattenList.outputField": "tags_structured",
          "transforms.flattenList.mode": "keys",
          "transforms.flattenList.keys": "namespace,key,value",
          "transforms.flattenListString.type": "com.redhat.insights.flattenlistsmt.FlattenList$Value",
          "transforms.flattenListString.sourceField": "tags",
          "transforms.flattenListString.outputField": "tags_string",
          "transforms.flattenListString.mode": "join",
          "transforms.flattenListString.delimiterJoin": "/",
          "transforms.flattenListString.encode": true,
          "transforms.flattenPRS.type": "com.redhat.insights.flattenlistsmt.FlattenList$Value",
          "transforms.flattenPRS.sourceField": "per_reporter_staleness",
          "transforms.flattenPRS.outputField": "per_reporter_staleness_flat",
          "transforms.flattenPRS.mode": "object",
          "transforms.flattenPRS.rootKey": "reporter",
          "transforms.renameTopic.type": "org.apache.kafka.connect.transforms.RegexRouter",
          "transforms.renameTopic.regex": "{{.Topic}}",
          "transforms.renameTopic.replacement": "{{.RenameTopicReplacement}}",
          "behavior.on.null.values": "delete",
          "behavior.on.malformed.documents": "warn",
          "auto.create.indices.at.start": false,
          "schema.ignore": true,
          "max.in.flight.requests": {{.ElasticSearchMaxInFlightRequests}},
          "errors.log.enable": {{.ElasticSearchErrorsLogEnable}},
          "errors.log.include.messages": true,
          "max.retries": {{.ElasticSearchMaxRetries}},
          "retry.backoff.ms": {{.ElasticSearchRetryBackoffMS}},
          "batch.size": {{.ElasticSearchBatchSize}},
          "max.buffered.records": {{.ElasticSearchMaxBufferedRecords}},
          "linger.ms": {{.ElasticSearchLingerMS}},
          "key.converter": "org.apache.kafka.connect.storage.StringConverter",
          "value.converter": "io.apicurio.registry.utils.converter.AvroConverter",
          "value.converter.apicurio.registry.auto-register": "false",
          "value.converter.apicurio.registry.find-latest": "true",
          "value.converter.apicurio.registry.url": "{{.SchemaRegistryUrl}}",
          "value.converter.apicurio.auth.username": "{{.SchemaRegistryClientId}}",
          "value.converter.apicurio.auth.password": "{{.SchemaRegistryClientSecret}}",
          "value.converter.enhanced.avro.schema.support": "true"
        }
  - namespace:
      $ref: /services/insights/xjoin/namespaces/xjoin-operator-perf.yml
    ref: master
    parameters:
      HBI_DB_SSL_MODE: "disable"
      TARGET_NAMESPACE: xjoin-operator-perf
      SOURCE_NAMESPACE: xjoin-operator-perf
      LOG_LEVEL: "info"
      VALIDATION_INTERVAL: "1800"
      VALIDATION_ATTEMPTS_THRESHOLD: "2"
      FULL_VALIDATION_NUM_THREADS: "20"
      FULL_VALIDATION_CHUNK_SIZE: "50"
      MANAGER_POD_MEM_LIMIT: "8Gi"
      MANAGER_POD_CPU_LIMIT: "2"
      MANAGER_POD_MEM_REQUESTS: "4Gi"
      MANAGER_POD_CPU_REQUESTS: "1"
      FULL_VALIDATION_ENABLED: "true"
  
  # Ephemeral/dev clusters
  # Unlike in stable environments where the operator is deployed in SingleNamespace mode,
  # AllNamespaces (i.e. cluster-wide) mode is used in ephemeral environments
  - namespace:
      $ref: /services/insights/xjoin/namespaces/xjoin-ephemeral.yml
    ref: master
    parameters:
      LOG_LEVEL: "info"
      TARGET_NAMESPACE: xjoin
      SOURCE_NAMESPACE: xjoin
      # Temporary until https://github.com/RedHatInsights/clowder/pull/390 is merged and released
      DEBEZIUM_CONNECTOR_CONFIG: '{
        "tasks.max": "{{.DebeziumTasksMax}}",
        "database.hostname": "{{.HBIDBHost}}",
        "database.port": "{{.HBIDBPort}}",
        "database.user": "{{.HBIDBUser}}",
        "database.password": "{{.HBIDBPassword}}",
        "database.dbname": "{{.HBIDBName}}",
        "database.server.name": "{{.ResourceNamePrefix}}.{{.Version}}",
        "database.sslmode": "{{.HBIDBSSLMode}}",
        "database.sslrootcert": "{{.HBIDBSSLRootCert}}",
        "table.whitelist": "public.hosts",
        "plugin.name": "pgoutput",
        "transforms": "unwrap",
        "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
        "transforms.unwrap.delete.handling.mode": "rewrite",
        "errors.log.enable": {{.DebeziumErrorsLogEnable}},
        "errors.log.include.messages": true,
        "slot.name": "{{.ReplicationSlotName}}",
        "max.queue.size": {{.DebeziumQueueSize}},
        "max.batch.size": {{.DebeziumMaxBatchSize}},
        "poll.interval.ms": {{.DebeziumPollIntervalMS}}
      }'
      MANAGER_POD_MEM_LIMIT: "8Gi"
      MANAGER_POD_CPU_LIMIT: "2"
      MANAGER_POD_MEM_REQUESTS: "4Gi"
      MANAGER_POD_CPU_REQUESTS: "1"
      VALIDATION_INTERVAL_INIT: "30"
      VALIDATION_ATTEMPTS_THRESHOLD_INIT: "30"
      VALIDATION_INTERVAL: "30"
      VALIDATION_ATTEMPTS_THRESHOLD: "10"
    upstream:
      instance:
        $ref: /dependencies/ci-int/ci-int.yml
      name: RedHatInsights-xjoin-operator-gh-build-catalog-master-upstream-RedHatInsights-xjoin-operator-gh-build-master
  - namespace:
      $ref: /services/insights/xjoin/namespaces/xjoin-dev.yml
    ref: master
    parameters:
      LOG_LEVEL: "info"
      TARGET_NAMESPACE: xjoin
      SOURCE_NAMESPACE: xjoin
      # Temporary until https://github.com/RedHatInsights/clowder/pull/390 is merged and released
      DEBEZIUM_CONNECTOR_CONFIG: '{
        "tasks.max": "{{.DebeziumTasksMax}}",
        "database.hostname": "{{.HBIDBHost}}",
        "database.port": "{{.HBIDBPort}}",
        "database.user": "{{.HBIDBUser}}",
        "database.password": "{{.HBIDBPassword}}",
        "database.dbname": "{{.HBIDBName}}",
        "database.server.name": "{{.ResourceNamePrefix}}.{{.Version}}",
        "database.sslmode": "{{.HBIDBSSLMode}}",
        "database.sslrootcert": "{{.HBIDBSSLRootCert}}",
        "table.whitelist": "public.hosts",
        "plugin.name": "pgoutput",
        "transforms": "unwrap",
        "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
        "transforms.unwrap.delete.handling.mode": "rewrite",
        "errors.log.enable": {{.DebeziumErrorsLogEnable}},
        "errors.log.include.messages": true,
        "slot.name": "{{.ReplicationSlotName}}",
        "max.queue.size": {{.DebeziumQueueSize}},
        "max.batch.size": {{.DebeziumMaxBatchSize}},
        "poll.interval.ms": {{.DebeziumPollIntervalMS}}
      }'
      MANAGER_POD_MEM_LIMIT: "8Gi"
      MANAGER_POD_CPU_LIMIT: "2"
      MANAGER_POD_MEM_REQUESTS: "4Gi"
      MANAGER_POD_CPU_REQUESTS: "1"
      VALIDATION_INTERVAL_INIT: "30"
      VALIDATION_ATTEMPTS_THRESHOLD_INIT: "30"
      VALIDATION_INTERVAL: "30"
      VALIDATION_ATTEMPTS_THRESHOLD: "10"
    upstream:
      instance:
        $ref: /dependencies/ci-int/ci-int.yml
      name: RedHatInsights-xjoin-operator-gh-build-catalog-master-upstream-RedHatInsights-xjoin-operator-gh-build-master

- name: xjoin-pipeline
  path: /deploy/pipeline.yml
  url: https://github.com/RedHatInsights/xjoin-operator
  targets:
  - namespace:
      $ref: /services/insights/xjoin/namespaces/stage-xjoin-operator-stage.yml
    ref: master
    parameters:
      MANAGED_KAFKA: "true"
      MANAGED_KAFKA_SECRET_NAME: "stage-managed-kafka"
      MANAGED_KAFKA_SECRET_NAMESPACE: "xjoin-operator-stage"
    upstream:
      instance:
        $ref: /dependencies/ci-int/ci-int.yml
      name: RedHatInsights-xjoin-operator-gh-build-master
  - namespace:
      $ref: /services/insights/xjoin/namespaces/xjoin-operator-prod.yml
    ref: 61d5ac9dd274cd5cfbcdba93d9cecb8425dcd0a2
    parameters:
      KAFKA_CLUSTER_NAMESPACE: "platform-mq-prod"
      CONNECT_CLUSTER_NAMESPACE: "xjoin-prod"
      MANAGED_KAFKA: "true"
      MANAGED_KAFKA_SECRET_NAME: "prod-managed-kafka"
      MANAGED_KAFKA_SECRET_NAMESPACE: "xjoin-operator-prod"
  - namespace:
      $ref: /services/insights/xjoin/namespaces/xjoin-operator-perf.yml
    ref: master
    parameters:
      KAFKA_CLUSTER_NAMESPACE: "platform-mq-perf"
      CONNECT_CLUSTER_NAMESPACE: "xjoin-perf"
