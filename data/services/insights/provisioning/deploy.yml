---
$schema: /app-sre/saas-file-2.yml

labels:
  platform: insights
  service: provisioning

name: provisioning
description: provisioning app on the Insights Platform

app:
  $ref: /services/insights/provisioning/app.yml

slack:
  workspace:
    $ref: /dependencies/slack/redhat-internal.yml
  channel: provisioning-status

pipelinesProvider:
  $ref: /services/insights/pipelines/tekton.crc-pipelines.appsrep05ue1.yaml

managedResourceTypes:
- Deployment
- DeploymentConfig
- Service
- ConfigMap
- ClowdApp
- ClowdJobInvocation
- Frontend
- FloorPlan

imagePatterns:
- quay.io/cloudservices

authentication:
  image:
    path: insights/quay/cloudservices-push
    field: all
    version: 3
  code:
    path: app-sre/creds/github-app-sre-bot
    field: openshift-saas-deploy

resourceTemplates:
- name: provisioning-frontend
  path: /deploy/frontend.yaml
  url: https://github.com/RHEnVision/provisioning-frontend
  targets:
  - namespace: # EPHEMERAL frontend
      $ref: /services/insights/ephemeral/namespaces/ephemeral-base.yml
    disable: true  # do not create an app-sre deploy job for ephemeral namespace
    ref: internal  # populated by bonfire
  - namespace: # STAGE frontend
      $ref: /services/insights/ephemeral/namespaces/consoledot-frontend-stage.yml
    ref: main
    upstream:
      instance:
        $ref: /dependencies/ci-int/ci-int.yml
      name: RHEnVision-provisioning-frontend-gh-build-main
    parameters:
      ENV_NAME: env-stage

- name: provisioning-backend
  path: /deploy/clowdapp.yaml
  url: https://github.com/RHEnVision/provisioning-backend
  targets:
  - namespace: # EPHEMERAL api
      $ref: /services/insights/ephemeral/namespaces/ephemeral-base.yml
    disable: true  # do not create an app-sre deploy job for ephemeral namespace
    ref: internal  # populated by bonfire
    parameters:
      LOGGING_LEVEL: trace
      DATABASE_LOGGING_LEVEL: trace
      REST_ENDPOINTS_TRACE_DATA: true
  - namespace: # STAGE api
      $ref: /services/insights/provisioning/namespaces/provisioning-stage.yml
    ref: main
    upstream:
      instance:
        $ref: /dependencies/ci-int/ci-int.yml
      name: RHEnVision-provisioning-backend-gh-build-main
    promotion:
      publish:
      - provisioning-stage-deploy-success-channel
    parameters:
      LOGGING_LEVEL: trace
      DATABASE_LOGGING_LEVEL: debug
      FLOORIST_QUERY_PREFIX: "hms_analytics/provisioning/stage"
      ENV_NAME: stage
      IMAGEBUILDER_URL: http://${IMAGEBUILDER_HOST}:${IMAGEBUILDER_PORT}
      APP_NOTIFICATIONS_ENABLED: false
  - namespace: # PROD api
      $ref: /services/insights/provisioning/namespaces/provisioning-prod.yml
    ref: cc6a5546a6eeed241dcfb8ad6878e1322bebea8c
    parameters:
      LOGGING_LEVEL: trace
      DATABASE_LOGGING_LEVEL: debug
      FLOORIST_QUERY_PREFIX: "hms_analytics/provisioning/prod"
      ENV_NAME: prod
      IMAGEBUILDER_URL: http://${IMAGEBUILDER_HOST}:${IMAGEBUILDER_PORT}
      APP_NOTIFICATIONS_ENABLED: false
- name: provisioning-dashboards
  url: https://github.com/RHEnVision/provisioning-backend
  path: /deploy/dashboards
  provider: directory
  targets:
  - namespace:
      $ref: /services/observability/namespaces/app-sre-observability-stage-int.yml
    ref: main
  - namespace:
      $ref: /services/observability/namespaces/app-sre-observability-production-int.yml
    ref: cc6a5546a6eeed241dcfb8ad6878e1322bebea8c
