---
$schema: /app-sre/saas-file-2.yml

labels:
  service: hccm
  platform: insights

name: hccm-perf
description: hccm app on the Insights Platform deployed with Clowder

app:
  $ref: /services/insights/hccm/app.yml

pipelinesProvider:
  $ref: /services/insights/pipelines/tekton.crc-pipelines.appsrep05ue1.yaml

deployResources:
  requests:
    cpu: 300m
    memory: 600Mi
  limits:
    cpu: 300m
    memory: 600Mi

slack:
  workspace:
    $ref: /dependencies/slack/redhat-internal.yml
  channel: team-clouddot-info

managedResourceTypes:
- ClowdApp
- ConfigMap
- ClowdJobInvocation
- Frontend

imagePatterns:
- quay.io/cloudservices

authentication:
  image:
    path: insights/quay/cloudservices-push
    field: all
    version: 3

parameters:
  CLOWDER_ENABLED: true
  ACCOUNT_ENHANCED_METRICS: False

resourceTemplates:
  #- name: koku-cji
  #path: /deploy/koku-cji.yaml
  #url: https://github.com/project-koku/koku
  #targets:
  # perf
  #- namespace:
  #    $ref: /services/insights/hccm/namespaces/perf-hccm-perf.yml
  #  ref: 4a9bbef95f063bd4164aae7cc7ce8833338d6450
  #  parameters:
  #    CJI_INVOCATION: "01"

- name: koku
  path: /deploy/clowdapp.yaml
  url: https://github.com/project-koku/koku
  targets:
# Performance:
  - namespace:
      $ref: /services/insights/hccm/namespaces/perf-hccm-perf.yml
    ref: main
    upstream:
      instance:
        $ref: /dependencies/ci-ext/ci-ext.yml
      name: project-koku-koku-gh-build-main
    parameters:
      ############# MIGRATIONS #############
      # Change these settings when deploying migrations to Staging
      # Migrations Image Tag
      DBM_IMAGE_TAG: 13efbbb
      # Migrations Invocation
      DBM_INVOCATION: "00"
      # Migration directive is optional and should be in the form of:
      # <app>[:<migration>][,<app>[:<migration>]...]
      # Ex: "reporting:0200,api:0050"
      # Ex: "reporting:0200"
      # Ex: "reporting"
      # Ex: ""
      _MIGRATION_DIRECTIVE: ""
      ######################################
      APP_DOMAIN: apps.crcs02ue1.urby.p1.openshiftapps.com
      S3_BUCKET_NAME: hccm-perf-s3
      KOKU_SENTRY_ENV: perf
        #ENABLE_API_SENTRY: True
        #ENABLE_CELERY_SENTRY: True
        #DEMO_ACCOUNTS: '{"6193296":{"arn:aws:iam::589173575009:role/NisePopulatorAccessRole":{"source_type": "AWS", "report_prefix":"cur","report_name":"awscost"},"5d4eb34d-43c7-4b06-8257-1cb599b48d1e":{"source_type": "Azure", "report_prefix":"cur","report_name":"azurecost","container_name":"cur"}}}'
      ENABLE_PARQUET_PROCESSING: True
      ENABLE_S3_ARCHIVING: True
      ENABLE_TRINO_SOURCES: ''
      ENABLE_TRINO_SOURCE_TYPE: 'GCP'
      ENABLE_TRINO_ACCOUNTS: 'acct6193296'
      TRINO_DATE_STEP: 31
      AUTO_DATA_INGEST: True
      UPDATE_TIMEOUT: 14400
      RETAIN_NUM_MONTHS: 4
      VACUUM_DATA_DAY_OF_WEEK: 0
      REPORT_DOWNLOAD_SCHEDULE: "0 4,16 * * *"
      PARQUET_PROCESSING_BATCH_SIZE: "500000"
      PRESTO_HOST: trino-coordinator
      RBAC_CACHE_TIMEOUT: 1
      # Deployment specific variables:
      # koku-api
      KOKU_MIN_REPLICAS: 3
      KOKU_CPU_REQUEST: 100m
      KOKU_CPU_LIMIT: 1
      KOKU_MEMORY_REQUEST: 768Mi
      KOKU_MEMORY_LIMIT: 1536Mi
      # listener
      LISTENER_MIN_REPLICAS: 3
      LISTENER_CPU_REQUEST: 200m
      LISTENER_CPU_LIMIT: 500m
      LISTENER_MEMORY_REQUEST: 512Mi
      LISTENER_MEMORY_LIMIT: 1Gi
      # masu
      MASU_MIN_REPLICAS: 1
      MASU_MEMORY_REQUEST: 512Mi
      MASU_MEMORY_LIMIT: 1Gi
      # scheduler
      SCHEDULER_MIN_REPLICAS: 1
      SCHEDULER_MEMORY_REQUEST: 256Mi
      SCHEDULER_MEMORY_LIMIT: 512Mi
      # sources-client
      SOURCES_CLIENT_MIN_REPLICAS: 3
      SOURCES_CLIENT_CPU_REQUEST: 50m
      SOURCES_CLIENT_CPU_LIMIT: 250m
      SOURCES_CLIENT_MEMORY_REQUEST: 256Mi
      SOURCES_CLIENT_MEMORY_LIMIT: 512Mi
      # sources-listener
      SOURCES_LISTENER_MIN_REPLICAS: 1
      SOURCES_LISTENER_CPU_REQUEST: 50m
      SOURCES_LISTENER_CPU_LIMIT: 250m
      SOURCES_LISTENER_MEMORY_REQUEST: 256Mi
      SOURCES_LISTENER_MEMORY_LIMIT: 512Mi
      # workers global
      WORKER_PROC_ALIVE_TIMEOUT: 8
      # worker-celery
      WORKER_CELERY_MIN_REPLICAS: 3
      WORKER_CELERY_CPU_REQUEST: 50m
      WORKER_CELERY_CPU_LIMIT: 250m
      WORKER_CELERY_MEMORY_REQUEST: 512Mi
      WORKER_CELERY_MEMORY_LIMIT: 1Gi
      # worker-cost-model
      WORKER_COST_MODEL_MIN_REPLICAS: 3
      WORKER_COST_MODEL_CPU_REQUEST: 50m
      WORKER_COST_MODEL_CPU_LIMIT: 200m
      WORKER_COST_MODEL_MEMORY_REQUEST: 400Mi
      WORKER_COST_MODEL_MEMORY_LIMIT: 600Mi
      # worker-download
      WORKER_DOWNLOAD_MIN_REPLICAS: 3
      WORKER_DOWNLOAD_CPU_REQUEST: 500m
      WORKER_DOWNLOAD_CPU_LIMIT: 1
      WORKER_DOWNLOAD_MEMORY_REQUEST: 5Gi
      WORKER_DOWNLOAD_MEMORY_LIMIT: 8Gi
      # worker-ocp
      WORKER_OCP_MIN_REPLICAS: 3
      WORKER_OCP_CPU_REQUEST: 75m
      WORKER_OCP_CPU_LIMIT: 200m
      WORKER_OCP_MEMORY_REQUEST: 600Mi
      WORKER_OCP_MEMORY_LIMIT: 600Mi
      # worker-priority
      WORKER_PRIORITY_MIN_REPLICAS: 3
      WORKER_PRIORITY_CPU_REQUEST: 75m
      WORKER_PRIORITY_CPU_LIMIT: 500m
      WORKER_PRIORITY_MEMORY_REQUEST: 1Gi
      WORKER_PRIORITY_MEMORY_LIMIT: 2Gi
      # worker-refresh
      WORKER_REFRESH_MIN_REPLICAS: 3
      WORKER_REFRESH_CPU_REQUEST: 50m
      WORKER_REFRESH_CPU_LIMIT: 200m
      WORKER_REFRESH_MEMORY_REQUEST: 420Mi
      WORKER_REFRESH_MEMORY_LIMIT: 600Mi
      # worker-summary
      WORKER_SUMMARY_MIN_REPLICAS: 3
      WORKER_SUMMARY_CPU_REQUEST: 75m
      WORKER_SUMMARY_CPU_LIMIT: 200m
      WORKER_SUMMARY_MEMORY_REQUEST: 650Mi
      WORKER_SUMMARY_MEMORY_LIMIT: 800Mi
      # worker-hcs
      WORKER_HCS_MIN_REPLICAS: 3
      WORKER_HCS_CPU_REQUEST: 75m
      WORKER_HCS_CPU_LIMIT: 200m
      WORKER_HCS_MEMORY_REQUEST: 425Mi
      WORKER_HCS_MEMORY_LIMIT: 600Mi

- name: hive-metastore
  path: /deploy/clowdapp.yaml
  url: https://github.com/RedHatInsights/ubi-hive
  targets:
#Performance
  - namespace:
      $ref: /services/insights/hccm/namespaces/perf-hccm-perf.yml
    ref: ab1350614a39ae246c77fedd1bc97c56da3e4347
    parameters:
      IMAGE_TAG: 3.1.2-metastore-010
      S3_BUCKET_NAME: hccm-perf-s3
      CPU_REQUEST: 200m
      CPU_LIMIT: 500m
      MEMORY_REQUEST: 6Gi
      MEMORY_LIMIT: 16Gi
      MAX_HEAP_SIZE: 14G


- name: presto
  path: /deploy/clowdapp.yaml
  url: https://github.com/RedHatInsights/ubi-trino
  targets:
# Performance 
  - namespace:
      $ref: /services/insights/hccm/namespaces/perf-hccm-perf.yml
    ref: 9f03f48c1fb15f80d527b175a78379d7b5cdf39f
    parameters:
      CONFIGMAP_HASH: '000003' # when a `ref` update only contains changes to ConfigMaps, randomize this value to cause trino to redeploy
      IMAGE_TAG: 405-002
      S3_BUCKET_NAME: hccm-perf-s3
      MACHINE_POOL_OPTION: memory-optimized
      COORDINATOR_REPLICAS: 1
      WORKER_REPLICAS: 3
      COORDINATOR_CPU_REQUEST: 600m
      COORDINATOR_CPU_LIMIT: 2
      COORDINATOR_MEMORY_REQUEST: 12Gi
      COORDINATOR_MEMORY_LIMIT: 36Gi
      WORKER_CPU_REQUEST: 300m
      WORKER_CPU_LIMIT: 2
      WORKER_MEMORY_REQUEST: 6Gi
      WORKER_MEMORY_LIMIT: 10Gi
      QUERY_MAX_MEMORY_PER_NODE: 6.5GB # (jvm max - heap headroom)
      QUERY_MAX_MEMORY: 19.5GB # (max per node * worker count)
      QUERY_MAX_TOTAL_MEMORY: 39GB # (max-memory * 2)
      MEMORY_HEAP_HEADROOM_PER_NODE: 1GB
      MAX_HEAP_SIZE: 7680M
      LIVENESS_PROBE_PERIOD: 120
      LIVENESS_PROBE_TIMEOUT: 120

- name: koku-report-emailer
  path: /deploy/clowdapp.yaml
  url: https://github.com/project-koku/koku-report-emailer
  targets:
      #Performance 
  - namespace:
      $ref: /services/insights/hccm/namespaces/perf-hccm-perf.yml
    ref: main
    upstream:
      instance:
        $ref: /dependencies/ci-ext/ci-ext.yml
      name: project-koku-koku-report-emailer-gh-build-main
    parameters:
      EMAIL_SCHEDULE: '0 13 * * 1,3,5'

- name: koku-daily
  path: /deploy/clowdapp.yaml
  url: https://github.com/project-koku/koku-daily
  targets:
    #Performance
  - namespace:
      $ref: /services/insights/hccm/namespaces/perf-hccm-perf.yml
    ref: main
    upstream:
      instance:
        $ref: /dependencies/ci-ext/ci-ext.yml
      name: project-koku-koku-daily-gh-build-main
    parameters:
      PROMETHEUS_PUSH_GATEWAY: ${PROMETHEUS_PUSHGATEWAY}
      REPLICAS: 1
      APP_URL_PREFIX: /api/cost-management/v1/koku-daily/
      CPU_REQUEST: 125m
      CPU_LIMIT: 250m
      MEMORY_REQUEST: 250Mi
        #MEMORY_LIMIT: 500Mi
        #EMAIL_GROUPS: {"engineering": "cost-mgmt-metrics-eng@redhat.com", "marketing": "cost-mgmt-metrics-mkt@redhat.com"}
        #S3_BUCKET_NAME: hccm-perf-s3
