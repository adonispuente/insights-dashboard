---
$schema: /app-sre/saas-file-2.yml

labels:
  service: playbook-dispatcher
  platform: insights

name: playbook-dispatcher
description: The Playbook Dispatcher service enables other services to run Ansible Playbooks on connected hosts

app:
  $ref: /services/insights/playbook-dispatcher/app.yml

pipelinesProvider:
  $ref: /services/insights/pipelines/tekton.crc-pipelines.appsrep05ue1.yaml

deployResources:
  requests:
    cpu: 300m
    memory: 1Gi
  limits:
    cpu: 300m
    memory: 1Gi

slack:
  workspace:
    $ref: /dependencies/slack/coreos.yml
  channel: team-clouddot-info

managedResourceTypes:
- ClowdApp
- ClowdJobInvocation
- Deployment
- KafkaConnect
- KafkaConnector
- Service
- ConfigMap
- CronJob

imagePatterns:
- quay.io/cloudservices

allowedSecretParameterPaths:
- insights/secrets/insights-stage/strimzi-stage
- insights/secrets/insights-prod/strimzi-prod

authentication:
  image:
    path: insights/quay/cloudservices-push
    field: all
    version: 3

resourceTemplates:
- name: playbook-dispatcher
  path: /deploy/clowdapp.yaml
  url: https://github.com/RedHatInsights/playbook-dispatcher
  targets:
  - namespace:
      $ref: /services/insights/playbook-dispatcher/namespaces/stage.yml
    ref: master
    upstream:
      instance:
        $ref: /dependencies/ci-ext/ci-ext.yml
      name: RedHatInsights-playbook-dispatcher-gh-build-master
    parameters:
      LOG_LEVEL: debug
      RETURN_URL: https://cert.${PLATFORM_HOSTNAME}/api/ingress/v1/upload
  - namespace:
      $ref: /services/insights/playbook-dispatcher/namespaces/prod.yml
    ref: 80d20f0fa420a3ff21dcfb73e5f25db3010b19f1
    parameters:
      LOG_LEVEL: info
      RETURN_URL: https://cert.${PLATFORM_HOSTNAME}/api/ingress/v1/upload
      POPULATOR_RUN_NUMBER: "2"
  - namespace:
      $ref: /services/insights/ephemeral/namespaces/ephemeral-base.yml
    disable: true  # do not create an app-sre deploy job for ephemeral namespace
    ref: internal  # populated by bonfire
    parameters:
      REPLICAS_API: 1
      REPLICAS_RESPONSE_CONSUMER: 1
      REPLICAS_VALIDATOR: 1
      DB_SSLMODE: disable
      RBAC_IMPL: mock
      RBAC_HOST: foobar
      CLOUD_CONNECTOR_IMPL: mock
      CLOUD_CONNECTOR_HOST: cloud-connector
      PSK_AUTH_TEST: xwKhCUzgJ8
      TENANT_TRANSLATOR_HOST: mock
      TENANT_TRANSLATOR_IMPL: mock

- name: playbook-dispatcher-connect
  path: /deploy/connect.yaml
  url: https://github.com/RedHatInsights/playbook-dispatcher
  targets:
  - namespace:
      $ref: /services/insights/playbook-dispatcher/namespaces/stage.yml
    ref: master
    upstream:
      instance:
        $ref: /dependencies/ci-ext/ci-ext.yml
      name: RedHatInsights-playbook-dispatcher-gh-build-master
    parameters:
      CONNECTOR_PAUSE: "false"
      KAFKA_TOPIC_PREFIX: "platform-mq-stage."
    secretParameters:
      - name: KAFKA_BOOTSTRAP_HOST
        secret:
          path: insights/secrets/insights-stage/strimzi-stage/clowder-oauth
          field: hostname
          version: 6 
      - name: KAFKA_BOOTSTRAP_PORT
        secret:
          path: insights/secrets/insights-stage/strimzi-stage/clowder-oauth
          field: port
          version: 6
      - name: KAFKA_USERNAME
        secret:
          path: insights/secrets/insights-stage/strimzi-stage/clowder-oauth
          field: username
          version: 6
      - name: KAFKA_SASL_MECHANISM
        secret:
          path: insights/secrets/insights-stage/strimzi-stage/client-config
          field: sasl_mechanism
          version: 3
      - name: KAFKA_SASL_SECURITY_PROTOCOL
        secret:
          path: insights/secrets/insights-stage/strimzi-stage/client-config
          field: security_protocol
          version: 3
  - namespace:
      $ref: /services/insights/playbook-dispatcher/namespaces/prod.yml
    ref: 047e256da507f29d0e0ae803a4b1d688eb74a2cb
    parameters:
      EVENT_CONSUMER_REPLICAS: 0
  - namespace:
      $ref: /services/insights/ephemeral/namespaces/ephemeral-base.yml
    disable: true
    ref: internal
    parameters:
      KAFKA_BOOTSTRAP_HOST: ephemeral-kafka-bootstrap
      KAFKA_BOOTSTRAP_PORT: 9092
      KAFKA_REPLICATION_FACTOR: '1'
      DB_SSLMODE: disable
      XMX: 512m
      XMS: 512m

- name: playbook-dispatcher-connect-rhosak
  path: /deploy/connect-rhosak.yaml
  url: https://github.com/RedHatInsights/playbook-dispatcher
  targets:
  - namespace:
      $ref: /services/insights/playbook-dispatcher/namespaces/stage.yml
    ref: master
    upstream:
      instance:
        $ref: /dependencies/ci-ext/ci-ext.yml
      name: RedHatInsights-playbook-dispatcher-gh-build-master
    parameters:
      CONNECTOR_PAUSE: "false"
    delete: true
    secretParameters:
      - name: KAFKA_BOOTSTRAP_HOST
        secret:
          path: insights/secrets/insights-stage/strimzi-stage/clowder-oauth
          field: hostname
          version: 4
      - name: KAFKA_BOOTSTRAP_PORT
        secret:
          path: insights/secrets/insights-stage/strimzi-stage/clowder-oauth
          field: port
          version: 4
      - name: KAFKA_USERNAME
        secret:
          path: insights/secrets/insights-stage/strimzi-stage/clowder-oauth
          field: username
          version: 4
      - name: KAFKA_SASL_MECHANISM
        secret:
          path: insights/secrets/insights-stage/strimzi-stage/client-config
          field: sasl_mechanism
          version: 3 
      - name: KAFKA_SASL_SECURITY_PROTOCOL
        secret:
          path: insights/secrets/insights-stage/strimzi-stage/client-config
          field: security_protocol 
          version: 3

- name: playbook-dispatcher-dashboards
  url: https://github.com/RedHatInsights/playbook-dispatcher
  path: /dashboard
  provider: directory
  targets:
  - namespace:
      $ref: /services/observability/namespaces/app-sre-observability-stage.yml
    ref: master
  - namespace:
      $ref: /services/observability/namespaces/app-sre-observability-production.yml
    ref: 80d20f0fa420a3ff21dcfb73e5f25db3010b19f1
