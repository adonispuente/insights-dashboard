$schema: /openshift/namespace-1.yml

labels:
  service: cna

name: cna-stage

description: Staging namespace for the CNA service

cluster:
  $ref: /openshift/app-sre-stage-01/cluster.yml

app:
  $ref: /services/cna/app.yml

environment:
  $ref: /products/cna/environments/stage.yml

managedRoles: true

sharedResources:
- $ref: /services/app-sre/shared-resources/quayio-pull-secret.yml

networkPoliciesAllow:
- $ref: /services/observability/namespaces/openshift-customer-monitoring.app-sre-stage-01.yml

openshiftResources:
- provider: vault-secret
  path: app-interface/cna/stage/runtime
  version: 3
- provider: route
  path: /cna/stage/cna.route.yaml

managedExternalResources: true

externalResources:
- provider: aws
  provisioner:
    $ref: /aws/app-sre-stage/account.yml
  resources:
  - provider: rds
    identifier: cna-stage
    # we start with a small DB
    defaults: /terraform/resources/app-sre-stage/rds-3-pg13.yml
  - provider: elasticache
    identifier: cna-redis-stage
    defaults: /terraform/resources/cna/elasticache-stage.yml
    output_resource_name: cna-redis
- provider: aws
  provisioner:
    $ref: /aws/cna-service-stage/account.yml
  resources:
  - provider: s3
    # this is the bucket for terraform state
    identifier: cna-s3-stage
    defaults: /terraform/resources/s3-private-1.yml
    output_resource_name: cna-s3
  - provider: aws-iam-service-account
    identifier: cna-service-stage
    output_resource_name: cna-service-iam
    user_policy:
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": [
              "sts:AssumeRole"
            ],
            "Effect": "Allow",
            "Resource": "arn:aws:iam::*:role/RH-CNA"
          },
          {
            "Action": [
              "sts:AssumeRole"
            ],
            "Effect": "Allow",
            "Resource": "arn:aws:iam::*:role/network-mgmt-*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "s3:PutObject",
              "s3:GetObject",
              "s3:DeleteObject"
            ],
            "Resource": ["arn:aws:s3:::cna-s3/*"]
          }
        ]
      }
