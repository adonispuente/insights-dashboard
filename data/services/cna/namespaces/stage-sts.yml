$schema: /openshift/namespace-1.yml

labels:
  service: cna

name: cna-stage

description: Staging namespace for the CNA service

cluster:
  $ref: /openshift/appsres06ue1/cluster.yml

app:
  $ref: /services/cna/app.yml

environment:
  $ref: /products/cna/environments/stage.yml

managedRoles: true

managedResourceTypes:
- Role.rbac.authorization.k8s.io
- RoleBinding.rbac.authorization.k8s.io
- NetworkPolicy
- Secret

sharedResources:
- $ref: /services/app-sre/shared-resources/default-network-policies.yaml
- $ref: /services/app-sre/shared-resources/quayio-pull-secret.yml

networkPoliciesAllow:
- $ref: /services/observability/namespaces/openshift-customer-monitoring.appsres06ue1.yml

openshiftResources:
- provider: vault-secret
  path: app-interface/cna/stage/runtime
  version: 5
# allows creation of Taskruns
- provider: resource
  path: /cna/stage/taskrunner.rolebinding.yaml
- provider: resource
  path: /cna/stage/taskrunner.role.yaml
# AWS STS credentials
- provider: openshift-resources
  path: /cna/cna-aws-credentials.secret.yaml
# TODO - route

managedExternalResources: true

externalResources:
# todo: bring over RDS, elasticache and the S3 bucket from stage.yml
- provider: aws
  provisioner:
    $ref: /aws/app-sre-rosa/account.yml
  resources:
  # this is the role that allows the cna-sa kube service account to assume the
  # cna-service-stage role in the cna-service-stage AWS account via
  # AssumeRoleWithWebIdentity and a bound service token
  - provider: aws-iam-role
    identifier: cna-service-stage-appsres06ue1
    assume_role:
      Federated: arn:aws:iam::366871242094:oidc-provider/rh-oidc.s3.us-east-1.amazonaws.com/25qam2sc4pg79u1vbstr81f2snhea8gm
    assume_action: "AssumeRoleWithWebIdentity"
    # the condition makes sure that only the cna-sa service-account in the cna-stage namespace can assume this role
    assume_condition:
      StringEquals:
        "rh-oidc.s3.us-east-1.amazonaws.com/25qam2sc4pg79u1vbstr81f2snhea8gm:sub": "system:serviceaccount:cna-stage:cna-sa"
    # this is the policy on the "cluster-side", allowing the cna-sa service account to assume the
    # cna-service-stage role in the cna-service-stage AWS account
    inline_policy:
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": "sts:AssumeRole",
            "Resource": "arn:aws:iam::730613587754:role/cna-service-stage"
          }
        ]
      }
    output_resource_name: cna-sts-iam
- provider: aws
  provisioner:
    $ref: /aws/cna-service-stage/account.yml
  resources:
  # this is the jump-host IAM role CNA users grant assume role to for their AWS accounts
  # this role is NOT TO BE USED DIRECTLY by CNA or anyone, instead this role needs to
  # be assumed by the CNA service account via cluster STS
  - provider: aws-iam-role
    identifier: cna-service-stage
    output_resource_name: cna-service-role-arn
    assume_role:
      AWS:
      # for this to work the role_session_name needs to be set to `cna` while assuming
      # into this role
      - arn:aws:sts::366871242094:assumed-role/cna-service-stage-appsres06ue1/cna
    inline_policy:
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": [
              "sts:AssumeRole"
            ],
            "Effect": "Allow",
            "Resource": "arn:aws:iam::*:role/RH-CNA"
          },
          {
            "Action": [
              "sts:AssumeRole"
            ],
            "Effect": "Allow",
            "Resource": "arn:aws:iam::*:role/network-mgmt-*"
          },
          {
            "Effect": "Allow",
            "Action": "s3:ListBucket",
            "Resource": "arn:aws:s3:::cna-s3-stage"
          },
          {
            "Effect": "Allow",
            "Action": [
              "s3:PutObject",
              "s3:GetObject",
              "s3:DeleteObject"
            ],
            "Resource": ["arn:aws:s3:::cna-s3-stage/*"]
          }
        ]
      }

glitchtipProjects:
- $ref: /dependencies/glitchtip/projects/glitchtip-production/cna-stage.yml
