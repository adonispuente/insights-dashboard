---
$schema: /openshift/namespace-1.yml

labels: {}

name: osd-fleet-manager-stage
description: Stage namespace for OSD Fleet Manager

cluster:
  $ref: /openshift/app-sre-stage-01/cluster.yml

app:
  $ref: /services/ocm/osd-fleet-manager/app.yml

environment:
  $ref: /products/osdv4/environments/stage.yml

networkPoliciesAllow:
- $ref: /services/observability/namespaces/openshift-customer-monitoring.app-sre-stage-01.yml

managedRoles: true

managedResourceTypes:
# - ConfigMap
# - Secret
- ServiceAccount

sharedResources:
- $ref: /services/app-sre/shared-resources/quayio-pull-secret.yml

openshiftResources:
- provider: vault-secret
  path: app-interface/osd-fleet-manager/stage/fleet-manager
  version: 4
  annotations:
    qontract.recycle: "true"
- provider: vault-secret
  path: app-interface/osd-fleet-manager/stage/fleet-manager-hacks
  version: 1
  annotations:
    qontract.recycle: "true"
- provider: resource-template
  path: /services/ocm/serviceaccount.yaml
  variables:
    name: fleet-manager

managedExternalResources: true

externalResources:
- provider: aws
  provisioner:
    $ref: /aws/app-sre-stage/account.yml
  resources:
  - provider: rds
    identifier: osd-fleet-manager-stage
    defaults: /terraform/resources/app-sre-stage/staging/rds-1.yml
    output_resource_name: osd-fleet-manager-rds
    ca_cert:
      path: app-interface/global/rds-ca-cert
      field: us-east-1
      version: 2
  - provider: aws-iam-service-account
    identifier: osd-fleet-manager-stage-network-mgmt
    user_policy:
      {
        "Version": "2012-10-17",
        "Statement": [{
          "Action": [
            "sts:AssumeRole"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }]
      }
    output_resource_name: fleet-manager-network-mgmt-creds
    aws_infrastructure_access:
      cluster:
        $ref: /openshift/app-sre-stage-01/cluster.yml
      access_level: network-mgmt
