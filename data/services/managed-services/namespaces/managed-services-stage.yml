---
$schema: /openshift/namespace-1.yml

labels: {}

name: managed-services-stage
description: staging namespace for managed-services

cluster:
  $ref: /openshift/app-sre-stage-01/cluster.yml

app:
  $ref: /services/managed-services/app.yml

environment:
  $ref: /products/osdv4/environments/stage.yml

networkPoliciesAllow:
  - $ref: /services/observability/namespaces/openshift-customer-monitoring.app-sre-stage-01.yml

managedRoles: true

managedResourceTypes:
  - ServiceAccount
  - ConfigMap
  - NetworkPolicy

openshiftResources:
- provider: vault-secret
  path: managed-services/quay-org-accounts/rhoas/robots/rhoas-pull-docker
  version: 1
  type: kubernetes.io/dockerconfigjson
- provider: resource-template
  path: /services/managed-services/serviceaccount.yaml
  variables:
    name: kas-fleet-manager
- provider: route
  path: /services/managed-services/stage/kas-fleet-manager.route.yaml
- provider: vault-secret
  name: kas-fleet-manager
  path:  app-interface/managed-service-api/stage/service/credentials
  version: 33
  annotations:
    qontract.recycle: "true"
- provider: vault-secret
  name: kas-fleet-manager-dataplane-certificate
  path:  app-interface/managed-service-api/stage/service/dataplane-certificate
  version: 4
  annotations:
    qontract.recycle: "true"
- provider: vault-secret
  name: kas-fleet-manager-observatorium-configuration-red-hat-sso
  path:  app-interface/managed-service-api/stage/service/observatorium
  version: 8
  annotations:
    qontract.recycle: "true"
- provider: resource
  path: /services/managed-services/stage/kas-fleet-manager-envoy.configmap.yaml
- provider: vault-secret
  path: app-sre/unleash/managed-services-stage-unleash-token
  version: 1
- provider: resource
  path: /services/managed-services/stage/connector-catalog-camel-aws.configmap.yaml
- provider: resource
  path: /services/managed-services/stage/connector-catalog-camel-misc.configmap.yaml
- provider: resource
  path: /services/managed-services/stage/connector-catalog-debezium-mongodb.configmap.yaml
- provider: resource
  path: /services/managed-services/stage/connector-catalog-debezium-mysql.configmap.yaml
- provider: resource
  path: /services/managed-services/stage/connector-catalog-debezium-postgres.configmap.yaml
- provider: resource
  path: /services/managed-services/stage/observatorium-token-refresher.networkpolicy.yaml

managedTerraformResources: true

terraformResources:
- provider: rds
  account: app-sre
  # This should be  prefixed by "kas-fleet-manager" but we held renaming for now to avoid loosing data.
  # See https://gitlab.cee.redhat.com/service/app-interface/-/merge_requests/14437#note_2097734 for more details.
  identifier: managed-services-api-staging
  defaults: /terraform/resources/managed-services/staging/rds-2-cloudwatch-enabled.yml
  parameter_group: /terraform/resources/managed-services/staging/managed-services-stage-rds-parameter-group-pg12.yml
  output_resource_name: kas-fleet-manager-rds
  ca_cert:
    path: app-interface/global/rds-ca-cert
    field: us-east-1
    version: 2
