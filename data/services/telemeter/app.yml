---
$schema: /app-sre/app-1.yml

labels:
  service: telemeter

name: telemeter

description: |
  Telemeter implements a Prometheus federation push client and server to allow
  isolated Prometheus instances that cannot be scraped from a central Prometheus
  to instead perform push federation to a central location.

serviceOwner:
  name: Telemeter Team
  email: monitoring-telemeter-service@redhat.com

performanceParameters:
  SLO: 90

serviceDocs:
- /telemeter/readme.md

dependencies:
- $ref: /dependencies/quay/service.yml

quayRepos:
- org:
    $ref: /dependencies/quay/app-sre.yml
  items:
  - name: telemeter
    description: ''
    public: true

endPoints:
- name: infogw
  description: telemeter-server
  url: https://infogw.api.openshift.com/
- name: infogw-data
  description: prometheus
  url: https://infogw-data.api.openshift.com/
- name: infogw-cache
  description: prometheus (cache)
  url: https://infogw-cache.api.openshift.com/

codeComponents:
- name: telemeter
  resource: upstream
  url: https://github.com/openshift/telemeter
- name: telemeter
  resource: cicd
  url: https://ci.ext.devshift.net/view/telemeter/
- name: telemeter
  resource: saasrepo
  url: https://github.com/app-sre/saas-telemeter/
- name: telemeter-cache
  resource: upstream
  url: https://github.com/app-sre/saas-telemeter-cache-manifests/
- name: telemeter-cache
  resource: cicd
  url: https://ci.ext.devshift.net/view/telemeter-cache/
- name: telemeter-cache
  resource: saasrepo
  url: https://github.com/app-sre/saas-telemeter-cache/

escalations:
  default: &default
    slackRecipients:
    - "#oncall-app-sre"
    - "#sd-app-sre-alert"
    emailRecipients:
    - "monitoring-telemeter-service@redhat.com"
    mattermostRecipients:
    - "#sd-app-sre-alert"
  warning:
    <<: *default
    labels: [warning, medium] # optional, defaults to the parent key name
  critical:
    labels: [critical, high, disaster] # optional, defaults to the parent key name
    <<: *default
