---
$schema: /dependencies/jenkins-config-1.yml

labels:
  service: telemeter

name: ci-int-telemeter-jobs

description: ''

instance:
  $ref: /dependencies/ci-int/ci-int.yml

type: jobs

config:
- project:
    name: telemeter-ci
    label: telemeter
    node: app-sre
    gh_org: openshift
    gh_repo: telemeter
    quay_org: app-sre
    kube_cluster: app-sre-stage-01
    kube_namespace: telemeter-stage
    saasherder_context: telemeter
    saasherder_object_blacklist: 'Route,Secret,ConfigMap,ClusterRole,ClusterRoleBinding' # Default: Route,Secret,ConfigMap,ServiceAccount
    saas_git: https://gitlab.cee.redhat.com/service/saas-telemeter.git
    jobs:
    - 'gh-build-master':
        display_name: telemeter build master

- project:
    name: observatorium-ci
    label: telemeter
    node: app-sre
    gl_group: observatorium
    gl_project: configuration
    quay_org: app-sre
    kube_cluster: app-sre-stage-01
    kube_namespace: telemeter-stage
    saasherder_context: telemeter
    saasherder_services: observatorium observatorium-jaeger
    saasherder_object_blacklist: 'Route,Secret,ConfigMap,ClusterRole,ClusterRoleBinding' # Default: Route,Secret,ConfigMap,ServiceAccount
    saas_git: https://gitlab.cee.redhat.com/service/saas-telemeter.git
    jobs:
    - 'gl-build-master':
        display_name: configuration build master

- project:
    name: observatorium-nginx
    label: telemeter
    node: app-sre
    gh_org: observatorium
    gh_repo: nginx
    quay_org: app-sre
    kube_cluster: app-sre-stage-01
    kube_namespace: telemeter-stage
    build_deploy_script_path: "./build_deploy.sh"
    jobs:
    - 'gh-build-master':
        display_name: nginx build master

- project:
    name: telemeter-saas
    label: telemeter
    node: app-sre
    gl_group: service
    gl_project: saas-telemeter
    kube_cluster: app-sre
    kube_namespace: telemeter-production
    saasherder_context: telemeter
    saasherder_object_blacklist: 'Route,Secret,ConfigMap,ClusterRole,ClusterRoleBinding' # Default: Route,Secret,ConfigMap,ServiceAccount
    manifest_bouncer_options: '--disable-burstable --enable-requests --enable-limits --enable-public-resources'
    image_pattern: '^(quay\.io/(thanos/thanos|cortexproject/cortex|observatorium/thanos-receive-controller|observatorium/up|observatorium/observatorium|app-sre/jaegertracing-all-in-one|app-sre/jaegertracing-jaeger-agent|app-sre/telemeter|app-sre/observatorium-receive-proxy|app-sre/openshift-oauth-proxy|openshift/origin-oauth-proxy|app-sre/memcached|prometheus/memcached-exporter|app-sre/nginx))'
    quay_org: app-sre
    jobs:
    - 'saas-deploy':
        display_name: saas deploy
    - 'saas-pr-check':
        display_name: saas pr check

# Temporary job to promote to app-sre-prod-02 cluster as well. Delete before migration
# Anything that needs to be deployed to the prod-02 cluster until then should be committed to the telemeter-app-sre-prod-02-green branch
- project:
    name: telemeter-saas-prod02-temp
    branch: telemeter-app-sre-prod-02-green
    label: telemeter
    node: app-sre
    gl_group: service
    gl_project: saas-telemeter
    kube_cluster: app-sre-prod-02
    kube_namespace: telemeter-production
    saasherder_context: telemeter
    saasherder_object_blacklist: 'Route,Secret,ConfigMap,ClusterRole,ClusterRoleBinding' # Default: Route,Secret,ConfigMap,ServiceAccount
    manifest_bouncer_options: '--disable-burstable --enable-requests --enable-limits --enable-public-resources'
    image_pattern: '^(quay\.io/(thanos/thanos|cortexproject/cortex|observatorium/thanos-receive-controller|observatorium/up|observatorium/observatorium|app-sre/jaegertracing-all-in-one|app-sre/jaegertracing-jaeger-agent|app-sre/telemeter|app-sre/observatorium-receive-proxy|app-sre/openshift-oauth-proxy|openshift/origin-oauth-proxy|app-sre/memcached|prometheus/memcached-exporter|app-sre/nginx))'
    quay_org: app-sre
    upstream: service-saas-telemeter-telemeter-saas-deploy
    dry_run: "no"
    slack_channel_notification: '#sd-app-sre-alert-test'
    slack_notify_start: True
    jobs:
    - 'saas-deploy-with-upstream':
        display_name: saas deploy app-sre-prod-02
