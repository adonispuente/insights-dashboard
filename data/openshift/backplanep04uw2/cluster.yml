---
$schema: /openshift/cluster-1.yml

labels:
  service: backplane

name: backplanep04uw2
description: backplanep04uw2 cluster
consoleUrl: https://console-openshift-console.apps.backplanep04uw2.cxr0.p1.openshiftapps.com
kibanaUrl: ''
prometheusUrl: https://prometheus.backplanep04uw2.devshift.net
alertmanagerUrl: https://alertmanager.backplanep04uw2.devshift.net
serverUrl: https://api.backplanep04uw2.cxr0.p1.openshiftapps.com:6443
elbFQDN: elb.apps.backplanep04uw2.cxr0.p1.openshiftapps.com

auth:
- service: oidc
  name: redhat-app-sre-auth

ocm:
  $ref: /dependencies/ocm/production.yml

managedGroups:
- dedicated-admins

# managedClusterRoles: true

spec:
  product: rosa
  account:
    $ref: /aws/sd-infra-prod-01/account.yml
  id: 24qqjt555ss01btcjq34u56igc1fb1q8
  external_id: a71ac0cb-4fb0-45d7-86df-e3f1ec2562bc
  provider: aws
  region: us-west-2
  channel: candidate
  version: 4.13.0
  initial_version: 4.13.0
  multi_az: true
  nodes: 9
  instance_type: m5.xlarge
  private: true
  provision_shard_id: e78ec522-04c3-11ec-b4f0-8c1645a911be
  disable_user_workload_monitoring: true
  hypershift: false
  subnet_ids:
  - subnet-0e2a48ff3d2551a78
  - subnet-0fda93a58444032b8
  - subnet-0ec489f605b461cd5
  availability_zones:
  - us-east-1a
  - us-east-1b
  - us-east-1c

automationToken:
  path: app-sre/creds/kube-configs/backplanep04uw2
  field: token
clusterAdmin: true
clusterAdminAutomationToken:
  path: app-sre/creds/kube-configs/backplanep04uw2-cluster-admin
  field: token

jumpHost:
  $ref: /openshift/bastion.ci.int.devshift.net.jumphost.yml

upgradePolicy:
  workloads:
  - backplane
  schedule: 0 14 * * 1-4
  conditions:
    soakDays: 20
    mutexes:
    - backplane

network:
  type: OVNKubernetes
  vpc: 10.170.44.0/22
  service: 172.30.0.0/16
  pod: 10.128.0.0/14
internal: false

peering:
  connections:
  # Jenkins and the internal app-sre bastion
  - provider: account-vpc
    name: backplanep04uw2_app-sre-ci-int
    vpc:
      $ref: /aws/app-sre/vpcs/ci-int.yml
    manageRoutes: true
    manageAccountRoutes: true
    assumeRole: arn:aws:iam::049267941105:role/network-mgmt-backplanep04uw2
  # qontract integrations / tekton  on stage
  - provider: cluster-vpc-requester
    name: backplanep04uw2_appsres03ue1
    cluster:
      $ref: /openshift/appsres03ue1/cluster.yml
    manageRoutes: true
    assumeRole: arn:aws:iam::049267941105:role/network-mgmt-backplanep04uw2
  # qontract integrations / tekton on prod
  - provider: cluster-vpc-requester
    name: backplanep04uw2_appsrep05ue1
    cluster:
      $ref: /openshift/appsrep05ue1/cluster.yml
    manageRoutes: true
    assumeRole: arn:aws:iam::049267941105:role/network-mgmt-backplanep04uw2
  # backplane access to privatelink & hhypershift hosted clusters
  - provider: account-tgw
    name: backplanep04uw2
    account:
      $ref: /aws/osd-privatelink-stage/account.yml
    assumeRole: arn:aws:iam::049267941105:role/network-mgmt-backplanep04uw2
    tags:
      osd: privatelink
    cidrBlock: 172.16.0.0/12
    manageRoutes: true
    manageSecurityGroups: true
  # access to backplane from OSD bastions
  # This should not be needed anymore with backplane allowing traffic from Internet
  # - provider: account-vpc-mesh
  #   name: backplanep04uw2_osd-bastion-stage
  #   account:
  #     $ref: /aws/osd-bastion-stage/account.yml
  #   tags:
  #     osd: backplane
  #   manageRoutes: true
  #   assumeRole: arn:aws:iam::611491592236:role/network-mgmt-backplanep04uw2

# observabilityNamespace:
#   $ref: /services/observability/namespaces/openshift-customer-monitoring.backplanep04uw2.yml

disable:
  integrations:
  - openshift-groups
  - openshift-users
  - slack-usergroups
managedClusterRoles: true
observabilityNamespace:
  $ref:
    /services/observability/namespaces/openshift-customer-monitoring.backplanep04uw2.yml
