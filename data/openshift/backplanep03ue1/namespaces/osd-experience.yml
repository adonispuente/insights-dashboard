---
$schema: /openshift/namespace-1.yml

labels: {}

name: osd-experience
description: Namespace for resources to provision resources required to create an OSD experience

cluster:
  $ref: /openshift/backplanep03ue1/cluster.yml

app:
  $ref: /services/app-sre/app.yml

environment:
  $ref: /products/app-sre/environments/production.yml

managedExternalResources: true

externalResources:
- provider: aws
  provisioner:
    $ref: /aws/sd-infra-prod-01/account.yml
  resources:
  # Mocking the network-mgmt role of the OSD AWS Infrastructure Access feature
  # And providing the role defined in `assume_role` permissions to assume
  # the provisioned role. This role is created in the cluster's AWS account.
  # Since this is a ROSA cluster, we create the role in the containing AWS account.
  # This is replacing the `awsInfrastructureAccess` feature in app-interface.
  - provider: aws-iam-role
    identifier: network-mgmt-backplanep03ue1
    # users that are allowed to assume this role
    assume_role:
      AWS:
      # app-sre
      - arn:aws:iam::950916221866:user/terraform
      # osd-privatelink-prod
      - arn:aws:iam::710019948333:user/terraform
      # app-sre/backplane-vpc-backplanep03ue1 allows hive to associate hostedzones
      - arn:aws:iam::950916221866:user/backplane-vpc-backplanep03ue1
    # copied (and modified) with love from
    # https://github.com/openshift/aws-account-operator/blob/84b11ddceb6baa5a2ee4fae56ce6fe686b415db8/hack/olm-registry/olm-artifacts-template.yaml#L105-L269
    inline_policy:
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "ec2:CreateTransitGatewayVpcAttachment"
            ],
            "Resource": [
              "arn:aws:ec2:*:*:subnet/*",
              "arn:aws:ec2:*:*:transit-gateway/*",
              "arn:aws:ec2:*:*:vpc/*",
              "arn:aws:ec2:*:*:transit-gateway-attachment/*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "iam:CreateServiceLinkedRole"
            ],
            "Resource": [
              "arn:aws:iam::*:role/aws-service-role/transitgateway.amazonaws.com/AWSServiceRoleForVPCTransitGateway*"
            ],
            "Condition": {}
          },
          {
            "Effect": "Allow",
            "Action": [
              "iam:AttachRolePolicy",
              "iam:PutRolePolicy"
            ],
            "Resource": [
              "arn:aws:iam::*:role/aws-service-role/transitgateway.amazonaws.com/AWSServiceRoleForVPCTransitGateway*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "ec2:AcceptVpcPeeringConnection",
              "ec2:CreateVPCEndpoint",
              "ec2:CreateVpnConnectionRoute",
              "ec2:DeleteVpnConnectionRoute",
              "ec2:ModifyVpcPeeringConnectionOptions",
              "ec2:RejectVpcPeeringConnection",
              "ec2:CreateNetworkInterface",
              "ec2:ModifyNetworkInterfaceAttribute",
              "ec2:DeleteNetworkInterface",
              "ec2:CreateNetworkInterfacePermission",
              "ec2:DescribeVpcs"
            ],
            "Resource": [
              "*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "ram:AcceptResourceShareInvitation",
              "ram:DeleteResourceShare",
              "ram:GetResourcePolicies",
              "ram:GetResourceShareAssociations",
              "ram:GetResourceShareInvitations",
              "ram:GetResourceShares",
              "ram:ListPendingInvitationResources",
              "ram:ListPrincipals",
              "ram:ListResources",
              "ram:RejectResourceShareInvitation"
            ],
            "Resource": [
              "*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "route53resolver:AssociateResolverRule",
              "route53resolver:DeleteResolverRule",
              "route53resolver:DisassociateResolverRule",
              "route53resolver:GetResolverRule",
              "route53resolver:GetResolverRuleAssociation",
              "route53resolver:ListResolverRuleAssociations",
              "route53resolver:ListResolverRules",
              "route53:AssociateVPCWithHostedZone",
              "route53:DisassociateVPCFromHostedZone"
            ],
            "Resource": [
              "*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "route53:ListHostedZones",
              "route53:ListHostedZonesByVPC",
              "route53:CreateVPCAssociationAuthorization",
              "route53:DeleteVPCAssociationAuthorization",
              "route53:AssociateVPCWithHostedZone"
            ],
            "Resource": [
              "*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "ram:*"
            ],
            "Resource": [
              "*"
            ],
            "Condition": {
              "StringEquals": {
                "ram:RequestedResourceType": "route53resolver:ResolverRule"
              }
            }
          },
          {
            "Effect": "Allow",
            "Action": [
              "ec2:CreateCustomerGateway",
              "ec2:DeleteCustomerGateway",
              "ec2:CreateVpnGateway",
              "ec2:AttachVpnGateway",
              "ec2:DetachVpnGateway",
              "ec2:DeleteVpnGateway",
              "ec2:CreateVpnConnection",
              "ec2:ModifyVpnConnection",
              "ec2:ModifyVpnTunnelOptions",
              "ec2:DeleteVpnConnection",
              "ec2:EnableVgwRoutePropagation",
              "ec2:DisableVgwRoutePropagation"
            ],
            "Resource": [
              "*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "ec2:CreateRoute",
              "ec2:CreateVpcPeeringConnection",
              "ec2:DeleteRoute",
              "ec2:DeleteVpcPeeringConnection"
            ],
            "Resource": [
              "*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "ec2:CreateVpnGateway",
              "directconnect:*",
              "ec2:DeleteVpnGateway",
              "ec2:AttachVpnGateway",
              "ec2:DetachVpnGateway"
            ],
            "Resource": [
              "*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "iam:CreateServiceLinkedRole"
            ],
            "Resource": [
              "arn:aws:iam::*:role/aws-service-role/transitgateway.amazonaws.com/*"
            ],
            "Condition": {}
          },
          {
            "Effect": "Allow",
            "Action": [
              "iam:AttachRolePolicy",
              "iam:PutRolePolicy"
            ],
            "Resource": [
              "arn:aws:iam::*:role/aws-service-role/transitgateway.amazonaws.com/*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "ec2:CreateTags",
              "ec2:DeleteTags"
            ],
            "Resource": [
              "arn:aws:ec2:*:*:customer-gateway/*",
              "arn:aws:ec2:*:*:vpn-gateway/*",
              "arn:aws:ec2:*:*:vpn-connection/*",
              "arn:aws:ec2:*:*:vpc-peering-connection/*",
              "arn:aws:ec2:*:*:vpn-gateway/*",
              "arn:aws:ec2:*:*:transit-gateway-attachment/*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": "ec2:Describe*",
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": "elasticloadbalancing:Describe*",
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "cloudwatch:ListMetrics",
              "cloudwatch:GetMetricStatistics",
              "cloudwatch:Describe*"
            ],
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": "autoscaling:Describe*",
            "Resource": "*"
          }
        ]
      }

  - provider: aws-iam-service-account
    identifier: backplanep03ue1-hypershift-aws-vpce-operator
    output_resource_name: backplanep03ue1-hypershift-aws-vpce-operator
    user_policy:
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Sid": "AVOAssociatedVPC",
            "Effect": "Allow",
            "Action": [
              "ec2:DescribeVpcs",
              "route53:AssociateVPCWithHostedZone"
            ],
            "Resource": [
              "*"
            ]
          }
        ]
      }
