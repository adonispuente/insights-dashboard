---
$schema: /app-interface/app-interface-sql-query-1.yml
labels: {}
name: 2023-05-24-get-hypershift-cluster-provisioning-metrics
namespace:
  $ref: /services/ocm/namespaces/uhc-production.yml
identifier: get-hypershift-cluster-provisioning-metrics
# Run every day at 12:00 pm (UTC)
schedule:  00 12 * * *
output: stdout
queries:
# SLO
  - |
    SELECT CAST(
      (SELECT count(distinct cluster_uuid) from service_logs
        WHERE summary = 'cluster_state_ready'
        AND $__timeFilter(timestamp)
        AND cluster_uuid in 
        (SELECT cluster_uuid
        FROM service_logs
        WHERE $__timeFilter(timestamp) and summary = 'cluster_state_waiting'
        )
      ) AS float) / 
    (SELECT count(distinct cluster_uuid)
    FROM service_logs
    WHERE $__timeFilter(timestamp) and summary = 'cluster_state_waiting') 
    AS success_rate;
# error budget burned
  - |
    SELECT CAST(((SELECT count(distinct cluster_uuid) FROM service_logs WHERE $__timeFilter(timestamp) and summary = 'cluster_state_waiting') - 
      ((SELECT count(distinct cluster_uuid) from service_logs WHERE summary = 'cluster_state_ready' AND cluster_uuid in (SELECT cluster_uuid FROM service_logs WHERE $__timeFilter(timestamp) and summary = 'cluster_state_waiting')))) AS float)
      / (0.1 * (SELECT count(distinct cluster_uuid) FROM service_logs WHERE $__timeFilter(timestamp) and summary = 'cluster_state_waiting'))
    AS errorbudgetburned;
# cluster instalations over time
  - |
    SELECT 
      COALESCE(a1.t, a2.t) as t,
      a1.completed,
      a2.incomplete
    from
    (
      SELECT timestamp::date as t, COUNT(*) as completed from service_logs
        WHERE summary = 'cluster_state_waiting'
        AND $__timeFilter(timestamp)
        AND cluster_uuid != ''
        AND cluster_uuid in 
        (SELECT cluster_uuid  
        FROM service_logs
        WHERE $__timeFilter(timestamp) and summary = 'cluster_state_ready'
        )
        GROUP BY t
    ) as a1
    FULL join
    (
      SELECT timestamp::date as t, COUNT(*) as incomplete from service_logs
        WHERE summary = 'cluster_state_waiting'
        AND $__timeFilter(timestamp) 
        AND cluster_uuid != ''
        AND cluster_uuid not in 
        (SELECT cluster_uuid
        FROM service_logs
        WHERE $__timeFilter(timestamp) and summary = 'cluster_state_ready'
        )
        GROUP BY t
    ) as a2 ON (a1.t=a2.t)
    ORDER BY 1;
# SLI
  - |
     WITH wait as (
      SELECT
        "timestamp" AS "twait", summary ,cluster_uuid
        FROM service_logs 
        where  $__timeFilter(timestamp)
        and summary = 'cluster_state_waiting'
        and cluster_uuid != ''
        ), 
      ready as 
      (
      SELECT
       "timestamp" AS "tready", summary ,cluster_uuid
      FROM service_logs 
      where  $__timeFilter(timestamp)
        and summary = 'cluster_state_ready'
        and cluster_uuid != ''
      )
      select wait.twait, ready.tready, 
      abs(extract(epoch from wait.twait - ready.tready)) as tdiff,
      wait.cluster_uuid
      --wait.summary, ready.summary as rsum
      --,ready.cluster_uuid as rcuid
      from wait
      INNER JOIN ready
      ON wait.cluster_uuid = ready.cluster_uuid
      where abs(extract(epoch from wait.twait - ready.tready)) < 900;
# Percentage of total installs that met SLO
  - |
    SELECT (1.0 - (CAST(t2.longinstalls AS float) / t1.totalinstalls)) as errorbudget
      FROM (
      SELECT count(*) AS longinstalls
      FROM service_logs as t1
      INNER JOIN service_logs as t2
      ON t1.cluster_uuid = t2.cluster_uuid
      AND t1.timestamp < t2.timestamp
      AND t1.summary = 'cluster_state_waiting'
      AND t2.summary = 'cluster_state_ready'
      AND $__timeFilter(t1.timestamp)
      AND abs(extract(epoch from t2.timestamp - t1.timestamp)) > 600
      ) AS t2, (
      SELECT count(*) AS totalinstalls
      FROM service_logs as t1
      INNER JOIN service_logs as t2
      ON t1.cluster_uuid = t2.cluster_uuid
      AND t1.timestamp < t2.timestamp
      AND t1.summary = 'cluster_state_waiting'
      AND t2.summary = 'cluster_state_ready'
      AND $__timeFilter(t1.timestamp)
      ) AS t1;
# Cluster provisioning time
  - |
    WITH tdiffs AS (
      SELECT abs(extract(epoch from t2.timestamp - t1.timestamp)) as tdiff
      FROM service_logs as t1
      INNER JOIN service_logs as t2
      ON t1.cluster_uuid = t2.cluster_uuid
      AND t1.timestamp < t2.timestamp
      AND t1.summary = 'cluster_state_waiting'
      AND t1.cluster_uuid != ''
      AND t2.summary = 'cluster_state_ready'
      AND t2.cluster_uuid != ''
      AND $__timeFilter(t1.timestamp)
      AND abs(extract(epoch from t2.timestamp - t1.timestamp)) < 1600
      GROUP BY t1.cluster_uuid, tdiff
      ORDER BY tdiff)
      SELECT MIN(tdiff), MAX(tdiff), AVG(tdiff), PERCENTILE_CONT(0.99) WITHIN GROUP(ORDER BY tdiff) FROM tdiffs;
