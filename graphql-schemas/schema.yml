- name: AppInterfaceSettings_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: vault, type: boolean, isRequired: true }
  - { name: kube_binary, type: string, isRequired: true }

- name: VaultAuditOptions_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      file: VaultAuditOptionsFile_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultAuditOptionsFile_v1
  interface: VaultAuditOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: file_path, type: string, isRequired: true }
  - { name: log_raw, type: string, isRequired: true }
  - { name: hmac_accessor, type: string, isRequired: true }
  - { name: mode, type: string, isRequired: true }
  - { name: format, type: string, isRequired: true }
  - { name: prefix, type: string, isRequired: true }

- name: VaultAudit_v1
  fields:
  - { name: _path, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: options, type: VaultAuditOptions_v1, isInterface: true, isRequired: true }

- name: VaultAuthConfig_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      github: VaultAuthConfigGithub_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultAuthConfigGithub_v1
  interface: VaultAuthConfig_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: organization, type: string, isRequired: true }
  - { name: base_url, type: string, isRequired: true }
  - { name: max_ttl, type: string, isRequired: true }
  - { name: ttl, type: string, isRequired: true }

- name: VaultAuthSettings_v1
  fields:
  - { name: config, type: VaultAuthConfig_v1, isInterface: true, isRequired: true }

- name: VaultSecretEngineOptions_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      kv: VaultSecretEngineOptionsKV_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultSecretEngineOptionsKV_v1
  interface: VaultSecretEngineOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: version, type: string, isRequired: true }

- name: VaultSecretEngine_v1
  fields:
  - { name: _path, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: options, type: VaultSecretEngineOptions_v1, isInterface: true, isRequired: true }

- name: VaultRoleOptions_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      approle: VaultApproleOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultApproleOptions_v1
  interface: VaultRoleOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: bind_secret_id, type: string, isRequired: true }
  - { name: local_secret_ids, type: string, isRequired: true }
  - { name: period, type: string, isRequired: true }
  - { name: secret_id_num_uses, type: string, isRequired: true }
  - { name: secret_id_ttl, type: string, isRequired: true }
  - { name: token_max_ttl, type: string, isRequired: true }
  - { name: token_num_uses, type: string, isRequired: true }
  - { name: token_ttl, type: string, isRequired: true }
  - { name: token_type, type: string, isRequired: true }
  - { name: bound_cidr_list, type: string, isList: true, isRequired: true }
  - { name: policies, type: string, isList: true, isRequired: true }
  - { name: secret_id_bound_cidrs, type: string, isList: true, isRequired: true }
  - { name: token_bound_cidrs, type: string, isList: true, isRequired: true }

- name: VaultRole_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: mount, type: string, isRequired: true }
  - { name: options, type: VaultRoleOptions_v1, isInterface: true, isRequired: true }

- name: VaultPolicy_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: rules, type: string, isRequired: true }

- name: Resource_v1
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: content, type: string, isRequired: true }
  - { name: sha256sum, type: string, isRequired: true }

- name: VaultSecret_v1
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: field, type: string, isRequired: true }
  - { name: format, type: string }
  - { name: version, type: int }

- name: ClusterJumpHost_v1
  fields:
  - { name: hostname, type: string, isRequired: true }
  - { name: knownHosts, type: string, isRequired: true }
  - { name: user, type: string, isRequired: true }
  - { name: port, type: int }
  - { name: identity, type: VaultSecret_v1, isRequired: true }

- name: DisableClusterAutomations_v1
  fields:
  - { name: integrations, type: string, isList: true }
  - { name: e2eTests, type: string, isList: true }

- name: QuayOrg_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: managedTeams, type: string, isList: true, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1 }

- name: JenkinsInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: serverUrl, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: plugins, type: string, isList: true }

- name: JenkinsConfig_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: instance, type: JenkinsInstance_v1, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: config, type: json }
  - { name: config_path, type: string }

- name: JiraBoard_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: serverUrl, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: slack, type: SlackOutput_v1, isRequired: true }

- name: SlackOutput_v1
  fields:
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: channel, type: string, isRequired: true }
  - { name: icon_emoji, type: string }
  - { name: username, type: string }

- name: SlackWorkspace_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: managedUsergroups, type: string, isList: true, isRequired: true }

- name: GithubOrg_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: managedTeams, type: string, isList: true, isRequired: false }

- name: GitlabInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: backupOrgs, type: string, isList: true }
  - { name: managedGroups, type: string, isList: true, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: sslVerify, type: boolean }

- name: PagerDutyTarget_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: scheduleID, type: string }
  - { name: escalationPolicyID, type: string }

- name: Cluster_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: observabilityNamespace, type: Namespace_v1 }
  - { name: grafanaUrl, type: string }
  - { name: serverUrl, type: string, isRequired: true }
  - { name: managedGroups, type: string, isList: true }
  - { name: jumpHost, type: ClusterJumpHost_v1 }
  - { name: automationToken, type: VaultSecret_v1 }
  - { name: disable, type: DisableClusterAutomations_v1 }
  - name: namespaces
    type: Namespace_v1
    isList: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: cluster

- name: AWSAccount_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: consoleUrl, type: string, isRequired: true }
  - { name: uid, type: string, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1, isRequired: true }
  - { name: deleteKeys, type: string, isList: true }

- name: AWSGroup_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: policies, type: string, isList: true }

- name: AWSUserPolicy_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: policy, type: json, isRequired: true }

- name: NamespaceOpenshiftResource_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      resource: NamespaceOpenshiftResourceResource_v1
      resource-template: NamespaceOpenshiftResourceResourceTemplate_v1
      vault-secret: NamespaceOpenshiftResourceVaultSecret_v1
      route: NamespaceOpenshiftResourceRoute_v1
  fields:
  - { name: provider, type: string, isRequired: true }

- name: NamespaceOpenshiftResourceResource_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }

- name: NamespaceOpenshiftResourceResourceTemplate_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: type, type: string }
  - { name: variables, type: json }

- name: NamespaceOpenshiftResourceVaultSecret_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: version, type: int, isRequired: true }
  - { name: name, type: string }
  - { name: labels, type: json }
  - { name: annotations, type: json }
  - { name: type, type: string }

- name: NamespaceOpenshiftResourceRoute_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: vault_tls_secret_path, type: string }
  - { name: vault_tls_secret_version, type: int }

- name: NamespaceTerraformResource_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      rds: NamespaceTerraformResourceRDS_v1
      s3: NamespaceTerraformResourceS3_v1
      elasticache: NamespaceTerraformResourceElastiCache_v1
      service-account: NamespaceTerraformResourceServiceAccount_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: output_resource_name, type: string }

- name: NamespaceTerraformResourceRDS_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: defaults, type: string, isRequired: true }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }

- name: NamespaceTerraformResourceS3_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: defaults, type: string, isRequired: true }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }

- name: NamespaceTerraformResourceServiceAccount_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: policies, type: string, isList: true, isRequired: true }
  - { name: output_resource_name, type: string }

- name: NamespaceTerraformResourceElastiCache_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: defaults, type: string, isRequired: true }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }

- name: Namespace_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: grafanaUrl, type: string }
  - { name: cluster, type: Cluster_v1, isRequired: true }
  - { name: app, type: App_v1 }
  - { name: networkPoliciesAllow, type: Namespace_v1, isList: true }
  - { name: managedRoles, type: string, isList: true }
  - { name: managedResourceTypes, type: string, isList: true }
  - { name: openshiftResources, type: NamespaceOpenshiftResource_v1, isList: true, isInterface: true }
  - { name: managedTerraformResources, type: boolean }
  - { name: terraformResources, type: NamespaceTerraformResource_v1, isList: true, isInterface: true }

- name: AppServiceOwner_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: email, type: string, isRequired: true }

- name: AppPerformanceParameters_v1
  fields:
  - { name: SLO, type: float, isRequired: true }
  - { name: SLA, type: float }
  - { name: statusPage, type: string }

- name: Dependency_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: statefulness, type: string, isRequired: true }
  - { name: opsModel, type: string, isRequired: true }
  - { name: statusPage, type: string }
  - { name: SLA, type: float, isRequired: true }
  - { name: dependencyFailureImpact, type: string, isRequired: true }

- name: AppQuayReposItems_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: public, type: boolean, isRequired: true }

- name: AppQuayRepos_v1
  fields:
  - { name: org, type: QuayOrg_v1, isRequired: true }
  - { name: items, type: AppQuayReposItems_v1, isRequired: true, isList: true }

- name: AppEscalationsEscalation_v1
  fields:
  - { name: aliases, type: string, isList: true }
  - { name: emailRecipients, type: string, isList: true }
  - { name: pagerdutyRecipients, type: string, isList: true }
  - { name: slackRecipients, type: string, isList: true }
  - { name: webhookRecipients, type: string, isList: true }

- name: AppEscalations_v1
  fields:
  - { name: warning, type: AppEscalationsEscalation_v1 }
  - { name: critical, type: AppEscalationsEscalation_v1 }
  - { name: deadmanssnitch, type: AppEscalationsEscalation_v1 }

- name: AppEndPoints_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }

- name: AppCodeComponents_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: resource, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }

- name: App_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: serviceDocs, type: string, isList: true }
  - { name: serviceOwners, type: AppServiceOwner_v1, isList: true, isRequired: true }
  - { name: dependencies, type: Dependency_v1, isList: true }
  - { name: quayRepos, type: AppQuayRepos_v1, isList: true }
  - { name: escalations, type: AppEscalations_v1 }
  - { name: performanceParameters, type: AppPerformanceParameters_v1, isRequired: true }
  - { name: endPoints, type: AppEndPoints_v1, isList: true }
  - { name: codeComponents, type: AppCodeComponents_v1, isList: true }
  - name: namespaces
    type: Namespace_v1
    isList: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: app

- name: Permission_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: service
    fieldMap:
      aws-analytics: PermissionAWSAnalytics_v1
      github-org: PermissionGithubOrg_v1
      github-org-team: PermissionGithubOrgTeam_v1
      openshift-rolebinding: PermissionOpenshiftRolebinding_v1
      openshift-group: PermissionOpenshiftGroup_v1
      quay-membership: PermissionQuayOrgTeam_v1
      jenkins-role: PermissionJenkinsRole_v1
      slack-usergroup: PermissionSlackUsergroup_v1
      gitlab-group-membership: PermissionGitlabGroupMembership_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }

- name: PermissionAWSAnalytics_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }

- name: PermissionGithubOrg_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }

- name: PermissionGithubOrgTeam_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }
  - { name: team, type: string, isRequired: true }

- name: PermissionJenkinsRole_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: instance, type: JenkinsInstance_v1, isRequired: true }
  - { name: role, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }

- name: PermissionGitlabGroupMembership_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: group, type: string, isRequried: true}
  - { name: access, type: string, isRequired: true}

- name: PermissionSlackUsergroup_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: handle, type: string, isRequired: true }
  - { name: workspace, type: SlackWorkspace_v1, isRequired: true }
  - { name: pagerduty, type: PagerDutyTarget_v1, isList: true }
  - { name: github_owners, type: string, isList: true }
  - { name: channels, type: string, isList: true }

- name: VaultPolicyMapping_v1
  fields:
  - { name: github_team, type: PermissionGithubOrgTeam_v1, isRequired: true }
  - { name: policies, type: VaultPolicy_v1, isList: true, isRequired: true }

- name: VaultAuth_v1
  fields:
  - { name: _path, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: settings, type: VaultAuthSettings_v1 }
  - { name: policy_mappings, type: VaultPolicyMapping_v1, isList: true }

- name: PermissionOpenshiftRolebinding_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: cluster, type: string, isRequired: true }
  - { name: namespace, type: string, isRequired: true }
  - { name: role, type: string, isRequired: true }

- name: PermissionOpenshiftGroup_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: cluster, type: string, isRequired: true }
  - { name: group, type: string, isRequired: true }

- name: PermissionQuayOrgTeam_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }
  - { name: team, type: string, isRequired: true }

- name: User_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: org_username, type: string, isRequired: true }
  - { name: github_username, type: string, isRequired: true }
  - { name: quay_username, type: string }
  - { name: slack_username, type: string }
  - { name: pagerduty_name, type: string }
  - { name: public_gpg_key, type: string }
  - { name: roles, type: Role_v1, isList: true }

- name: Bot_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: org_username, type: string }
  - { name: github_username, type: string }
  - { name: gitlab_username, type: string}
  - { name: openshift_serviceaccount, type: string }
  - { name: quay_username, type: string }
  - { name: owner, type: User_v1 }
  - { name: roles, type: Role_v1, isList: true }

- name: Role_v1
  datafile: /access/role-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: permissions, type: Permission_v1, isList: true, isInterface: true }
  - { name: aws_groups, type: AWSGroup_v1, isList: true }
  - { name: user_policies, type: AWSUserPolicy_v1, isList: true }
  - name: users
    type: User_v1
    isList: true
    synthetic:
      schema: /access/user-1.yml
      subAttr: roles
  - name: bots
    type: Bot_v1
    isList: true
    synthetic:
      schema: /access/bot-1.yml
      subAttr: roles

- name: Integration_v1
  datafile: /app-sre/integration-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: shortDescription, type: string, isRequired: true}
  - { name: description, type: string, isRequired: true}
  - { name: usage, type: string, isRequired: true}
  - { name: upstream, type: string}
  - { name: schemas, type: string, isList: true}

- name: PerformanceParametersNamespaces_v1
  fields:
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: overrideSelectorJob, type: json }
  - { name: overrideAdditionalSelectors, type: json }

- name: PerformanceParametersAvailability_v1
  fields:
  - { name: kind, type: string, isRequired: true }
  - { name: metric, type: string, isRequired: true }
  - { name: errorBudget, type: string, isRequired: true }

- name: PerformanceParametersLatency_v1
  fields:
  - { name: kind, type: string, isRequired: true }
  - { name: metric, type: string, isRequired: true }
  - { name: threshold, type: string, isRequired: true }
  - { name: percentile, type: string, isRequired: true }

- name: PerformanceParametersRawRecording_v1
  fields:
  - { name: record, type: string, isRequired: true }
  - { name: expr, type: string, isRequired: true }
  - { name: labels, type: json, isRequired: true }

- name: PerformanceParametersRawAlertingAnnotations_v1
  fields:
  - { name: message, type: string, isRequired: true }
  - { name: runbook, type: string, isRequired: true }
  - { name: dashboard, type: string, isRequired: true }
  - { name: link_url, type: string }

- name: PerformanceParametersRawAlerting_v1
  fields:
  - { name: alert, type: string, isRequired: true }
  - { name: expr, type: string, isRequired: true }
  - { name: for, type: json, isRequired: true }
  - { name: labels, type: json, isRequired: true }
  - { name: annotations, type: PerformanceParametersRawAlertingAnnotations_v1, isRequired: true }

- name: PerformanceParameters_v1
  datafile: /app-sre/performance-parameters-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: component, type: string, isRequired: true}
  - { name: prometheusLabels, type: json}
  - { name: selectorJob, type: string, isRequired: true}
  - { name: additionalSelectors, type: json}
  - { name: namespaces, type: PerformanceParametersNamespaces_v1, isRequired: true, isList: true}
  - { name: availability, type: PerformanceParametersAvailability_v1, isList: true}
  - { name: latency, type: PerformanceParametersLatency_v1, isList: true}
  - { name: rawRecording, type: PerformanceParametersRawRecording_v1, isList: true}
  - { name: rawAlerting, type: PerformanceParametersRawAlerting_v1, isList: true}

- name: Report_v1
  datafile: /app-sre/report-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: app, type: App_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: date, type: string, isRequired: true }
  - { name: content, type: string, isRequired: true }

- name: Query
  fields:
  - { name: users_v1, type: User_v1, isList: true, datafileSchema: /access/user-1.yml }
  - { name: bots_v1, type: Bot_v1, isList: true, datafileSchema: /access/bot-1.yml }
  - { name: roles_v1, type: Role_v1, isList: true, datafileSchema: /access/role-1.yml }
  - { name: permissions_v1, type: Permission_v1, isList: true, isInterface: true, datafileSchema: /access/permission-1.yml }
  - { name: awsgroups_v1, type: AWSGroup_v1, isList: true, datafileSchema: /aws/group-1.yml }
  - { name: awsaccounts_v1, type: AWSAccount_v1, isList: true, datafileSchema: /aws/account-1.yml }
  - { name: clusters_v1, type: Cluster_v1, isList: true, datafileSchema: /openshift/cluster-1.yml }
  - { name: namespaces_v1, type: Namespace_v1, isList: true, datafileSchema: /openshift/namespace-1.yml }
  - { name: quay_orgs_v1, type: QuayOrg_v1, isList: true, datafileSchema: /dependencies/quay-org-1.yml }
  - { name: jenkins_instances_v1, type: JenkinsInstance_v1, isList: true, datafileSchema: /dependencies/jenkins-instance-1.yml }
  - { name: jenkins_configs_v1, type: JenkinsConfig_v1, isList: true, datafileSchema: /dependencies/jenkins-config-1.yml }
  - { name: jira_boards_v1, type: JiraBoard_v1, isList: true, datafileSchema: /dependencies/jira-board-1.yml }
  - { name: apps_v1, type: App_v1, isList: true, datafileSchema: /app-sre/app-1.yml }
  - { name: resources_v1, type: Resource_v1, isResource: true, isRequired: true, isList: true }
  - { name: vault_audit_backends_v1, type: VaultAudit_v1, isList: true, datafileSchema: /vault-config/audit-1.yml }
  - { name: vault_auth_backends_v1, type: VaultAuth_v1, isList: true, datafileSchema: /vault-config/auth-1.yml }
  - { name: vault_secret_engines_v1, type: VaultSecretEngine_v1, isList: true, datafileSchema: /vault-config/secret-engine-1.yml }
  - { name: vault_roles_v1, type: VaultRole_v1, isList: true, datafileSchema: /vault-config/role-1.yml }
  - { name: vault_policies_v1, type: VaultPolicy_v1, isList: true, datafileSchema: /vault-config/policy-1.yml }
  - { name: dependencies_v1, type: Dependency_v1, isList: true, datafileSchema: /dependencies/dependency-1.yml }
  - { name: githuborg_v1, type: GithubOrg_v1, isList: true, datafileSchema: /dependencies/github-org-1.yml }
  - { name: gitlabinstance_v1, type: GitlabInstance_v1, isList: true, datafileSchema: /dependencies/gitlab-instance-1.yml }
  - { name: integrations_v1, type: Integration_v1, isList: true, datafileSchema: /app-sre/integration-1.yml}
  - { name: performance_parameters_v1, type: PerformanceParameters_v1, isList: true, datafileSchema: /app-sre/performance-parameters-1.yml}
  - { name: reports_v1, type: Report_v1, isList: true, datafileSchema: /app-sre/report-1.yml}
