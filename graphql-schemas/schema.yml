- name: AppInterfaceSettings_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: vault, type: boolean, isRequired: true }
  - { name: kubeBinary, type: string, isRequired: true }
  - { name: pullRequestGateway, type: string }
  - { name: saasDeployJobTemplate, type: string, isRequired: true }
  - { name: hashLength, type: int, isRequired: true }
  - { name: dependencies, type: AppInterfaceDependencyMapping_v1, isList: true }
  - { name: credentials, type: CredentialsRequestMap_v1, isList: true }

- name: AppInterfaceDependencyMapping_v1
  fields:
  - { name: type, type: string, isRequired: true }
  - { name: services, type: Dependency_v1, isRequired: true, isList: true }

- name: CredentialsRequestMap_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: secret, type: VaultSecret_v1, isRequired: true }

- name: CredentialsRequest_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: user, type: User_v1, isRequired: true }
  - { name: credentials, type: string, isRequired: true }

- name: AppInterfaceEmail_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: subject, type: string, isRequired: true }
  - { name: to, type: AppInterfaceEmailAudience_v1, isRequired: true }
  - { name: body, type: string, isRequired: true }

- name: AppInterfaceEmailAudience_v1
  fields:
  - { name: aliases, type: string, isList: true }
  - { name: services, type: App_v1, isList: true }
  - { name: clusters, type: Cluster_v1, isList: true }
  - { name: namespaces, type: Namespace_v1, isList: true }
  - { name: aws_accounts, type: AWSAccount_v1, isList: true }
  - { name: roles, type: Role_v1, isList: true }
  - { name: users, type: User_v1, isList: true }

- name: VaultAuditOptions_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      file: VaultAuditOptionsFile_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultAuditOptionsFile_v1
  interface: VaultAuditOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: file_path, type: string, isRequired: true }
  - { name: log_raw, type: string, isRequired: true }
  - { name: hmac_accessor, type: string, isRequired: true }
  - { name: mode, type: string, isRequired: true }
  - { name: format, type: string, isRequired: true }
  - { name: prefix, type: string, isRequired: true }

- name: VaultAudit_v1
  fields:
  - { name: _path, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: options, type: VaultAuditOptions_v1, isInterface: true, isRequired: true }

- name: VaultAuthConfig_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      github: VaultAuthConfigGithub_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultAuthConfigGithub_v1
  interface: VaultAuthConfig_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: organization, type: string, isRequired: true }
  - { name: base_url, type: string, isRequired: true }
  - { name: max_ttl, type: string, isRequired: true }
  - { name: ttl, type: string, isRequired: true }

- name: VaultAuthSettings_v1
  fields:
  - { name: config, type: VaultAuthConfig_v1, isInterface: true, isRequired: true }

- name: VaultSecretEngineOptions_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      kv: VaultSecretEngineOptionsKV_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultSecretEngineOptionsKV_v1
  interface: VaultSecretEngineOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: version, type: string, isRequired: true }

- name: VaultSecretEngine_v1
  fields:
  - { name: _path, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: options, type: VaultSecretEngineOptions_v1, isInterface: true, isRequired: true }

- name: VaultRoleOptions_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: _type
    fieldMap:
      approle: VaultApproleOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }

- name: VaultApproleOptions_v1
  interface: VaultRoleOptions_v1
  fields:
  - { name: _type, type: string, isRequired: true }
  - { name: bind_secret_id, type: string, isRequired: true }
  - { name: local_secret_ids, type: string, isRequired: true }
  - { name: token_period, type: string, isRequired: true }
  - { name: secret_id_num_uses, type: string, isRequired: true }
  - { name: secret_id_ttl, type: string, isRequired: true }
  - { name: token_explicit_max_ttl, type: string, isRequired: true }
  - { name: token_max_ttl, type: string, isRequired: true }
  - { name: token_no_default_policy, type: boolean, isRequired: true }
  - { name: token_num_uses, type: string, isRequired: true }
  - { name: token_ttl, type: string, isRequired: true }
  - { name: token_type, type: string, isRequired: true }
  - { name: token_policies, type: string, isList: true, isRequired: true }
  - { name: policies, type: string, isList: true, isRequired: true }
  - { name: secret_id_bound_cidrs, type: string, isList: true, isRequired: true }
  - { name: token_bound_cidrs, type: string, isList: true, isRequired: true }

- name: VaultRole_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: mount, type: string, isRequired: true }
  - { name: options, type: VaultRoleOptions_v1, isInterface: true, isRequired: true }

- name: VaultPolicy_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: rules, type: string, isRequired: true }

- name: Resource_v1
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: content, type: string, isRequired: true }
  - { name: sha256sum, type: string, isRequired: true }

- name: VaultSecret_v1
  fields:
  - { name: path, type: string, isRequired: true }
  - { name: field, type: string, isRequired: true }
  - { name: format, type: string }
  - { name: version, type: int }

- name: KeyValue_v1
  fields:
  - { name: key, type: string, isRequired: true }
  - { name: value, type: string, isRequired: true }

- name: ClusterJumpHost_v1
  fields:
  - { name: hostname, type: string, isRequired: true }
  - { name: knownHosts, type: string, isRequired: true }
  - { name: user, type: string, isRequired: true }
  - { name: port, type: int }
  - { name: identity, type: VaultSecret_v1, isRequired: true }

- name: DisableClusterAutomations_v1
  fields:
  - { name: integrations, type: string, isList: true }
  - { name: e2eTests, type: string, isList: true }

- name: GcpProject_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: managedTeams, type: string, isList: true, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1 }
  - { name: pushCredentials, type: VaultSecret_v1 }

- name: QuayOrg_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: serverUrl, type: string }
  - { name: managedTeams, type: string, isList: true, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1 }
  - { name: pushCredentials, type: VaultSecret_v1 }

- name: JenkinsInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: serverUrl, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: previousUrls, type: string, isList: true }
  - { name: plugins, type: string, isList: true }
  - { name: deleteMethod, type: string }

- name: JenkinsConfig_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: instance, type: JenkinsInstance_v1, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: config, type: json }
  - { name: config_path, type: string }

- name: JiraServer_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: serverUrl, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }

- name: JiraBoard_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: server, type: JiraServer_v1, isRequired: true }
  - { name: slack, type: SlackOutput_v1, isRequired: true }

- name: SlackWorkspace_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: integrations, type: SlackWorkspaceIntegration_v1, isList: true}
  - { name: managedUsergroups, type: string, isList: true, isRequired: true }

- name: SlackWorkspaceIntegration_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: channel, type: string, isRequired: true }
  - { name: icon_emoji, type: string, isRequired: true }
  - { name: username, type: string, isRequired: true }

- name: GithubOrg_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: two_factor_authentication, type: boolean, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: managedTeams, type: string, isList: true, isRequired: false }

- name: GitlabProjects_v1
  fields:
  - { name: group, type: string, isRequired: true }
  - { name: projects, type: string, isList: true, isRequired: true }

- name: GitlabInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: backupOrgs, type: string, isList: true }
  - { name: managedGroups, type: string, isList: true, isRequired: true }
  - { name: projectRequests, type: GitlabProjects_v1, isList: true }
  - { name: url, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: sslVerify, type: boolean }

- name: PagerDutyTarget_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: scheduleID, type: string }
  - { name: escalationPolicyID, type: string }

- name: GithubClusterAuth_v1
  fields:
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }
  - { name: team, type: string }

- name: ClusterSpec_v1
  fields:
  - { name: id, type: string }
  - { name: external_id, type: string }
  - { name: provider, type: string, isRequired: true }
  - { name: region, type: string, isRequired: true }
  - { name: version, type: string, isRequired: true }
  - { name: initial_version, type: string, isRequired: true }
  - { name: multi_az, type: boolean, isRequired: true }
  - { name: nodes, type: int, isRequired: true }
  - { name: instance_type, type: string, isRequired: true }
  - { name: storage, type: int, isRequired: true }
  - { name: load_balancers, type: int, isRequired: true }
  - { name: private, type: boolean, isRequired: true }
  - { name: upgrade, type: string, isRequired: true }

- name: ClusterNetwork_v1
  fields:
  - { name: vpc, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: pod, type: string, isRequired: true }

- name: ClusterPeeringConnection_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      account-vpc: ClusterPeeringConnectionAccount_v1
      cluster-vpc-requester: ClusterPeeringConnectionClusterRequester_v1
      cluster-vpc-accepter: ClusterPeeringConnectionClusterAccepter_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: manageRoutes, type: boolean }
  - { name: delete, type: boolean }

- name: ClusterPeeringConnectionAccount_v1
  interface: ClusterPeeringConnection_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: vpc, type: AWSVPC_v1, isRequired: true }
  - { name: manageRoutes, type: boolean }
  - { name: delete, type: boolean }

- name: ClusterPeeringConnectionClusterRequester_v1
  interface: ClusterPeeringConnection_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: cluster, type: Cluster_v1, isRequired: true }
  - { name: manageRoutes, type: boolean }
  - { name: delete, type: boolean }

- name: ClusterPeeringConnectionClusterAccepter_v1
  interface: ClusterPeeringConnection_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: cluster, type: Cluster_v1, isRequired: true }
  - { name: manageRoutes, type: boolean }
  - { name: delete, type: boolean }

- name: ClusterPeering_v1
  fields:
  - { name: connections, type: ClusterPeeringConnection_v1, isRequired: true, isList: true, isInterface: true }

- name: ClusterPrometheus_v1
  fields:
  - { name: url, type: string, isRequired: true }
  - { name: auth, type: VaultSecret_v1, isRequired: true}

- name: Cluster_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: auth, type: GithubClusterAuth_v1 }
  - { name: observabilityNamespace, type: Namespace_v1 }
  - { name: grafanaUrl, type: string }
  - { name: consoleUrl, type: string, isRequired: true }
  - { name: kibanaUrl, type: string, isRequired: true }
  - { name: prometheusUrl, type: string, isRequired: true }
  - { name: alertmanagerUrl, type: string, isRequired: true }
  - { name: serverUrl, type: string, isRequired: true }
  - { name: elbFQDN, type: string, isRequired: true }
  - { name: managedGroups, type: string, isList: true }
  - { name: managedClusterRoles, type: boolean }
  - { name: ocm, type: OpenShiftClusterManager_v1 }
  - { name: spec, type: ClusterSpec_v1 }
  - { name: network, type: ClusterNetwork_v1 }
  - { name: peering, type: ClusterPeering_v1 }
  - { name: jumpHost, type: ClusterJumpHost_v1 }
  - { name: automationToken, type: VaultSecret_v1 }
  - { name: internal, type: boolean }
  - { name: disable, type: DisableClusterAutomations_v1 }
  - { name: awsInfrastructureAccess, type: AWSInfrastructureAccess_v1, isList: true }
  - { name: prometheus, type: ClusterPrometheus_v1}
  - name: namespaces
    type: Namespace_v1
    isList: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: cluster

- name: OpenShiftClusterManager_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: url, type: string, isRequired: true }
  - { name: accessTokenClientId, type: string, isRequired: true }
  - { name: accessTokenUrl, type: string, isRequired: true }
  - { name: offlineToken, type: VaultSecret_v1 }
  - name: clusters
    type: Cluster_v1
    isList: true
    synthetic:
      schema: /openshift/cluster-1.yml
      subAttr: cluster

- name: AWSInfrastructureAccess_v1
  fields:
  - { name: awsGroup, type: AWSGroup_v1, isRequired: true }
  - { name: accessLevel, type: string, isRequired: true }

- name: AWSAccount_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: consoleUrl, type: string, isRequired: true }
  - { name: uid, type: string, isRequired: true }
  - { name: resourcesDefaultRegion, type: string, isRequired: true }
  - { name: supportedDeploymentRegions, type: string, isList: true }
  - { name: terraformUsername, type: string }
  - { name: accountOwners, type: Owner_v1, isList: true, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1, isRequired: true }
  - { name: garbageCollection, type: boolean }
  - { name: disable, type: DisableClusterAutomations_v1 }
  - { name: deleteKeys, type: string, isList: true }
  - { name: premiumSupport, type: boolean, isRequired: true }
  - name: ecrs
    type: AWSECR_v1
    isList: true
    synthetic:
      schema: /aws/ecr-1.yml
      subAttr: account

- name: AWSGroup_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: policies, type: string, isList: true }
  - name: roles
    type: Role_v1
    isList: true
    synthetic:
      schema: /access/role-1.yml
      subAttr: aws_groups

- name: AWSUserPolicy_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: policy, type: json, isRequired: true }

- name: AWSVPC_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: vpc_id, type: string, isRequired: true }
  - { name: cidr_block, type: string, isRequired: true }
  - { name: region, type: string, isRequired: true }

- name: AWSECR_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: region, type: string, isRequired: true }

- name: NamespaceOpenshiftResource_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      resource: NamespaceOpenshiftResourceResource_v1
      resource-template: NamespaceOpenshiftResourceResourceTemplate_v1
      vault-secret: NamespaceOpenshiftResourceVaultSecret_v1
      route: NamespaceOpenshiftResourceRoute_v1
  fields:
  - { name: provider, type: string, isRequired: true }

- name: NamespaceOpenshiftResourceResource_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: validate_json, type: boolean }

- name: NamespaceOpenshiftResourceResourceTemplate_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: type, type: string }
  - { name: variables, type: json }

- name: NamespaceOpenshiftResourceVaultSecret_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: version, type: int, isRequired: true }
  - { name: name, type: string }
  - { name: labels, type: json }
  - { name: annotations, type: json }
  - { name: type, type: string }

- name: NamespaceOpenshiftResourceRoute_v1
  interface: NamespaceOpenshiftResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: vault_tls_secret_path, type: string }
  - { name: vault_tls_secret_version, type: int }

- name: NamespaceTerraformResource_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: provider
    fieldMap:
      rds: NamespaceTerraformResourceRDS_v1
      s3: NamespaceTerraformResourceS3_v1
      elasticache: NamespaceTerraformResourceElastiCache_v1
      aws-iam-service-account: NamespaceTerraformResourceServiceAccount_v1
      sqs: NamespaceTerraformResourceSQS_v1
      dynamodb: NamespaceTerraformResourceDynamoDB_v1
      ecr: NamespaceTerraformResourceECR_v1
      s3-cloudfront: NamespaceTerraformResourceS3CloudFront_v1
      cloudwatch: NamespaceTerraformResourceCloudWatch_v1
      kms: NamespaceTerraformResourceKMS_v1
      elasticsearch: NamespaceTerraformResourceElasticSearch_v1
      acm: NamespaceTerraformResourceACM_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: output_resource_name, type: string }

- name: NamespaceTerraformResourceACM_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: region, type: string }
  - { name: identifier, type: string, isRequired: true }
  - { name: secret, type: VaultSecret_v1, isRequired: true }
  - { name: output_resource_name, type: string }

- name: NamespaceTerraformResourceElasticSearch_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: region, type: string }
  - { name: identifier, type: string, isRequired: true }
  - { name: defaults, type: string, isRequired: true }
  - { name: output_resource_name, type: string }

- name: NamespaceTerraformResourceRDS_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: defaults, type: string, isRequired: true }
  - { name: availability_zone, type: string }
  - { name: parameter_group, type: string }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }
  - { name: enhanced_monitoring, type: boolean }
  - { name: replica_source, type: string }

- name: NamespaceTerraformResourceS3_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: region, type: string }
  - { name: identifier, type: string, isRequired: true }
  - { name: defaults, type: string, isRequired: true }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }
  - { name: storage_class, type: string }

- name: NamespaceTerraformResourceServiceAccount_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: variables, type: json }
  - { name: policies, type: string, isList: true }
  - { name: user_policy, type: json }
  - { name: output_resource_name, type: string }

- name: NamespaceTerraformResourceElastiCache_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: identifier, type: string, isRequired: true }
  - { name: defaults, type: string, isRequired: true }
  - { name: parameter_group, type: string }
  - { name: region, type: string }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }

- name: SQSQueuesSpecs_v1
  fields:
  - { name: defaults, type: string, isRequired: true }
  - { name: queues, type: KeyValue_v1, isRequired: true, isList: true }

- name: NamespaceTerraformResourceSQS_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: region, type: string }
  - { name: identifier, type: string, isRequired: true }
  - { name: output_resource_name, type: string }
  - { name: specs, type: SQSQueuesSpecs_v1, isRequired: true, isList: true }

- name: DynamoDBTableSpecs_v1
  fields:
  - { name: defaults, type: string, isRequired: true }
  - { name: tables, type: KeyValue_v1, isRequired: true, isList: true }

- name: NamespaceTerraformResourceDynamoDB_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: region, type: string }
  - { name: identifier, type: string, isRequired: true }
  - { name: output_resource_name, type: string }
  - { name: specs, type: DynamoDBTableSpecs_v1, isRequired: true, isList: true }

- name: NamespaceTerraformResourceECR_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: region, type: string }
  - { name: identifier, type: string, isRequired: true }
  - { name: output_resource_name, type: string }

- name: NamespaceTerraformResourceS3CloudFront_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: region, type: string }
  - { name: identifier, type: string, isRequired: true }
  - { name: defaults, type: string, isRequired: true }
  - { name: output_resource_name, type: string }
  - { name: storage_class, type: string }

- name: NamespaceTerraformResourceCloudWatch_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: region, type: string }
  - { name: identifier, type: string, isRequired: true }
  - { name: defaults, type: string, isRequired: true }
  - { name: es_identifier, type: string }
  - { name: filter_pattern, type: string }
  - { name: output_resource_name, type: string }

- name: NamespaceTerraformResourceKMS_v1
  interface: NamespaceTerraformResource_v1
  fields:
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: string, isRequired: true }
  - { name: region, type: string }
  - { name: identifier, type: string, isRequired: true }
  - { name: defaults, type: string, isRequired: true }
  - { name: overrides, type: json }
  - { name: output_resource_name, type: string }

- name: OpenshiftAcmeOverrides_v1
  fields:
  - { name: deploymentName, type: string }
  - { name: roleName, type: string }
  - { name: rolebindingName, type: string }
  - { name: serviceaccountName, type: string }
  - { name: rbacApiVersion, type: string }

- name: OpenshiftAcmeConfig_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: image, type: string, isRequired: true }
  - { name: overrides, type: OpenshiftAcmeOverrides_v1 }

- name: OpenshiftAcme_v1
  fields:
  - { name: config, type: OpenshiftAcmeConfig_v1, isRequired: true }
  - { name: accountSecret, type: NamespaceOpenshiftResourceVaultSecret_v1 }

- name: ResourceValues_v1
  fields:
  - { name: cpu, type: string }
  - { name: memory, type: string }

- name: LimitRangeItem_v1
  fields:
  - { name: default, type: ResourceValues_v1 }
  - { name: defaultRequest, type: ResourceValues_v1 }
  - { name: max, type: ResourceValues_v1 }
  - { name: maxLimitRequestRatio, type: ResourceValues_v1 }
  - { name: min, type: ResourceValues_v1 }
  - { name: type, type: string }

- name: LimitRange_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: limits, type: LimitRangeItem_v1, isList: true, isRequired: true }

- name: ResourceQuotaItemResources_v1
  fields:
  - { name: limits, type: ResourceValues_v1 }
  - { name: requests, type: ResourceValues_v1 }

- name: ResourceQuotaItem_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: resources, type: ResourceQuotaItemResources_v1, isRequired: true }
  - { name: scopes, type: string, isList: true }

- name: ResourceQuota_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: quotas, type: ResourceQuotaItem_v1, isList: true, isRequired: true }

- name: NamespaceManagedResourceTypeOverrides_v1
  fields:
  - { name: resource, type: string, isRequired: true }
  - { name: override, type: string, isRequired: true }

- name: NamespaceManagedResourceNames_v1
  fields:
  - { name: resource, type: string, isRequired: true }
  - { name: resourceNames, type: string, isRequired: true, isList: true }

- name: ServiceAccountTokenSpec_v1
  fields:
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: serviceAccountName, type: string, isRequired: true }

- name: Namespace_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: grafanaUrl, type: string }
  - { name: cluster, type: Cluster_v1, isRequired: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: environment, type: Environment_v1, isRequired: true}
  - { name: limitRanges, type: LimitRange_v1 }
  - { name: quota, type: ResourceQuota_v1 }
  - { name: networkPoliciesAllow, type: Namespace_v1, isList: true }
  - { name: openshiftAcme, type: OpenshiftAcme_v1 }
  - { name: managedRoles, type: boolean }
  - { name: managedResourceTypes, type: string, isList: true }
  - { name: managedResourceTypeOverrides, type: NamespaceManagedResourceTypeOverrides_v1, isList: true }
  - { name: managedResourceNames, type: NamespaceManagedResourceNames_v1, isList: true }
  - { name: openshiftResources, type: NamespaceOpenshiftResource_v1, isList: true, isInterface: true }
  - { name: managedTerraformResources, type: boolean }
  - { name: terraformResources, type: NamespaceTerraformResource_v1, isList: true, isInterface: true }
  - { name: openshiftServiceAccountTokens, type: ServiceAccountTokenSpec_v1, isList: true }

- name: Owner_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: email, type: string, isRequired: true }

- name: AppPerformanceParameters_v1
  fields:
  - { name: SLO, type: float, isRequired: true }
  - { name: SLA, type: float }
  - { name: statusPage, type: string }

- name: Dependency_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: statefulness, type: string, isRequired: true }
  - { name: opsModel, type: string, isRequired: true }
  - { name: statusPage, type: string }
  - { name: SLA, type: float, isRequired: true }
  - { name: dependencyFailureImpact, type: string, isRequired: true }

- name: AppGcrReposItems_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: public, type: boolean, isRequired: true }
  - { name: mirror, type: string, isRequired: false }

- name: AppGcrRepos_v1
  fields:
  - { name: project, type: GcpProject_v1, isRequired: true }
  - { name: items, type: AppGcrReposItems_v1, isRequired: true, isList: true }

- name: AppQuayReposItems_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: public, type: boolean, isRequired: true }
  - { name: mirror, type: string, isRequired: false }

- name: AppQuayRepos_v1
  fields:
  - { name: org, type: QuayOrg_v1, isRequired: true }
  - { name: items, type: AppQuayReposItems_v1, isRequired: true, isList: true }

- name: AppEscalationsEscalation_v1
  fields:
  - { name: aliases, type: string, isList: true }
  - { name: emailRecipients, type: string, isList: true }
  - { name: pagerdutyRecipients, type: string, isList: true }
  - { name: slackRecipients, type: string, isList: true }
  - { name: webhookRecipients, type: string, isList: true }

- name: AppEscalations_v1
  fields:
  - { name: warning, type: AppEscalationsEscalation_v1 }
  - { name: critical, type: AppEscalationsEscalation_v1 }
  - { name: deadmanssnitch, type: AppEscalationsEscalation_v1 }

- name: AppEndPoints_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }

- name: CodeComponentGitlabHousekeeping_v1
  fields:
  - { name: enabled, type: boolean, isRequired: true }
  - { name: rebase, type: boolean, isRequired: true }
  - { name: days_interval, type: int }
  - { name: limit, type: int }
  - { name: enable_closing, type: boolean }

- name: AppCodeComponents_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: resource, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: gitlabRepoOwners, type: boolean, isRequired: false }
  - { name: gitlabHousekeeping, type: CodeComponentGitlabHousekeeping_v1 }
  - { name: jira, type: JiraServer_v1 }

- name: Product_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: productOwners, type: Owner_v1, isList: true, isRequired: true }
  - name: environments
    type: Environment_v1
    isList: true
    synthetic:
      schema: /app-sre/environment-1.yml
      subAttr: product

- name: Environment_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: product, type: Product_v1, isRequired: true }
  - { name: parameters, type: json }
  - name: namespaces
    type: Namespace_v1
    isList: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: environment

- name: App_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: grafanaUrl, type: string }
  - { name: parentApp, type: App_v1 }
  - { name: serviceDocs, type: string, isList: true }
  - { name: serviceOwners, type: Owner_v1, isList: true, isRequired: true }
  - { name: serviceNotifications, type: Owner_v1, isList: true }
  - { name: dependencies, type: Dependency_v1, isList: true }
  - { name: gcrRepos, type: AppGcrRepos_v1, isList: true }
  - { name: quayRepos, type: AppQuayRepos_v1, isList: true }
  - { name: escalations, type: AppEscalations_v1 }
  - { name: performanceParameters, type: AppPerformanceParameters_v1, isRequired: true }
  - { name: endPoints, type: AppEndPoints_v1, isList: true }
  - { name: codeComponents, type: AppCodeComponents_v1, isList: true }
  - { name: sentryProjects, type: AppSentryProjects_v1, isList: true }
  - name: namespaces
    type: Namespace_v1
    isList: true
    synthetic:
      schema: /openshift/namespace-1.yml
      subAttr: app
  - name: childrenApps
    type: App_v1
    isList: true
    synthetic:
      schema: /app-sre/app-1.yml
      subAttr: parentApp

- name: SaasFile_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: instance, type: JenkinsInstance_v1, isRequired: true }
  - { name: slack, type: SlackOutput_v1, isRequired: true }
  - { name: managedResourceTypes, type: string, isRequired: true, isList: true }
  - { name: authentication, type: SaasFileAuthentication_v1 }
  - { name: parameters, type: json }
  - { name: resourceTemplates, type: SaasResourceTemplate_v1, isRequired: true, isList: true }
  - { name: imagePatterns, type: string, isRequired: true, isList: true }
  - { name: takeover, type: boolean }
  - { name: compare, type: boolean }
  - { name: timeout, type: int }
  - { name: publishJobLogs, type: boolean }
  - name: roles
    type: Role_v1
    isList: true
    synthetic:
      schema: /access/role-1.yml
      subAttr: owned_saas_files

- name: SlackOutput_v1
  fields:
  - { name: workspace, type: SlackWorkspace_v1, isRequired: true }
  - { name: channel, type: string }
  - { name: icon_emoji, type: string }
  - { name: username, type: string }
  - { name: output, type: string }

- name: SaasFileAuthentication_v1
  fields:
  - { name: code, type: VaultSecret_v1 }
  - { name: image, type: VaultSecret_v1 }

- name: SaasResourceTemplate_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: provider, type: string }
  - { name: hash_length, type: int }
  - { name: parameters, type: json }
  - { name: targets, type: SaasResourceTemplateTarget_v1, isRequired: true, isList: true }

- name: SaasResourceTemplateTarget_v1
  fields:
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: ref, type: string, isRequired: true }
  - { name: parameters, type: json }
  - { name: upstream, type: string }
  - { name: disable, type: boolean }

- name: Permission_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: service
    fieldMap:
      github-org: PermissionGithubOrg_v1
      github-org-team: PermissionGithubOrgTeam_v1
      quay-membership: PermissionQuayOrgTeam_v1
      jenkins-role: PermissionJenkinsRole_v1
      slack-usergroup: PermissionSlackUsergroup_v1
      gitlab-group-membership: PermissionGitlabGroupMembership_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }

- name: PermissionGithubOrg_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }
  - { name: role, type: string }

- name: PermissionGithubOrgTeam_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }
  - { name: team, type: string, isRequired: true }
  - { name: role, type: string }

- name: PermissionJenkinsRole_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: instance, type: JenkinsInstance_v1, isRequired: true }
  - { name: role, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }

- name: PermissionGitlabGroupMembership_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: group, type: string, isRequried: true}
  - { name: access, type: string, isRequired: true}

- name: PermissionSlackUsergroup_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: handle, type: string, isRequired: true }
  - { name: workspace, type: SlackWorkspace_v1, isRequired: true }
  - { name: pagerduty, type: PagerDutyTarget_v1, isList: true }
  - { name: channels, type: string, isList: true }
  - { name: ownersFromRepos, type: string, isList: true }

- name: VaultPolicyMapping_v1
  fields:
  - { name: github_team, type: PermissionGithubOrgTeam_v1, isRequired: true }
  - { name: policies, type: VaultPolicy_v1, isList: true, isRequired: true }

- name: VaultAuth_v1
  fields:
  - { name: _path, type: string, isRequired: true }
  - { name: type, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: settings, type: VaultAuthSettings_v1 }
  - { name: policy_mappings, type: VaultPolicyMapping_v1, isList: true }

- name: PermissionQuayOrgTeam_v1
  interface: Permission_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: service, type: string, isRequired: true }
  - { name: org, type: string, isRequired: true }
  - { name: team, type: string, isRequired: true }

- name: ExternalUser_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: github_username, type: string, isRequired: true }
  - { name: sponsors, type: User_v1, isRequired: true, isList: true }

- name: User_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: org_username, type: string, isRequired: true }
  - { name: github_username, type: string, isRequired: true }
  - { name: quay_username, type: string }
  - { name: slack_username, type: string }
  - { name: pagerduty_username, type: string }
  - { name: public_gpg_key, type: string }
  - { name: roles, type: Role_v1, isList: true }

- name: Bot_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: org_username, type: string }
  - { name: github_username, type: string }
  - { name: gitlab_username, type: string}
  - { name: openshift_serviceaccount, type: string }
  - { name: quay_username, type: string }
  - { name: owner, type: User_v1 }
  - { name: roles, type: Role_v1, isList: true }

- name: Access_v1
  fields:
  - { name: namespace, type: Namespace_v1 }
  - { name: role, type: string }
  - { name: cluster, type: Cluster_v1 }
  - { name: group, type: string }
  - { name: clusterRole, type: string }

- name: Role_v1
  datafile: /access/role-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string }
  - { name: expiration_hours, type: int }
  - { name: permissions, type: Permission_v1, isList: true, isInterface: true }
  - { name: access, type: Access_v1, isList: true }
  - { name: aws_groups, type: AWSGroup_v1, isList: true }
  - { name: user_policies, type: AWSUserPolicy_v1, isList: true }
  - { name: sentry_teams, type: SentryTeam_v1, isList: true }
  - { name: sentry_roles, type: SentryRole_v1, isList: true }
  - { name: owned_saas_files, type: SaasFile_v1, isList: true }
  - name: users
    type: User_v1
    isList: true
    synthetic:
      schema: /access/user-1.yml
      subAttr: roles
  - name: bots
    type: Bot_v1
    isList: true
    synthetic:
      schema: /access/bot-1.yml
      subAttr: roles

- name: IntegrationPrCheck_v1
  fields:
  - { name: cmd, type: string, isRequired: true }
  - { name: state, type: boolean }
  - { name: sqs, type: boolean }
  - { name: disabled, type: boolean }
  - { name: no_validate_schemas, type: boolean }

- name: Integration_v1
  datafile: /app-sre/integration-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: upstream, type: string }
  - { name: schemas, type: string, isRequired: true, isList: true }
  - { name: pr_check, type: IntegrationPrCheck_v1 }

- name: PerformanceParametersReports_v1
  fields:
  - { name: date, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }

- name: PerformanceParametersSLIRecordingRules_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: kind, type: string, isRequired: true }
  - { name: metric, type: string, isRequired: true }
  - { name: selectors, type: string, isList: true, isRequired: true }
  - { name: percentile, type: string }
  - { name: httpStatusLabel, type: string }

- name: PerformanceParametersVolume_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: kind, type: string, isRequired: true }
  - { name: rules, type: string, isRequired: true }
  - { name: target, type: string, isRequired: true }
  - { name: additionalLabels, type: json }

- name: PerformanceParametersAvailabilityRules_v1
  fields:
  - { name: latency, type: string, isRequired: true, isList: true }
  - { name: errors, type: string, isRequired: true , isList: true}

- name: PerformanceParametersAvailability_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: kind, type: string, isRequired: true }
  - { name: rules, type: PerformanceParametersAvailabilityRules_v1, isRequired: true }
  - { name: target, type: string, isRequired: true }
  - { name: additionalLabels, type: json }

- name: PerformanceParametersLatency_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: kind, type: string, isRequired: true }
  - { name: rules, type: string, isRequired: true }
  - { name: threshold, type: string, isRequired: true }
  - { name: target, type: string, isRequired: true }
  - { name: additionalLabels, type: json }

- name: PerformanceParametersErrors_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: kind, type: string, isRequired: true }
  - { name: rules, type: string, isRequired: true }
  - { name: target, type: string, isRequired: true }
  - { name: additionalLabels, type: json }

- name: PerformanceParametersRawRecordingRules_v1
  fields:
  - { name: record, type: string, isRequired: true }
  - { name: expr, type: string, isRequired: true }
  - { name: labels, type: json, isRequired: true }

- name: PerformanceParametersRawAlertingAnnotations_v1
  fields:
  - { name: message, type: string, isRequired: true }
  - { name: runbook, type: string, isRequired: true }
  - { name: dashboard, type: string, isRequired: true }
  - { name: link_url, type: string }

- name: PerformanceParametersRawAlerting_v1
  fields:
  - { name: alert, type: string, isRequired: true }
  - { name: expr, type: string, isRequired: true }
  - { name: for, type: string, isRequired: true }
  - { name: labels, type: json, isRequired: true }
  - { name: annotations, type: PerformanceParametersRawAlertingAnnotations_v1, isRequired: true }

- name: PerformanceParameters_v1
  datafile: /app-sre/performance-parameters-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: app, type: App_v1, isRequired: true }
  - { name: component, type: string, isRequired: true }
  - { name: prometheusLabels, type: json, isRequired: true }
  - { name: namespace, type: Namespace_v1, isRequired: true }
  - { name: sloReports, type: PerformanceParametersReports_v1, isList: true }
  - { name: SLIRecordingRules, type: PerformanceParametersSLIRecordingRules_v1, isList: true, isRequired: true }
  - { name: volume, type: PerformanceParametersVolume_v1, isList: true, isRequired: true }
  - { name: availability, type: PerformanceParametersAvailability_v1, isList: true, isRequired: true }
  - { name: latency, type: PerformanceParametersLatency_v1, isList: true, isRequired: true }
  - { name: errors, type: PerformanceParametersErrors_v1, isList: true, isRequired: true }
  - { name: rawRecordingRules, type: PerformanceParametersRawRecordingRules_v1, isList: true }
  - { name: rawAlerting, type: PerformanceParametersRawAlerting_v1, isList: true }

- name: Document_v1
  datafile: /app-sre/document-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: app, type: App_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: content_path, type: string, isRequired: true }

- name: Report_v1
  datafile: /app-sre/report-1.yml
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: app, type: App_v1, isRequired: true }
  - { name: name, type: string, isRequired: true }
  - { name: date, type: string, isRequired: true }
  - { name: contentFormatVersion, type: string, isRequired: true }
  - { name: content, type: string, isRequired: true }

- name: AppInterfaceSqlQuery_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: namespace, type: Namespace_v1, isRequired: true}
  - { name: identifier, type: string, isRequired: true}
  - { name: overrides, type: SqlEmailOverrides_v1}
  - { name: output, type: string, isRequired: true}
  - { name: query, type: string, isRequired: true}

- name: UnleashNotifications_v1
  fields:
  - { name: slack, type: SlackOutput_v1, isList: true }

- name: UnleashFeatureToggle_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: enabled, type: boolean, isRequired: true }
  - { name: reason, type: string }

- name: UnleashInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: url, type: string, isRequired: true }
  - { name: token, type: VaultSecret_v1, isRequired: true }
  - { name: notifications, type: UnleashNotifications_v1 }
  - { name: featureToggles, type: UnleashFeatureToggle_v1, isRequired: true, isList: true }

- name: Query
  fields:
  - { name: app_interface_settings_v1, type: AppInterfaceSettings_v1, isList: true, datafileSchema: /app-interface/app-interface-settings-1.yml }
  - { name: app_interface_emails_v1, type: AppInterfaceEmail_v1, isList: true, datafileSchema: /app-interface/app-interface-email-1.yml }
  - { name: credentials_requests_v1, type: CredentialsRequest_v1, isList: true, datafileSchema: /app-interface/credentials-request-1.yml }
  - { name: users_v1, type: User_v1, isList: true, datafileSchema: /access/user-1.yml }
  - { name: external_users_v1, type: ExternalUser_v1, isList: true, datafileSchema: /access/external-user-1.yml }
  - { name: bots_v1, type: Bot_v1, isList: true, datafileSchema: /access/bot-1.yml }
  - { name: roles_v1, type: Role_v1, isList: true, datafileSchema: /access/role-1.yml }
  - { name: permissions_v1, type: Permission_v1, isList: true, isInterface: true, datafileSchema: /access/permission-1.yml }
  - { name: awsgroups_v1, type: AWSGroup_v1, isList: true, datafileSchema: /aws/group-1.yml }
  - { name: awsaccounts_v1, type: AWSAccount_v1, isList: true, datafileSchema: /aws/account-1.yml }
  - { name: clusters_v1, type: Cluster_v1, isList: true, datafileSchema: /openshift/cluster-1.yml }
  - { name: namespaces_v1, type: Namespace_v1, isList: true, datafileSchema: /openshift/namespace-1.yml }
  - { name: gcp_projects_v1, type: GcpProject_v1, isList: true, datafileSchema: /dependencies/gcp-project-1.yml }
  - { name: quay_orgs_v1, type: QuayOrg_v1, isList: true, datafileSchema: /dependencies/quay-org-1.yml }
  - { name: jenkins_instances_v1, type: JenkinsInstance_v1, isList: true, datafileSchema: /dependencies/jenkins-instance-1.yml }
  - { name: jenkins_configs_v1, type: JenkinsConfig_v1, isList: true, datafileSchema: /dependencies/jenkins-config-1.yml }
  - { name: jira_servers_v1, type: JiraServer_v1, isList: true, datafileSchema: /dependencies/jira-server-1.yml }
  - { name: jira_boards_v1, type: JiraBoard_v1, isList: true, datafileSchema: /dependencies/jira-board-1.yml }
  - { name: products_v1, type: Product_v1, isList: true, datafileSchema: /app-sre/product-1.yml }
  - { name: environments_v1, type: Environment_v1, isList: true, datafileSchema: /app-sre/environment-1.yml }
  - { name: apps_v1, type: App_v1, isList: true, datafileSchema: /app-sre/app-1.yml }
  - { name: resources_v1, type: Resource_v1, isResource: true, isRequired: true, isList: true }
  - { name: vault_audit_backends_v1, type: VaultAudit_v1, isList: true, datafileSchema: /vault-config/audit-1.yml }
  - { name: vault_auth_backends_v1, type: VaultAuth_v1, isList: true, datafileSchema: /vault-config/auth-1.yml }
  - { name: vault_secret_engines_v1, type: VaultSecretEngine_v1, isList: true, datafileSchema: /vault-config/secret-engine-1.yml }
  - { name: vault_roles_v1, type: VaultRole_v1, isList: true, datafileSchema: /vault-config/role-1.yml }
  - { name: vault_policies_v1, type: VaultPolicy_v1, isList: true, datafileSchema: /vault-config/policy-1.yml }
  - { name: dependencies_v1, type: Dependency_v1, isList: true, datafileSchema: /dependencies/dependency-1.yml }
  - { name: githuborg_v1, type: GithubOrg_v1, isList: true, datafileSchema: /dependencies/github-org-1.yml }
  - { name: gitlabinstance_v1, type: GitlabInstance_v1, isList: true, datafileSchema: /dependencies/gitlab-instance-1.yml }
  - { name: integrations_v1, type: Integration_v1, isList: true, datafileSchema: /app-sre/integration-1.yml}
  - { name: performance_parameters_v1, type: PerformanceParameters_v1, isList: true, datafileSchema: /app-sre/performance-parameters-1.yml}
  - { name: documents_v1, type: Document_v1, isList: true, datafileSchema: /app-sre/document-1.yml}
  - { name: reports_v1, type: Report_v1, isList: true, datafileSchema: /app-sre/report-1.yml}
  - { name: sentry_teams_v1, type: SentryTeam_v1, isList: true, datafileSchema: /dependencies/sentry-team-1.yml }
  - { name: sentry_instances_v1, type: SentryInstance_v1, isList: true, datafileSchema: /dependencies/sentry-instance-1.yml }
  - { name: app_interface_sql_queries_v1, type: AppInterfaceSqlQuery_v1, isList: true, datafileSchema: /app-interface/app-interface-sql-query-1.yml }
  - { name: saas_files_v1, type: SaasFile_v1, isList: true, datafileSchema: /app-sre/saas-file-1.yml }
  - { name: unleash_instances_v1, type: UnleashInstance_v1, isList: true, datafileSchema: /app-sre/unleash-instance-1.yml }
  - { name: dns_zone_v1, type: DnsZone_v1, isList: true, datafileSchema: /dependencies/dns-zone-1.yml }

- name: SentryTeam_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: path, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: instance, type: SentryInstance_v1, isRequired: true }

- name: SentryRole_v1
  fields:
  - { name: role, type: string, isRequired: true }
  - { name: instance, type: SentryInstance_v1, isRequired: true }

- name: SentryInstance_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: consoleUrl, type: string, isRequired: true }
  - { name: automationToken, type: VaultSecret_v1, isRequired: true }
  - { name: adminUser, type: VaultSecret_v1, isRequired: true }

- name: SentryProjectItems_v1
  fields:
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: email_prefix, type: string, isRequired: true }
  - { name: platform, type: string, isRequired: true }
  - { name: sensitive_fields, type: string, isRequired: false, isList: true }
  - { name: safe_fields, type: string, isRequired: false, isList: true }
  - { name: auto_resolve_age, type: int, isRequired: false }
  - { name: allowed_domains, type: string, isRequired: false, isList: true }

- name: AppSentryProjects_v1
  fields:
  - { name: team, type: SentryTeam_v1, isRequired: true }
  - { name: projects, type: SentryProjectItems_v1, isRequired: true, isList: true }

- name: SqlEmailOverrides_v1
  fields:
  - { name: db_host, type: string }
  - { name: db_port, type: string }
  - { name: db_name, type: string }
  - { name: db_user, type: string }
  - { name: db_password, type: string }

- name: DnsRecordCommon_v1
  interface: DnsRecord_v1
  fields:
  - { name: type, type: string, isRequired: true }
  - { name: ttl, type: int }
  - { name: name, type: string, isRequired: true }
  - { name: target, type: string }
  - { name: targets, type: string, isList: true }
  - { name: target_cluster, type: Cluster_v1 }

- name: DnsRecordMX_v1
  interface: DnsRecord_v1
  fields:
  - { name: type, type: string, isRequired: true }
  - { name: ttl, type: int }
  - { name: name, type: string, isRequired: true }
  - { name: priority, type: int, isRequired: true }
  - { name: target, type: string }

- name: DnsRecord_v1
  isInterface: true
  interfaceResolve:
    strategy: fieldMap
    field: type
    fieldMap:
      A: DnsRecordCommon_v1
      CNAME: DnsRecordCommon_v1
      MX: DnsRecordMX_v1
      NS: DnsRecordCommon_v1
      TXT: DnsRecordCommon_v1
  fields:
  - { name: type, type: string, isRequired: true}

- name: DnsZone_v1
  fields:
  - { name: schema, type: string, isRequired: true }
  - { name: labels, type: json }
  - { name: name, type: string, isRequired: true }
  - { name: description, type: string, isRequired: true }
  - { name: provider, type: string, isRequired: true }
  - { name: account, type: AWSAccount_v1, isRequired: true }
  - { name: origin, type: string, isRequired: true }
  - { name: default_ttl, type: int }
  - { name: records, type: DnsRecord_v1, isList: true, isInterface: true }
