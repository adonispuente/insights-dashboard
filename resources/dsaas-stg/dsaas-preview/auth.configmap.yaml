apiVersion: v1
kind: ConfigMap
metadata:
  name: auth
data:
  chestarter.url: http://che-starter:10000
  email.verify.url: https://prod-preview.openshift.io/_verifyEmail
  environment: prod-preview
  ignore.email.prod: nothing-to-ignore
  invitation.accepted.url: https://prod-preview.openshift.io/_home
  keycloak.url: https://sso.prod-preview.openshift.io
  notapproved_redirect: ""
  notification.serviceurl: http://f8notification:80
  oauth.provider.endpoint.auth: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/auth
  oauth.provider.endpoint.logout: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/logout
  oauth.provider.endpoint.token: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
  oauth.provider.endpoint.userinfo: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/userinfo
  openshift.tenant.masterurl: https://console.free-stg.openshift.com/
  postgres.connection.maxidle: "90"
  postgres.connection.maxopen: "90"
  postgres.sslmode: require
  redirect.valid: ^(https|http)://(([^/?#]+[.])?(?i:((openshift[.]io)|(apps[.]che[-]dev[.]x6e0[.]p1[.]openshiftapps[.]com)|(devshift[.]net)))|localhost)((/|:).*)?$
  user.deactivation.notification.enabled: 'false'
  user.deactivation.enabled: 'false'
  user.deactivation.fetch.limit: '10'
  user.deactivation.notification.interval.seconds: '3600'
  user.deactivation.interval.seconds: '3600'
  user.deactivation.whitelist: ''
