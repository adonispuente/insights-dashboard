apiVersion: v1
data:
  slack_sink_0.1.json: |-
    {
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "7",
            "connector_type" : "sink",
            "connector_image" : "quay.io/rhoas/cos-connector-slack-sink:0.1.7",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "adapter" : {
                "name" : "slack-sink",
                "prefix" : "slack"
              },
              "kafka" : {
                "name" : "cos-kafka-source",
                "prefix" : "kafka"
              },
              "processors" : {
                "throttle" : "throttle-action",
                "jsonpath_set" : "cos-jsonpath-set-action",
                "log" : "cos-log-action",
                "jsonpath_rename" : "cos-jsonpath-rename-action",
                "jsonpath_extract" : "cos-jsonpath-extract-action",
                "jsonpath_remove" : "cos-jsonpath-remove-action"
              }
            }
          }
        }
      },
      "connector_type" : {
        "id" : "slack_sink_0.1",
        "kind" : "ConnectorType",
        "iconRef" : "TODO",
        "name" : "Slack Sink",
        "description" : "Slack Sink",
        "version" : "0.1",
        "labels" : [ "sink" ],
        "capabilities" : [ "error_handler", "processors" ],
        "channels" : [ "stable" ],
        "schema" : {
          "type" : "object",
          "required" : [ "slack_channel", "slack_webhook_url", "kafka_topic" ],
          "properties" : {
            "slack_channel" : {
              "title" : "Channel",
              "description" : "The Slack channel to send messages to.",
              "type" : "string",
              "example" : "#myroom"
            },
            "slack_webhook_url" : {
              "title" : "Webhook URL",
              "x-group" : "credentials",
              "oneOf" : [ {
                "title" : "Webhook URL",
                "description" : "The webhook URL used by the Slack channel to handle incoming messages.",
                "type" : "string",
                "format" : "password"
              }, {
                "description" : "An opaque reference to the slack_webhook_url",
                "type" : "object",
                "properties" : { }
              } ]
            },
            "slack_icon_emoji" : {
              "title" : "Icon Emoji",
              "description" : "Use a Slack emoji as an avatar.",
              "type" : "string"
            },
            "slack_icon_url" : {
              "title" : "Icon URL",
              "description" : "The avatar that the component will use when sending message to a channel or user.",
              "type" : "string"
            },
            "slack_username" : {
              "title" : "Username",
              "description" : "This is the username that the bot will have when sending messages to a channel or user.",
              "type" : "string"
            },
            "kafka_topic" : {
              "title" : "Topic Names",
              "description" : "Comma separated list of Kafka topic names",
              "type" : "string"
            },
            "kafka_registry_url" : {
              "title" : "Topic Service Registry URL",
              "description" : "Topic Service registry URL",
              "type" : "string"
            },
            "processors" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "throttle" ],
                  "properties" : {
                    "throttle" : {
                      "$ref" : "#/$defs/processors/throttle"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/processors/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_extract" ],
                  "properties" : {
                    "jsonpath_extract" : {
                      "$ref" : "#/$defs/processors/jsonpath_extract"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_remove" ],
                  "properties" : {
                    "jsonpath_remove" : {
                      "$ref" : "#/$defs/processors/jsonpath_remove"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_rename" ],
                  "properties" : {
                    "jsonpath_rename" : {
                      "$ref" : "#/$defs/processors/jsonpath_rename"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_set" ],
                  "properties" : {
                    "jsonpath_set" : {
                      "$ref" : "#/$defs/processors/jsonpath_set"
                    }
                  }
                } ]
              }
            },
            "error_handler" : {
              "type" : "object",
              "oneOf" : [ {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "dead_letter_queue" ],
                "properties" : {
                  "dead_letter_queue" : {
                    "$ref" : "#/$defs/error_handler/dead_letter_queue"
                  }
                }
              }, {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "log" ],
                "properties" : {
                  "log" : {
                    "$ref" : "#/$defs/error_handler/log"
                  }
                }
              }, {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "stop" ],
                "properties" : {
                  "stop" : {
                    "$ref" : "#/$defs/error_handler/stop"
                  }
                }
              } ]
            }
          },
          "$defs" : {
            "processors" : {
              "throttle" : {
                "title" : "Throttle Action",
                "description" : "The Throttle action allows to ensure that a specific sink does not get overloaded.",
                "required" : [ "messages" ],
                "properties" : {
                  "messages" : {
                    "title" : "Messages Number",
                    "description" : "The number of messages to send in the time period set",
                    "type" : "integer",
                    "example" : 10
                  },
                  "timePeriod" : {
                    "title" : "Time Period",
                    "description" : "Sets the time period during which the maximum request count is valid for, in milliseconds",
                    "type" : "string",
                    "default" : "1000"
                  }
                },
                "type" : "object"
              },
              "log" : {
                "title" : "Log",
                "description" : "Log payload.",
                "type" : "object",
                "properties" : {
                  "multiLine" : {
                    "title" : "Multi Line",
                    "description" : "Multi Line",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  },
                  "showProperties" : {
                    "title" : "Show Properties",
                    "description" : "Show Properties",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  },
                  "showHeaders" : {
                    "title" : "Show Headers",
                    "description" : "Show Headers",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  }
                }
              },
              "jsonpath_extract" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_remove" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_rename" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  },
                  "key" : {
                    "title" : "Key",
                    "description" : "Key",
                    "type" : "string"
                  },
                  "newKey" : {
                    "title" : "NewKey",
                    "description" : "NewKey",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_set" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  },
                  "key" : {
                    "title" : "Key",
                    "description" : "Key",
                    "type" : "string"
                  },
                  "value" : {
                    "title" : "Value",
                    "description" : "Value",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              }
            },
            "error_handler" : {
              "dead_letter_queue" : {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "topic" ],
                "properties" : {
                  "topic" : {
                    "type" : "string",
                    "title" : "Dead Letter Topic Name",
                    "description" : "The name of the Kafka topic used as dead letter queue"
                  }
                }
              },
              "log" : {
                "type" : "object",
                "additionalProperties" : false
              },
              "stop" : {
                "type" : "object",
                "additionalProperties" : false
              }
            }
          }
        }
      }
    }
  slack_source_0.1.json: |-
    {
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "7",
            "connector_type" : "source",
            "connector_image" : "quay.io/rhoas/cos-connector-slack-source:0.1.7",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "adapter" : {
                "name" : "cos-slack-source",
                "prefix" : "slack"
              },
              "kafka" : {
                "name" : "cos-kafka-sink",
                "prefix" : "kafka"
              },
              "processors" : {
                "throttle" : "throttle-action",
                "jsonpath_set" : "cos-jsonpath-set-action",
                "log" : "cos-log-action",
                "jsonpath_rename" : "cos-jsonpath-rename-action",
                "jsonpath_extract" : "cos-jsonpath-extract-action",
                "jsonpath_remove" : "cos-jsonpath-remove-action"
              }
            },
            "consumes" : "application/json",
            "consumes_class" : "com.slack.api.model.Message",
            "produces" : "application/json"
          }
        }
      },
      "connector_type" : {
        "id" : "slack_source_0.1",
        "kind" : "ConnectorType",
        "iconRef" : "TODO",
        "name" : "Slack Source",
        "description" : "Slack Source",
        "version" : "0.1",
        "labels" : [ "source" ],
        "capabilities" : [ "data_shape", "error_handler", "processors" ],
        "channels" : [ "stable" ],
        "schema" : {
          "type" : "object",
          "required" : [ "slack_channel", "slack_token", "kafka_topic" ],
          "properties" : {
            "slack_channel" : {
              "title" : "Channel",
              "description" : "The Slack channel to receive messages from",
              "type" : "string",
              "example" : "#myroom"
            },
            "slack_token" : {
              "title" : "Token",
              "x-group" : "credentials",
              "oneOf" : [ {
                "title" : "Token",
                "description" : "The token to access Slack. A Slack app is needed. This app needs to have channels:history and channels:read permissions. The Bot User OAuth Access Token is the kind of token needed.",
                "type" : "string",
                "format" : "password"
              }, {
                "description" : "An opaque reference to the slack_token",
                "type" : "object",
                "properties" : { }
              } ]
            },
            "slack_delay" : {
              "title" : "Delay",
              "description" : "The delay between polls",
              "type" : "string",
              "example" : "1s"
            },
            "kafka_topic" : {
              "title" : "Topic Names",
              "description" : "Comma separated list of Kafka topic names",
              "type" : "string"
            },
            "kafka_registry_url" : {
              "title" : "Topic Service Registry URL",
              "description" : "Topic Service registry URL",
              "type" : "string"
            },
            "processors" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "throttle" ],
                  "properties" : {
                    "throttle" : {
                      "$ref" : "#/$defs/processors/throttle"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/processors/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_extract" ],
                  "properties" : {
                    "jsonpath_extract" : {
                      "$ref" : "#/$defs/processors/jsonpath_extract"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_remove" ],
                  "properties" : {
                    "jsonpath_remove" : {
                      "$ref" : "#/$defs/processors/jsonpath_remove"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_rename" ],
                  "properties" : {
                    "jsonpath_rename" : {
                      "$ref" : "#/$defs/processors/jsonpath_rename"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_set" ],
                  "properties" : {
                    "jsonpath_set" : {
                      "$ref" : "#/$defs/processors/jsonpath_set"
                    }
                  }
                } ]
              }
            },
            "data_shape" : {
              "type" : "object",
              "additionalProperties" : false,
              "properties" : {
                "produces" : {
                  "$ref" : "#/$defs/data_shape/produces"
                }
              }
            },
            "error_handler" : {
              "type" : "object",
              "oneOf" : [ {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "dead_letter_queue" ],
                "properties" : {
                  "dead_letter_queue" : {
                    "$ref" : "#/$defs/error_handler/dead_letter_queue"
                  }
                }
              }, {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "log" ],
                "properties" : {
                  "log" : {
                    "$ref" : "#/$defs/error_handler/log"
                  }
                }
              }, {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "stop" ],
                "properties" : {
                  "stop" : {
                    "$ref" : "#/$defs/error_handler/stop"
                  }
                }
              } ]
            }
          },
          "$defs" : {
            "processors" : {
              "throttle" : {
                "title" : "Throttle Action",
                "description" : "The Throttle action allows to ensure that a specific sink does not get overloaded.",
                "required" : [ "messages" ],
                "properties" : {
                  "messages" : {
                    "title" : "Messages Number",
                    "description" : "The number of messages to send in the time period set",
                    "type" : "integer",
                    "example" : 10
                  },
                  "timePeriod" : {
                    "title" : "Time Period",
                    "description" : "Sets the time period during which the maximum request count is valid for, in milliseconds",
                    "type" : "string",
                    "default" : "1000"
                  }
                },
                "type" : "object"
              },
              "log" : {
                "title" : "Log",
                "description" : "Log payload.",
                "type" : "object",
                "properties" : {
                  "multiLine" : {
                    "title" : "Multi Line",
                    "description" : "Multi Line",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  },
                  "showProperties" : {
                    "title" : "Show Properties",
                    "description" : "Show Properties",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  },
                  "showHeaders" : {
                    "title" : "Show Headers",
                    "description" : "Show Headers",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  }
                }
              },
              "jsonpath_extract" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_remove" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_rename" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  },
                  "key" : {
                    "title" : "Key",
                    "description" : "Key",
                    "type" : "string"
                  },
                  "newKey" : {
                    "title" : "NewKey",
                    "description" : "NewKey",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_set" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  },
                  "key" : {
                    "title" : "Key",
                    "description" : "Key",
                    "type" : "string"
                  },
                  "value" : {
                    "title" : "Value",
                    "description" : "Value",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              }
            },
            "data_shape" : {
              "produces" : {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "format" ],
                "properties" : {
                  "format" : {
                    "type" : "string",
                    "default" : "application/json",
                    "enum" : [ "application/json" ]
                  }
                }
              }
            },
            "error_handler" : {
              "dead_letter_queue" : {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "topic" ],
                "properties" : {
                  "topic" : {
                    "type" : "string",
                    "title" : "Dead Letter Topic Name",
                    "description" : "The name of the Kafka topic used as dead letter queue"
                  }
                }
              },
              "log" : {
                "type" : "object",
                "additionalProperties" : false
              },
              "stop" : {
                "type" : "object",
                "additionalProperties" : false
              }
            }
          }
        }
      }
    }
  telegram_sink_0.1.json: |-
    {
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "7",
            "connector_type" : "sink",
            "connector_image" : "quay.io/rhoas/cos-connector-telegram-sink:0.1.7",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "adapter" : {
                "name" : "telegram-sink",
                "prefix" : "telegram"
              },
              "kafka" : {
                "name" : "cos-kafka-source",
                "prefix" : "kafka"
              },
              "processors" : {
                "throttle" : "throttle-action",
                "jsonpath_set" : "cos-jsonpath-set-action",
                "log" : "cos-log-action",
                "jsonpath_rename" : "cos-jsonpath-rename-action",
                "jsonpath_extract" : "cos-jsonpath-extract-action",
                "jsonpath_remove" : "cos-jsonpath-remove-action"
              }
            }
          }
        }
      },
      "connector_type" : {
        "id" : "telegram_sink_0.1",
        "kind" : "ConnectorType",
        "iconRef" : "TODO",
        "name" : "Telegram Sink",
        "description" : "Telegram Sink",
        "version" : "0.1",
        "labels" : [ "sink" ],
        "capabilities" : [ "error_handler", "processors" ],
        "channels" : [ "stable" ],
        "schema" : {
          "type" : "object",
          "required" : [ "telegram_authorization_token", "kafka_topic" ],
          "properties" : {
            "telegram_authorization_token" : {
              "title" : "Token",
              "x-group" : "credentials",
              "oneOf" : [ {
                "title" : "Token",
                "description" : "The token to access your bot on Telegram. You you can obtain it from the Telegram @botfather.",
                "type" : "string",
                "format" : "password"
              }, {
                "description" : "An opaque reference to the telegram_authorization_token",
                "type" : "object",
                "properties" : { }
              } ]
            },
            "telegram_chat_id" : {
              "title" : "Chat ID",
              "description" : "The Chat ID where messages should be sent by default",
              "type" : "string"
            },
            "kafka_topic" : {
              "title" : "Topic Names",
              "description" : "Comma separated list of Kafka topic names",
              "type" : "string"
            },
            "kafka_registry_url" : {
              "title" : "Topic Service Registry URL",
              "description" : "Topic Service registry URL",
              "type" : "string"
            },
            "processors" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "throttle" ],
                  "properties" : {
                    "throttle" : {
                      "$ref" : "#/$defs/processors/throttle"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/processors/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_extract" ],
                  "properties" : {
                    "jsonpath_extract" : {
                      "$ref" : "#/$defs/processors/jsonpath_extract"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_remove" ],
                  "properties" : {
                    "jsonpath_remove" : {
                      "$ref" : "#/$defs/processors/jsonpath_remove"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_rename" ],
                  "properties" : {
                    "jsonpath_rename" : {
                      "$ref" : "#/$defs/processors/jsonpath_rename"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_set" ],
                  "properties" : {
                    "jsonpath_set" : {
                      "$ref" : "#/$defs/processors/jsonpath_set"
                    }
                  }
                } ]
              }
            },
            "error_handler" : {
              "type" : "object",
              "oneOf" : [ {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "dead_letter_queue" ],
                "properties" : {
                  "dead_letter_queue" : {
                    "$ref" : "#/$defs/error_handler/dead_letter_queue"
                  }
                }
              }, {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "log" ],
                "properties" : {
                  "log" : {
                    "$ref" : "#/$defs/error_handler/log"
                  }
                }
              }, {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "stop" ],
                "properties" : {
                  "stop" : {
                    "$ref" : "#/$defs/error_handler/stop"
                  }
                }
              } ]
            }
          },
          "$defs" : {
            "processors" : {
              "throttle" : {
                "title" : "Throttle Action",
                "description" : "The Throttle action allows to ensure that a specific sink does not get overloaded.",
                "required" : [ "messages" ],
                "properties" : {
                  "messages" : {
                    "title" : "Messages Number",
                    "description" : "The number of messages to send in the time period set",
                    "type" : "integer",
                    "example" : 10
                  },
                  "timePeriod" : {
                    "title" : "Time Period",
                    "description" : "Sets the time period during which the maximum request count is valid for, in milliseconds",
                    "type" : "string",
                    "default" : "1000"
                  }
                },
                "type" : "object"
              },
              "log" : {
                "title" : "Log",
                "description" : "Log payload.",
                "type" : "object",
                "properties" : {
                  "multiLine" : {
                    "title" : "Multi Line",
                    "description" : "Multi Line",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  },
                  "showProperties" : {
                    "title" : "Show Properties",
                    "description" : "Show Properties",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  },
                  "showHeaders" : {
                    "title" : "Show Headers",
                    "description" : "Show Headers",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  }
                }
              },
              "jsonpath_extract" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_remove" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_rename" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  },
                  "key" : {
                    "title" : "Key",
                    "description" : "Key",
                    "type" : "string"
                  },
                  "newKey" : {
                    "title" : "NewKey",
                    "description" : "NewKey",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_set" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  },
                  "key" : {
                    "title" : "Key",
                    "description" : "Key",
                    "type" : "string"
                  },
                  "value" : {
                    "title" : "Value",
                    "description" : "Value",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              }
            },
            "error_handler" : {
              "dead_letter_queue" : {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "topic" ],
                "properties" : {
                  "topic" : {
                    "type" : "string",
                    "title" : "Dead Letter Topic Name",
                    "description" : "The name of the Kafka topic used as dead letter queue"
                  }
                }
              },
              "log" : {
                "type" : "object",
                "additionalProperties" : false
              },
              "stop" : {
                "type" : "object",
                "additionalProperties" : false
              }
            }
          }
        }
      }
    }
  telegram_source_0.1.json: |-
    {
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "7",
            "connector_type" : "source",
            "connector_image" : "quay.io/rhoas/cos-connector-telegram-source:0.1.7",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "adapter" : {
                "name" : "telegram-source",
                "prefix" : "telegram"
              },
              "kafka" : {
                "name" : "cos-kafka-sink",
                "prefix" : "kafka"
              },
              "processors" : {
                "throttle" : "throttle-action",
                "jsonpath_set" : "cos-jsonpath-set-action",
                "log" : "cos-log-action",
                "jsonpath_rename" : "cos-jsonpath-rename-action",
                "jsonpath_extract" : "cos-jsonpath-extract-action",
                "jsonpath_remove" : "cos-jsonpath-remove-action"
              }
            },
            "consumes" : "application/json",
            "produces" : "application/json"
          }
        }
      },
      "connector_type" : {
        "id" : "telegram_source_0.1",
        "kind" : "ConnectorType",
        "iconRef" : "TODO",
        "name" : "Telegram Source",
        "description" : "Telegram Source",
        "version" : "0.1",
        "labels" : [ "source" ],
        "capabilities" : [ "data_shape", "error_handler", "processors" ],
        "channels" : [ "stable" ],
        "schema" : {
          "type" : "object",
          "required" : [ "telegram_authorization_token", "kafka_topic" ],
          "properties" : {
            "telegram_authorization_token" : {
              "title" : "Token",
              "x-group" : "credentials",
              "oneOf" : [ {
                "title" : "Token",
                "description" : "The token to access your bot on Telegram. You you can obtain it from the Telegram @botfather.",
                "type" : "string",
                "format" : "password"
              }, {
                "description" : "An opaque reference to the telegram_authorization_token",
                "type" : "object",
                "properties" : { }
              } ]
            },
            "kafka_topic" : {
              "title" : "Topic Names",
              "description" : "Comma separated list of Kafka topic names",
              "type" : "string"
            },
            "kafka_registry_url" : {
              "title" : "Topic Service Registry URL",
              "description" : "Topic Service registry URL",
              "type" : "string"
            },
            "processors" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "throttle" ],
                  "properties" : {
                    "throttle" : {
                      "$ref" : "#/$defs/processors/throttle"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "log" ],
                  "properties" : {
                    "log" : {
                      "$ref" : "#/$defs/processors/log"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_extract" ],
                  "properties" : {
                    "jsonpath_extract" : {
                      "$ref" : "#/$defs/processors/jsonpath_extract"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_remove" ],
                  "properties" : {
                    "jsonpath_remove" : {
                      "$ref" : "#/$defs/processors/jsonpath_remove"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_rename" ],
                  "properties" : {
                    "jsonpath_rename" : {
                      "$ref" : "#/$defs/processors/jsonpath_rename"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "jsonpath_set" ],
                  "properties" : {
                    "jsonpath_set" : {
                      "$ref" : "#/$defs/processors/jsonpath_set"
                    }
                  }
                } ]
              }
            },
            "data_shape" : {
              "type" : "object",
              "additionalProperties" : false,
              "properties" : {
                "produces" : {
                  "$ref" : "#/$defs/data_shape/produces"
                }
              }
            },
            "error_handler" : {
              "type" : "object",
              "oneOf" : [ {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "dead_letter_queue" ],
                "properties" : {
                  "dead_letter_queue" : {
                    "$ref" : "#/$defs/error_handler/dead_letter_queue"
                  }
                }
              }, {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "log" ],
                "properties" : {
                  "log" : {
                    "$ref" : "#/$defs/error_handler/log"
                  }
                }
              }, {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "stop" ],
                "properties" : {
                  "stop" : {
                    "$ref" : "#/$defs/error_handler/stop"
                  }
                }
              } ]
            }
          },
          "$defs" : {
            "processors" : {
              "throttle" : {
                "title" : "Throttle Action",
                "description" : "The Throttle action allows to ensure that a specific sink does not get overloaded.",
                "required" : [ "messages" ],
                "properties" : {
                  "messages" : {
                    "title" : "Messages Number",
                    "description" : "The number of messages to send in the time period set",
                    "type" : "integer",
                    "example" : 10
                  },
                  "timePeriod" : {
                    "title" : "Time Period",
                    "description" : "Sets the time period during which the maximum request count is valid for, in milliseconds",
                    "type" : "string",
                    "default" : "1000"
                  }
                },
                "type" : "object"
              },
              "log" : {
                "title" : "Log",
                "description" : "Log payload.",
                "type" : "object",
                "properties" : {
                  "multiLine" : {
                    "title" : "Multi Line",
                    "description" : "Multi Line",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  },
                  "showProperties" : {
                    "title" : "Show Properties",
                    "description" : "Show Properties",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  },
                  "showHeaders" : {
                    "title" : "Show Headers",
                    "description" : "Show Headers",
                    "type" : "boolean",
                    "default" : false,
                    "x-descriptors" : [ "urn:camel:group:common" ]
                  }
                }
              },
              "jsonpath_extract" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_remove" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_rename" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  },
                  "key" : {
                    "title" : "Key",
                    "description" : "Key",
                    "type" : "string"
                  },
                  "newKey" : {
                    "title" : "NewKey",
                    "description" : "NewKey",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              },
              "jsonpath_set" : {
                "title" : "Transform with JsonPath",
                "description" : "TBD",
                "type" : "object",
                "required" : [ "expression" ],
                "properties" : {
                  "expression" : {
                    "title" : "Expression",
                    "description" : "Expression",
                    "type" : "string"
                  },
                  "key" : {
                    "title" : "Key",
                    "description" : "Key",
                    "type" : "string"
                  },
                  "value" : {
                    "title" : "Value",
                    "description" : "Value",
                    "type" : "string"
                  }
                },
                "x-metadata" : {
                  "supported.content-type" : "application/x-struct"
                }
              }
            },
            "data_shape" : {
              "produces" : {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "format" ],
                "properties" : {
                  "format" : {
                    "type" : "string",
                    "default" : "application/json",
                    "enum" : [ "application/json", "avro/binary" ]
                  }
                }
              }
            },
            "error_handler" : {
              "dead_letter_queue" : {
                "type" : "object",
                "additionalProperties" : false,
                "required" : [ "topic" ],
                "properties" : {
                  "topic" : {
                    "type" : "string",
                    "title" : "Dead Letter Topic Name",
                    "description" : "The name of the Kafka topic used as dead letter queue"
                  }
                }
              },
              "log" : {
                "type" : "object",
                "additionalProperties" : false
              },
              "stop" : {
                "type" : "object",
                "additionalProperties" : false
              }
            }
          }
        }
      }
    }
kind: ConfigMap
metadata:
  annotations:
    qontract.recycle: "true"
  name: connector-catalog-camel-social
