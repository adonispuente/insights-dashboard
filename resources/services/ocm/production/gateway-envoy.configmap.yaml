apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-envoy
  annotations:
    qontract.recycle: "true"
data:
  main.yaml: |-
    # Configure the administration interface to use a Unix socket so that
    # we don't expose it outside of the pod. Metrics will still be available
    # via an HTTP listener and cluster that translate HTTP requests for
    # /metrics into Unix socket requests for /stats/prometheus.
    admin:
      access_log_path: /dev/null
      address:
        pipe:
          path: /tmp/admin.socket

    static_resources:

      clusters:

      # This cluster exists so that we can answer the Kubernetes readiness and
      # liveness probes and so that we can translate /metrics requests into
      # /stats/prometheus wihout also having to expose the administration
      # port outside of the pod.
      - name: admin
        connect_timeout: 2s
        type: STATIC
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: admin
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  pipe:
                    path: /tmp/admin.socket

      # This cluster will be used for any request that we need to send to
      # the SSO service, in particular the requests to download the JSON
      # web key set used to verify the signatures of JSON web tokens used
      # for authentication.
      - name: sso
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: sso
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: sso.redhat.com
                    port_value: 443
        dns_lookup_family: v4_only
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # This cluster is used to send traffic to the web site:
      - name: site
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: site
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: gateway-site
                    port_value: 8000

      # Cluster for the `status-board` service:
      - name: status-board
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: status-board
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 7xgbvicx49d9j58.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # Cluster for the `web-rca` service:
      - name: web-rca
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: web-rca
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: aieet2z20kldyke.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # Cluster for the `upgrades_info` service:
      - name: upgrades_info
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: upgrades_info
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: ynkpvft2b33mrat.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # Cluster for the `assisted-install` service:
      - name: assisted-install
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: assisted-install
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: zoscaru4s08w1mz.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # Cluster for the `kafkas_mgmt` service:
      - name: kafkas_mgmt
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: kafkas_mgmt
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: ko23k3u1sh9ub9ir3a.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # Cluster for the `connectors_mgmt` service:
      - name: connector_mgmt
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: connector_mgmt
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: wxn4abbc8bqvxcy6unfe.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # Cluster for the `serviceregistry_mgmt` service:
      - name: serviceregistry_mgmt
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: serviceregistry_mgmt
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: epyl0jenyjuzxubqyz.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # Cluster for the `image-builder-composer` service:
      - name: image-builder-composer
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: image-builder-composer
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: jjgrs6byc8virun.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # Cluster for the `image-builder-worker` service:
      - name: image-builder-worker
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: image-builder-worker
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: jdtctdnzh7wn6j7.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # Cluster for the `rhose_mgmt` service:
      - name: rhose_mgmt
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: rhose_mgmt
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: gjklh2bmbuaio30.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      # Cluster for the `rhacs_mgmt` service:
      - name: rhacs_mgmt
        connect_timeout: 2s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: rhacs_mgmt
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: syqugpy2fa29zqc.api.openshift.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt

      listeners:

      # This listener is used to support probes and metrics.
      - name: admin
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: admin
              route_config:
                name: admin
                virtual_hosts:
                - name: admin
                  domains:
                  - "*"
                  routes:
                  - name: ready
                    match:
                      path: /ready
                    route:
                      cluster: admin
                  - name: metrics
                    match:
                      path: /metrics
                    route:
                      cluster: admin
                      prefix_rewrite: /stats/prometheus
              http_filters:
              - name: envoy.filters.http.router

      # This is the listener used for API traffic:
      - name: api
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9001
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              use_remote_address: true
              xff_num_trusted_hops: 1
              stat_prefix: api
              route_config:
                name: api
                virtual_hosts:
                - name: all
                  domains:
                  - "*"
                  routes:

                  # This route exists to keep backwards compatibility because the API
                  # gateway used to respond to the /.well-known/jwks.json path with the
                  # result of merging the JSON web key sets from different sources. It
                  # doesn't make much sense now because there is only one source, but there
                  # are still applications that use this.
                  - name: jwks
                    match:
                      path: /.well-known/jwks.json
                    route:
                      cluster: sso
                      prefix_rewrite: /auth/realms/redhat-external/protocol/openid-connect/certs
                      auto_host_rewrite: true

                  # Generate directly the API metadata response body containing the list of
                  # available services. This is used by the web page to populate the list
                  # of OpenAPI specifications.
                  - name: api
                    match:
                      path: /api
                    response_headers_to_add:
                    - header:
                        key: content-type
                        value: application/json
                    direct_response:
                      status: 200
                      body:
                        inline_string: |
                          {
                            "services": [
                              {
                                "id": "clusters_mgmt",
                                "name": "Clusters management service"
                              },
                              {
                                "id": "accounts_mgmt",
                                "name": "Accounts management service"
                              },
                              {
                                "id": "authorizations",
                                "name": "Authorization service"
                              },
                              {
                                "id": "service_logs",
                                "name": "Service logs"
                              },
                              {
                                "id": "upgrades_info",
                                "version": "",
                                "name": "Upgrades information service"
                              },
                              {
                                "id": "assisted-install",
                                "version": "v2",
                                "name": "assisted-service service"
                              },
                              {
                                "id": "kafkas_mgmt",
                                "name": "kafka service fleet manager service"
                              },
                              {
                                "id": "connector_mgmt",
                                "name": "connector service fleet manager service"
                              },
                              {
                                "id": "status-board",
                                "name": "Status Board service"
                              },
                              {
                                "id": "web-rca",
                                "name": "Web RCA service"
                              },
                              {
                                "id": "serviceregistry_mgmt",
                                "name": "Service Registry service fleet manager service"
                              },
                              {
                                "id": "image-builder-composer",
                                "version": "v2",
                                "name": "Image Builder service"
                              },
                              {
                                "id": "image-builder-worker",
                                "name": "Image Builder workers"
                              },
                              {
                                "id": "rhose_mgmt",
                                "name": "rhose service fleet manager service"
                              },
                              {
                                "id": "rhacs_mgmt",
                                "name": "rhacs service fleet manager service"
                              }
                            ]
                          }

                  # Route for the `status-board` service:
                  - name: status-board
                    match:
                      prefix: /api/status-board
                    route:
                      cluster: status-board
                      auto_host_rewrite: true
                      timeout: 30s

                  # Route for the `web-rca` service:
                  - name: web-rca
                    match:
                      prefix: /api/web-rca
                    route:
                      cluster: web-rca
                      auto_host_rewrite: true
                      timeout: 30s

                  # Route for the `upgrades_info` service:
                  - name: upgrades_info
                    match:
                      prefix: /api/upgrades_info
                    route:
                      cluster: upgrades_info
                      auto_host_rewrite: true
                      timeout: 30s

                  # Routes for the `assisted-install` service. Note that we
                  # have two separate routes: one for POST requests that we
                  # don't want to retry, and another one for the rest of the
                  # request that we do want to retry.
                  - name: assisted-install-post
                    match:
                      prefix: /api/assisted-install
                      headers:
                      - name: :method
                        exact_match: POST
                    route:
                      cluster: assisted-install
                      auto_host_rewrite: true
                      timeout: 180s
                  - name: assisted-install-other
                    match:
                      prefix: /api/assisted-install
                    route:
                      cluster: assisted-install
                      auto_host_rewrite: true
                      timeout: 180s
                      retry_policy:
                        retry_on: reset

                  # Route for the `assisted-image-service` service:
                  - name: assisted-image-service
                    match:
                      prefix: /api/assisted-images/
                    route:
                      cluster: assisted-install
                      prefix_rewrite: /
                      auto_host_rewrite: true
                      timeout: 180s

                  # Route for the `kafkas_mgmt` service:
                  - name: kafkas_mgmt
                    match:
                      prefix: /api/kafkas_mgmt
                    route:
                      cluster: kafkas_mgmt
                      auto_host_rewrite: true
                      timeout: 30s

                  # Route for the `connector_mgmt` service:
                  - name: connector_mgmt
                    match:
                      prefix: /api/connector_mgmt
                    route:
                      cluster: connector_mgmt
                      auto_host_rewrite: true
                      timeout: 30s

                  # Route for the `serviceregistry_mgmt` service:
                  - name: serviceregistry_mgmt
                    match:
                      prefix: /api/serviceregistry_mgmt
                    route:
                      cluster: serviceregistry_mgmt
                      auto_host_rewrite: true
                      timeout: 30s

                  # Route for the `image-builder-composer` service:
                  - name: image-builder-composer
                    match:
                      prefix: /api/image-builder-composer
                    route:
                      cluster: image-builder-composer
                      auto_host_rewrite: true
                      timeout: 120s

                  # Route for the `image-builder-worker` service:
                  - name: image-builder-worker
                    match:
                      prefix: /api/image-builder-worker
                    route:
                      cluster: image-builder-worker
                      auto_host_rewrite: true
                      timeout: 30s

                  # The rest of the traffic is sent to the site:
                  - name: site
                    match:
                      prefix: /
                    route:
                      cluster: site

                  # Route for the `rhose_mgmt` service:
                  - name: rhose_mgmt
                    match:
                      prefix: /api/v1/bridges
                    route:
                      cluster: rhose_mgmt
                      auto_host_rewrite: true
                      timeout: 30s

                  # Route for the `rhacs_mgmt` service:
                  - name: rhacs_mgmt
                    match:
                      prefix: /api/rhacs
                    route:
                      cluster: rhacs_mgmt
                      auto_host_rewrite: true
                      timeout: 30s

              http_filters:

              # This is always required.
              - name: envoy.filters.http.router
