- job-template:
    id: 'osd-operator-status-periodic-check'
    name: 'osd-operator-status-periodic-check'
    wrappers:
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *osd-operator-status-telemeter
    <<: *gl_timed

- job-template:
    id: 'gl-pr-check-osd-aws-privatelink-terraform-rosa'
    name: 'gl-pr-check-osd-aws-privatelink-terraform-rosa'
    pr_check_script_path: ./scripts/cicd.sh check
    environment: production
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *srep_privatelink_aws_credentials
        - *srep_pagerduty_credentials
        - *app_interface_basic_auth
        - *gitlab_fork_compliance_reconcile_toml
    publishers:
    - gitlab_message:
        <<: *gitlab_message_defaults
    - gitlab-notifier
    - archive:
        artifacts: '**/*.tfplan.txt, **/*-hiveconfig.yaml'
        allow-empty: 'true'
    <<: *gl_pr_check

- job-template:
    id: 'gl-build-master-osd-aws-privatelink-terraform-rosa'
    name: 'gl-build-master-osd-aws-privatelink-terraform-rosa'
    slack_channel_notification: 'sd-privatelink-info'
    branch: main
    build_deploy_script_path: ./scripts/cicd.sh apply
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *srep_privatelink_aws_credentials
        - *srep_pagerduty_credentials
    publishers:
    - gitlab_message:
        <<: *gitlab_message_defaults
    - gitlab-notifier
    - archive:
        artifacts: '**/*.tfplan.txt, **/*-hiveconfig.yaml'
        allow-empty: 'true'
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: False
        notify-failure: True
        notify-repeated-failure: True
    <<: *gl_build_master

- job-template:
    id: 'gl-pr-check-osd-aws-privatelink-terraform-hypershift'
    name: 'gl-pr-check-osd-aws-privatelink-terraform-hypershift'
    pr_check_script_path: ./scripts/cicd.sh check
    environment: production
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *srep_privatelink_aws_credentials
        - *app_interface_basic_auth
        - *gitlab_fork_compliance_reconcile_toml
    <<: *gl_pr_check

- job-template:
    id: 'gl-build-master-osd-aws-privatelink-terraform-hypershift'
    name: 'gl-build-master-osd-aws-privatelink-terraform-hypershift'
    slack_channel_notification: 'sd-privatelink-info'
    branch: main
    build_deploy_script_path: ./scripts/cicd.sh apply
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *srep_privatelink_aws_credentials
    publishers:
    - gitlab_message:
        <<: *gitlab_message_defaults
    - gitlab-notifier
    - archive:
        artifacts: '**/*.tfplan.txt, **/*-hiveconfig.yaml'
        allow-empty: 'true'
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: False
        notify-failure: True
        notify-repeated-failure: True
    <<: *gl_build_master

- job-template:
      id: 'gl-pr-check-aws-jumpaccounts-terraform'
      name: 'gl-pr-check-aws-jumpaccounts-terraform'
      pr_check_script_path: ./pr_check/pr_check.sh
      wrappers:
      - timeout_wrapper:
          timeout: '{timeout}'
      - ansicolor
      - vault-secrets:
          <<: *vault_defaults
          secrets:
          - *sre-platform-bot
          - *gitlab_fork_compliance_reconcile_toml
      <<: *gl_pr_check

- job-template:
    id: 'gl-pr-check-aws-payer-accounts-terraform'
    name: 'gl-pr-check-aws-payer-accounts-terraform'
    pr_check_script_path: ./hack/cicd.sh check
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *srep_aws_payer_accounts_credentials
    <<: *gl_pr_check

- job-template:
    id: 'gl-build-master-aws-payer-accounts-terraform'
    name: 'gl-build-master-aws-payer-accounts-terraform'
    build_deploy_script_path: ./hack/cicd.sh apply
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *srep_aws_payer_accounts_credentials
    <<: *gl_build_master

- job-template:
    id: 'gl-build-master-osd-backplane-bastion-infra-packer'
    name: 'gl-build-master-osd-backplane-bastion-infra-packer'
    ci_cmd: ./packer/scripts/build.sh
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *srep_privatelink_aws_credentials
        - *srep_backplane_bastion_ldap_creds
        - *srep_backplane_bastion_splunk_creds
        - *sre-platform-bot
    <<: *gl_timed

- job-template:
    id: 'gl-pr-check-osd-backplane-bastion-infra-terraform'
    name: 'gl-pr-check-osd-backplane-bastion-infra-terraform'
    pr_check_script_path: ./terraform/scripts/cicd.sh check
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *srep_privatelink_aws_credentials
        - *srep_backplane_bastion_ssh_host_keys
        - *sre-platform-bot
    <<: *gl_pr_check

- job-template:
    id: 'gl-build-master-osd-backplane-bastion-infra-terraform'
    name: 'gl-build-master-osd-backplane-bastion-infra-terraform'
    build_deploy_script_path: ./terraform/scripts/cicd.sh apply
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *srep_privatelink_aws_credentials
        - *srep_backplane_bastion_ssh_host_keys
        - *sre-platform-bot
    <<: *gl_build_master

- job-template:
    id: 'gl-build-master-osd-network-verifier-golden-ami-packer'
    name: 'gl-build-master-osd-network-verifier-golden-ami-packer'
    build_deploy_script_path: make build-and-publish-docker-and-ami
    wrappers:
    - timeout_wrapper:
        timeout: 45
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *srep_osd_network_verifier_golden_ami_credentials
        - *quay_secret_push
    <<: *gl_build_master

- job-template:
    id: 'gl-build-master-custom-catalog-source'
    name: '{gl_group}-{gl_project}-gl-build-{branch}-custom-catalog-source'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *redhat-registry-io-pull
        - *quay_secret_push
    <<: *gl_build_master

- job-template:
    id: 'gl-pr-check-custom-catalog-source'
    name: '{gl_group}-{gl_project}-gl-pr-check-custom-catalog-source'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *redhat-registry-io-pull
        - *quay_secret_push
    <<: *gl_pr_check

- job-template:
    id: 'gl-update-operator-version-custom-catalog-source'
    name: '{gl_group}-{gl_project}-version-custom-catalog-source'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *custom-catalog-source-credentials
    publishers:
    - git:
        push-merge: false
        push-only-if-success: true
        branches:
        - branch:
            name: "master"
    <<: *gl_timed

# gl-sync-package-operator and gh-sync-package-operator are used to sync upstream and downstream repositories of package-operator
# gl-* is used to get triggered by changes in the downstream repo, gh-* to get triggered on github changes. Both get the
# gitlab token of the app-sre bot to be able to push changes into the downstream repo.
- job-template:
    id: 'gl-sync-package-operator'
    name: 'gl-sync-package-operator'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *gitlab_token
    <<: *gl_build_master
- job-template:
    id: 'gh-sync-package-operator'
    name: 'gh-sync-package-operator'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *gitlab_token
    <<: *gh_build_master

- job-template:
    id: 'clusterimageset-run'
    job_name: 'clusterimageset-run'
    name: '{job_name}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *clusterimageset_run_aws_credentials
        - *clusterimageset_run_prom_token
    publishers:
    - git:
        push-merge: false
        push-only-if-success: true
        branches:
        - branch:
            name: "master"
    cron_expression: H/10 * * * *
    <<: *gl_timed

- job-template:
    id: 'gl-pr-check-clusterimagesets'
    name: '{gl_group}-{gl_project}-gl-pr-check'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *app_sre_bot_key
        - *gitlab_fork_compliance_reconcile_toml
        - *kube_config_hive_prod
        - *kube_config_hive_stage_01
        - *slack_hook_url
    builders:
    - shell: |
        export JUMPHOST="ci.ext.devshift.net"
        export JUMPHOST_USER="$APP_SRE_BOT_USERNAME"
        export SSH_PRIVATE_KEY_B64="$APP_SRE_BOT_KEY"

        ./pr_check.sh
    <<: *gl_pr_check
