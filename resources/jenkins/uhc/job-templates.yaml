- job-template:
    id: 'uhc-integration-tests'
    name: 'uhc-integration-tests-{environment}'
    node: '{node}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *uhc_integration_tests
    build_deploy_script_path: './run_integration_tests.sh'
    trigger_push: false
    publishers:
    - junit:
        results: '**/junit.xml'
        test-stability: true
        claim-build: true
        measurement-plots: true
        flaky-test-reports: true
        junit-attachments: true
    <<: *gl_build_master

- job-template:
    id: 'ocm-integration-full-cycle-tests'
    name: 'ocm-integration-full-cycle-tests-{environment}'
    node: '{node}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *uhc_integration_tests
    ci_cmd: './run_integration_full_cycle_tests.sh'
    cron_expression: '5 0 * * *'
    parameters:
    - string:
        name: GINKGO_FLAGS
        default: '--label-filter=!upgrade-only'
        description: 'Ginkgo flags for running the tests'
    publishers:
    - junit:
        results: '**/junit.xml'
        test-stability: true
        claim-build: true
        measurement-plots: true
        flaky-test-reports: true
        junit-attachments: true
    <<: *gl_timed

- job-template:
    id: 'ocm-upgrade-full-cycle-tests'
    name: 'ocm-upgrade-full-cycle-tests-{environment}'
    node: '{node}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *uhc_integration_tests
    ci_cmd: './run_integration_full_cycle_tests.sh'
    cron_expression: '5 4 * * *'
    parameters:
    - string:
        name: GINKGO_FLAGS
        default: '--label-filter=upgrade-only'
        description: 'Ginkgo flags for running the test - run upgrade test only'
    publishers:
    - junit:
        results: '**/junit.xml'
        test-stability: true
        claim-build: true
        measurement-plots: true
        flaky-test-reports: true
        junit-attachments: true
    <<: *gl_timed

- job-template:
    id: 'ocm-pr-check'
    name: '{gl_group}-{gl_project}-ocm-pr-check'
    environment: production
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *app_interface_basic_auth
        - *gitlab_fork_compliance_reconcile_toml
        - *ocm_sandbox
        - *quay_secret_ocm_clusters_service_sandbox_admin
        - *ocm_resources_job_secret
        - *ocm_resources_sentry_dsn
        - *api_tests_oc_login_token
        - *api_tests_sentry_dsn
    - ansicolor
    publishers:
    - archive:
        artifacts: 'logs/**'
        allow-empty: 'true'
    - junit:
        results: '**/junit.xml'
        test-stability: true
        claim-build: true
        measurement-plots: true
        flaky-test-reports: true
        junit-attachments: true
        allow-empty-results: true
    - gitlab_message:
        <<: *gitlab_message_defaults
    - gitlab-notifier
    - workspace-cleanup
    <<: *gl_pr_check

- job-template:
    id: 'ocm-build-master'
    name: '{gl_group}-{gl_project}-ocm-build-{branch}'
    environment: production
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *app_interface_basic_auth
        - *ocm_sandbox
        - *quay_secret_ocm_clusters_service_sandbox_admin
        - *ocm_resources_job_secret
        - *ocm_resources_sentry_dsn
        - *api_tests_oc_login_token
        - *api_tests_sentry_dsn
    <<: *gl_build_master

- job-template:
    id: 'ocm-build-master-timed-stage'
    name: '{gl_group}-{gl_project}-ocm-build-{branch}-timed-{environment}'
    environment: stage
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *app_interface_basic_auth
        - *ocm_sandbox
        - *quay_secret_ocm_clusters_service_sandbox_admin
        - *ocm_resources_job_secret
        - *ocm_resources_sentry_dsn
    ci_cmd: ./periodic_check.sh uhc-stage
    cron_expression: '0 */8 * * *'
    <<: *gl_timed

- job-template:
    id: 'ocm-build-master-timed-production'
    name: '{gl_group}-{gl_project}-ocm-build-{branch}-timed-{environment}'
    environment: production
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *app_interface_basic_auth
        - *ocm_sandbox
        - *quay_secret_ocm_clusters_service_sandbox_admin
        - *ocm_resources_job_secret
        - *ocm_resources_sentry_dsn
    ci_cmd: ./periodic_check.sh uhc-production
    cron_expression: '0 */8 * * *'
    <<: *gl_timed


- job-template:
    id: 'ocm-api-tests-timed'
    name: 'ocm-api-tests-{environment}-{tests}'
    tests: 'readonly'
    node: '{label}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *ocm_resources_job_secret
        - *api_tests_oc_login_token
        - *api_tests_sentry_dsn
    ci_cmd: ./periodic_check.sh
    cron_expression: '0 */6 * * *'
    upstream: ''
    triggers:
    - reverse:
        jobs: '{upstream}'
        results: 'success'
    publishers:
    - workspace-cleanup
    <<: *gl_timed

- job-template:
    id: 'ocm-build-image'
    name: '{gl_group}-{gl_project}-ocm-build-image'
    environment: production
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *quay_secret_push
        - *api_tests_sentry_dsn
    <<: *gl_build_master

- job-template:
    id: 'ocm-backend-ci'
    name: 'ocm-backend-ci-tests'
    node: '{node}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *ocm_backend_tests
        - *qe_aws_credentials
        - *qe_gcp_credentials
    parameters:
    - choice:
        name: OCM_ENV
        default: '{environment}'
        description: 'Environment against test suite run. Ex: staging/production'
        choices:
            - staging
            - production
            - integration
    - string:
        name: PROFILES
        default: '{default_profiles}'
        description: 'Profiles you want to run in multi processes, like rosa-hcp-ad. All defined <a href="https://gitlab.cee.redhat.com/service/ocm-backend-tests/-/blob/master/data/ci/profiles/cms-cluster-profile.yml">here</a>'
    - string:
        name: VERSION
        default: '{version}'
        description: 'Specify a version you want to test like openshift-v4.12.0'
    - string:
        name: CHANNEL_GROUP
        default: '{default_channel}'
        description: 'The channel group you want to use for cluster creation default stable'
    - string:
        name: CLOUD_PROVIDER
        description: 'The cluster provider of the indicated region for the cases running, default empty. Please notice to choose the correct profile aligned with the profile and region.'
    - string:
        name: REGION
        description: 'The region if you want to use for cluster creation,when not set, it will use the one defined in profile'
    - string:
        name: PROVISION_SHARD
        default: ''
        description: 'Once you want to specify a provision shard for the profile testing, fill in a id here'
    - string:
        name: CASE_LABEL_FILTER
        default: 'public_hypershift_CH'
        description: 'Set the predefined case filter name for your job. You can find predefined labelfilters <a href="https://gitlab.cee.redhat.com/service/ocm-backend-tests/-/blob/master/predefined_labels.py">here</a>'
    - string:
        name: CUSTOMIZED_LABEL_FILTER
        default: ''
        description: 'You can customized your own label filter for the cases once you cannot find predefined one. For example "Matrix&&HCPOnly&&E2E"'
    - bool:
        name: PREPARE_ONLY
        default: false
        description: 'Only prepare a cluster with the profile once enabled. In case you just need a prepared cluster'
    - bool:
        name: SKIP_PREPARE
        default: false
        description: 'Skip the preparation of the cluster and run the test cases directly. But notice if there is a case needs prepared cluster, the case will fail'
    branch: master
    ci_cmd: ./run_profile.sh
    cron_expression: '0 0 * * *'
    publishers:
    - archive:
        artifacts: 'output/**'
        allow-empty: 'true'
    - junit:
        results: '**/junit.xml'
        test-stability: true
        claim-build: true
        measurement-plots: true
        flaky-test-reports: true
        junit-attachments: true
    <<: *gl_timed
