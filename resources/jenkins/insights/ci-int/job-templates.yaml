- job-template:
    id: 'insights-gl-pr-check'
    name: '{gl_group}-{gl_project}-pr-check'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
        - *quay_api_token
        - *sonarqube_token
        - *gitlab_token_iqe_bot
        - *ibutsu
    success_note: false
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - gitlab_message:
        <<: *gitlab_message_defaults
    - gitlab-notifier:
        failure-only: true
        name: '{name}'
        mark-unstable-as-success: false
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *gl_pr_check

- job-template:
    id: 'insights-gl-pr-check-safe-name'
    # safe_name_root should be set to something that adheres to jenkins safe job names (no '/')
    name: '{safe_name_root}-pr-check'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
        - *quay_api_token
        - *sonarqube_token
        - *gitlab_token_iqe_bot
        - *ibutsu
    success_note: false
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - gitlab_message:
        <<: *gitlab_message_defaults
    - gitlab-notifier:
        failure-only: true
        name: '{name}'
        mark-unstable-as-success: false
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *gl_pr_check

- job-template:
    id: 'insights-gl-smoke-test'
    name: '{gl_group}-{gl_project}-smoke-test-{branch}'
    slack_notify_unstable: false
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *insightsdroid_github
        - *quay_api_token
        - *quay_secret_push
    builders:
    - shell: './smoke_test.sh'
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
        notify-unstable: '{slack_notify_unstable}'
    <<: *gl_timed

- job-template:
    id: 'insights-gl-smoke-test-dev'
    name: '{gl_group}-{gl_project}-smoke-test-dev-{branch}'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *insightsdroid_github
        - *quay_api_token
        - *quay_secret_push
    builders:
    - shell: './smoke_test.sh'
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    <<: *gl_timed

- job-template:
    id: 'insights-gl-build-master'
    name: '{gl_group}-{gl_project}-gl-build-{branch}'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
    publishers:
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *gl_build_master

- job-template:
    id: 'insights-gl-build-master-safe-name'
    # safe_name_root should be set to something that adheres to jenkins safe job names (no '/')
    name: '{safe_name_root}-gl-build'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
    publishers:
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *gl_build_master

- job-template:
    id: 'insights-ephemeral-namespace-reconciler'
    name: 'insights-ephemeral-namespace-reconciler'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
    <<: *gh_timed

- job-template:
    id: 'insights-deploy-notifier'
    name: 'insights-deploy-notifier'
    concurrent: true
    gl_group: insights-platform
    gl_project: cicd-common
    branch: master
    wrappers:
    - timeout_wrapper:
        timeout: 60
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *app_sre_ci_trigger_jobs_bot
        # TODO: add secrets for POST'ing to ibutsu and creating a grafana annotation
    triggers:
    - reverse:
        jobs: '{obj:upstream_saas_jobs}'
        result: 'success'
    builders:
    - shell: './deploy_notifier.sh'
    <<: *gl_checkout

- job-template:
    id: 'insights-saas-templates-sync'
    name: 'insights-saas-templates-sync'
    branch: master
    gl_group: insights-platform
    gl_project: saas-templates
    ci_cmd: './ci.sh'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *gitlab_token
        - *app_sre_bot_push_token
        - *insightsdroid_github
    <<: *gl_timed

- job-template:
    id: 'run-iqe'
    name: "{display_name}"
    gl_group: insights-platform
    gl_project: cicd-common
    branch: master
    ci_cmd: 'run_iqe/run_iqe.sh'
    iqe_marker_expression: ""
    iqe_filter_expression: ""
    iqe_requirements: ""
    iqe_requirements_priority: ""
    iqe_test_importance: ""
    iqe_plugins: ""
    iqe_env: ""
    iqe_selenium: "false"
    iqe_image: ""
    selenium_image: ""
    parameters:
    - string:
        name: IQE_MARKER_EXPRESSION
        default: "{iqe_marker_expression}"
    - string:
        name: IQE_FILTER_EXPRESSION
        default: "{iqe_filter_expression}"
    - string:
        name: IQE_REQUIREMENTS
        default: "{iqe_requirements}"
    - string:
        name: IQE_REQUIREMENTS_PRIORITY
        default: "{iqe_requirements_priority}"
    - string:
        name: IQE_TEST_IMPORTANCE
        default: "{iqe_test_importance}"
    - string:
        name: IQE_PLUGINS
        default: "{iqe_plugins}"
    - string:
        name: IQE_ENV
        default: "{iqe_env}"
    - string:
        name: IQE_SELENIUM
        default: "{iqe_selenium}"
    - string:
        name: IQE_IMAGE
        default: "{iqe_image}"
    - string:
        name: SELENIUM_IMAGE
        default: "{selenium_image}"
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *iqe_vault
        - *quay_secret_pull
        - *ibutsu
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    <<: *gl_timed

- job-template:
    id: 'insights-engine-gl-pr-check'
    name: '{gl_group}-{gl_project}-pr-check'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *prodsec_rules_build_token
        - *insightsdroid_github
        - *quay_api_token
        - *ibutsu
    failure_only: true
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - gitlab_message:
        <<: *gitlab_message_defaults
    - gitlab-notifier:
        failure-only: true
        name: '{name}'
        mark-unstable-as-success: false
    <<: *gl_pr_check

- job-template:
    id: 'insights-engine-gl-build-master'
    name: '{gl_group}-{gl_project}-gl-build-{branch}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *prodsec_rules_build_token
        - *quay_api_token
    <<: *gl_build_master

- job-template:
    id: 'insights-gh-build-master'
    name: '{gh_org}-{gh_repo}-gh-build-{branch}'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
        - *chrome_cypress
    publishers:
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    - naginator:
        max-failed-builds: 3
    <<: *gh_build_master

- job-template:
    id: 'insights-gh-build-master-stable'
    name: '{gh_org}-{gh_repo}-gh-build-{branch}-stable'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
        - *chrome_cypress
    publishers:
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    - naginator:
        max-failed-builds: 3
    <<: *gh_build_master

- job-template:
    id: 'insights-gh-pr-check'
    name: '{gh_org}-{gh_repo}-pr-check'
    concurrent: '{concurrent_build}'
    branch: "master"
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
        - *quay_api_token
        - *hac_keycloak_secret
        - *ibutsu
        - *hac_prcheck_secret
        - *chrome_cypress
        - *cypress_setup
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *insights_gh_pr_check

- job-template:
    id: 'hms-gh-pr-check'
    name: '{gh_repo}-pr-check-{branch}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
        - *quay_api_token
        - *hac_keycloak_secret
        - *ibutsu
    <<: *hms_gh_pr_check

- job-template:
    id: 'insights-deploy-ephemeral'
    description: 'To 1) reserve and deploy an Insight app to ephemeral cluster 2) release namespaces the user has reserved. For additional documentation and usage instructions please see: https://docs.google.com/document/d/1f6D1ZwE40QuyoqsfuXpqPlCqOVwssGNEwr-iGDOYvVY/'
    name: '{name}-ephemeral'
    node: '{node}'
    ci_cmd: ./ephemeral.sh
    gl_group: insights-platform
    gl_project: cicd-common
    app_name: ""
    ui_ref: ""
    ui_image: ""
    component_name: ""
    image: ""
    git_commit: ""
    image_tag: ""
    components: ""
    components_w_resources: ""
    deploy_timeout: ""
    additional_arg: ""
    post_deployment_script: ""
    verbose: false
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - build-user-vars
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
    <<: *gl_checkout
    parameters:
    - bool:
        name: RELEASE_NAMESPACE
        default: false
        description: "(optional) Release a previously reserved namespace. Selecting this will not deploy anything"
    - string:
        name: NAMESPACE
        default: ""
        description: "(REQUIRED only if RELEASE_NAMESPACE=true) Namespace number to release. E.g. if the namepace is ephemeral-01, please enter: 01. Enter 'all' to release all of current user's"
    - string:
        name: APP_NAME
        default: '{app_name}'
        description: "(REQUIRED) name of app-sre 'application' folder this component lives in"
    - choice:
        name: INCLUDE_UI
        choices:
          - "none"
          - "aggregator"
          - "operator"
        description: "What ui to deploy if required"
    - string:
        name: UI_REF
        default: '{ui_ref}'
        description: "(optional) If INCLUDE_UI is set to AGGREGATOR: (default: prod-beta) git ref of the component's UI deployment repo to deploy front-end assets from. If INCLUDE_UI is set to OPERATOR: (default: latest) image tag for the UI/front-end to deploy."
    - string:
        name: UI_IMAGE
        default: '{ui_image}'
        description: "(optional) image location of the UI/front-end on quay. Only used if INCLUDE_UI is set to OPERATOR."
    - string:
        name: COMPONENT_NAME
        default: '{component_name}'
        description: "(REQUIRED) name of app-sre 'resourceTemplate' in deploy.yaml for this component"
    - string:
        name: IMAGE
        default: '{image}'
        description: "(REQUIRED) image location on quay"
    - string:
        name: GIT_COMMIT_INPUT
        default: '{git_commit}'
        description: "(REQUIRED) full git commit hash of the version being tested"
    - string:
        name: IMAGE_TAG_INPUT
        default: '{image_tag}'
        description: "(optional, default matches short GIT_COMMIT_INPUT) image tag for the version being tested"
    - string:
        name: COMPONENTS
        default: '{components}'
        description: "(optional, default: all) space separated components to deploy"
    - string:
        name: COMPONENTS_W_RESOURCES
        default: '{components_w_resources}'
        description: "(optional, default: none) space separated components which should preserve resource settings"
    - string:
        name: DEPLOY_TIMEOUT
        default: '{deploy_timeout}'
        description: "(optional, default: 300) bonfire deployment timeout parameter in seconds"
    - string:
        name: ADDITIONAL_ARG
        default: '{additional_arg}'
        description: "(optional, default: none) additional arguments passed to the bonfire deployment"
    - string:
        name: POST_DEPLOYMENT_SCRIPT
        default: '{post_deployment_script}'
        description: "(optional, default: none) a post deployment script to run from the cicd-common/app_scripts directory."
    - choice:
        name: RESERVATION_DURATION
        choices:
          - "1"
          - "2"
          - "4"
          - "12"
          - "24"
          - "72"
        description: "Number of hours for which the ephemeral namespace is reserved"
    - bool:
        name: VERBOSE
        default: {obj:verbose}
        description: "(optional) if selected, the job's console output will be verbose"
    builders:
    - shell:
        command: "{ci_cmd}"

- job-template:
    id: 'prune-deployed-events-db'
    name: 'prune-deployed-events-db'
    gl_group: insights-platform
    gl_project: cicd-common
    branch: master
    ci_cmd: 'app_scripts/remove_old_deployed_events.sh'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *prune_deploy_events_db_secrets
    <<: *gl_timed

# Wrappers Ignored for Pipeline type:
# https://opendev.org/jjb/jenkins-job-builder/src/commit/a191e0b174322a55eac082ad4815fb7c35de56fa/jenkins_jobs/modules/wrappers.py#L3003-L3006
# Publishers ignored for Pipeline type:
# https://opendev.org/jjb/jenkins-job-builder/src/commit/a191e0b174322a55eac082ad4815fb7c35de56fa/jenkins_jobs/modules/publishers.py#L8338-L8341
- job-template:
    id: 'insights-gh-pipeline'
    name: '{gh_org}-{gh_repo}-pipeline-pr-check-{branch}'
    concurrent: '{concurrent_build}'
    branch: "master"
    jenkinsfile_path: Jenkinsfile
    slack_channel_notification: 'consoledot-development-fails'
    project-type: pipeline
    parameters:
    - string:
        name: VAULT_ADDRESS
        default: "https://vault.devshift.net"
    - string:
        name: VAULT_CREDS_ID
        default: 'vault-creds'
    - string:
        name:   VAULT_PATH_SVC_ACCOUNT_EPHEMERAL
        default: 'insights-cicd/ephemeral-bot-svc-account'
    - string:
        name:   VAULT_PATH_QUAY_PUSH
        default: 'app-sre/quay/cloudservices-push'
    - string:
        name: VAULT_PATH_RHR_PULL
        default: 'insights-cicd/rh-registry-pull'
    - string:
        name: VAULT_PATH_MINIKUBE
        default: 'insights-cicd/minikube-ssh-key-22.04'
    - string:
        name: VAULT_PATH_QUAY_TOKEN
        default: 'insights-cicd/quay/{quay_org}'
    - string:
        name: VAULT_PATH_APP_INTERFACE_CREDS
        default: 'app-sre/creds/app-interface/production/basic-auth'
    - string:
        name: VAULT_PATH_CHROME_CYPRESS
        default: 'insights-cicd/chrome'
    pipeline-scm:
      script-path: '{jenkinsfile_path}'
      scm:
      - git:
          url: 'git@github.com:{gh_org}/{gh_repo}.git'
          credentials-id: '{github_ssh_credentials}'
          skip-tag: true
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          branches:
          - '${{ghprbActualCommit}}'
          merge:
              remote: origin
              branch: '{branch}'
          git-config-name: "AppSRE"
          git-config-email: "sd-app-sre@redhat.com"
          included-regions:
          - '{include_path}'
          prune: true
          clean:
              before: true
          wipe-workspace: true
    triggers:
        - github-pull-request:
            <<: *insights_default_ghprb_triggers_cfg
            <<: *insights_default_admin_list_cfg
    disabled: '{disable}'
    node: '{node}'
    run_stack_analysis_path: ''
    max_previous_builds_count: 20
    <<: *gh_properties
    builders:
    - *stack_analysis

# Purpose of this job is to add option parameters to choose
# which stages developers want to run.
- job-template:
    id: 'insights-gh-pipeline-experimental'
    name: '{gh_org}-{gh_repo}-pipeline-experimental-{branch}'
#    slack_channel_notification: 'consoledot-development-fails'
    project-type: pipeline
    parameters:
    - string:
        name: VAULT_ADDRESS
        default: "https://vault.devshift.net"
    - string:
        name: VAULT_CREDS_ID
        default: 'vault-creds'
    - string:
        name:   VAULT_PATH_SVC_ACCOUNT_EPHEMERAL
        default: 'insights-cicd/ephemeral-bot-svc-account'
    - string:
        name:   VAULT_PATH_QUAY_PUSH
        default: 'app-sre/quay/cloudservices-push'
    - string:
        name: VAULT_PATH_RHR_PULL
        default: 'insights-cicd/rh-registry-pull'
    - string:
        name: VAULT_PATH_MINIKUBE
        default: 'insights-cicd/minikube-ssh-key-22.04'
    - string:
        name: VAULT_PATH_QUAY_TOKEN
        default: 'insights-cicd/quay/{quay_org}'
    - string:
        name: VAULT_PATH_APP_INTERFACE_CREDS
        default: 'app-sre/creds/app-interface/production/basic-auth'
    - string:
        name: VAULT_PATH_CHROME_CYPRESS
        default: 'insights-cicd/chrome'
    
    # Parameters to set which stages will run
    - string:
        name: BUILD_FLAG
        allowedValues: ['no', 'yes']
        default: 'no'
    - string:
        name: CYPRESS_COMPONENT_TESTS_FLAG
        allowedValues: ['no', 'yes']
        default: 'no'
    - string:
        name: CYPRESS_E2E_TESTS_FLAG
        allowedValues: ['no', 'yes']
        default: 'no'
    - string:
        name: FRONTEND_BUILD_FLAG
        allowedValues: ['no', 'yes']
        default: 'no'
    - string:
        name: IQE_TESTS_FLAG
        allowedValues: ['no', 'yes']
        default: 'no'
    - string:
        name: LINT_FLAG
        allowedValues: ['no', 'yes']
        default: 'no'
    - string:
        name: UNIT_TESTS_FLAG
        allowedValues: ['no', 'yes']
        default: 'no'
    pipeline-scm:
      # make parameter to override template name
      script-path: 'Jenkinsfile'
      scm:
      - git:
          url: 'git@github.com:{gh_org}/{gh_repo}.git'
          credentials-id: '{github_ssh_credentials}'
          skip-tag: true
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          branches:
          - '${{ghprbActualCommit}}'
          merge:
              remote: origin
              branch: '{branch}'
          git-config-name: "AppSRE"
          git-config-email: "sd-app-sre@redhat.com"
          included-regions:
          - '{include_path}'
          prune: true
          clean:
              before: true
          wipe-workspace: true
    triggers:
        - github-pull-request:
            <<: *insights_default_ghprb_triggers_cfg
            <<: *insights_default_admin_list_cfg
    disabled: '{disable}'
    node: '{node}'
    concurrent: '{concurrent_build}'
    run_stack_analysis_path: ''
    max_previous_builds_count: 20
    <<: *gh_properties
    builders:
    - *stack_analysis
    publishers:
    - git:
        message: 'My fancy note to display the state'
        replace-note: true
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'

- job-template:
    id: 'insights-gl-pipeline'
    name: '{gl_group}-{gl_project}-pipeline-pr-check-{branch}'
    branch: master
    jenkinsfile_path: Jenkinsfile
    slack_channel_notification: 'consoledot-development-fails'
    project-type: pipeline
    parameters:
    - string:
        name: VAULT_ADDRESS
        default: "https://vault.devshift.net"
    - string:
        name: VAULT_CREDS_ID
        default: 'vault-creds'
    - string:
        name:   VAULT_PATH_SVC_ACCOUNT_EPHEMERAL
        default: 'insights-cicd/ephemeral-bot-svc-account'
    - string:
        name:   VAULT_PATH_QUAY_PUSH
        default: 'app-sre/quay/cloudservices-push'
    - string:
        name: VAULT_PATH_RHR_PULL
        default: 'insights-cicd/rh-registry-pull'
    - string:
        name: VAULT_PATH_MINIKUBE
        default: 'insights-cicd/minikube-ssh-key-22.04'
    - string:
        name: VAULT_PATH_QUAY_TOKEN
        default: 'insights-cicd/quay/{quay_org}'
    - string:
        name: VAULT_PATH_APP_INTERFACE_CREDS
        default: 'app-sre/creds/app-interface/production/basic-auth'
    pipeline-scm:
      script-path: '{jenkinsfile_path}'
      scm:
      - git:
          remotes:
          - 'origin':
              url: 'git@gitlab.cee.redhat.com:{gl_group}/{gl_project}.git'
              credentials-id: '{gitlab_ssh_credentials}'
              refspec: '+refs/heads/*:refs/remotes/origin/* +refs/merge-requests/${{gitlabMergeRequestIid}}/head:refs/remotes/origin/merge-requests/${{gitlabMergeRequestIid}}'
          branches:
          - 'merge-requests/${{gitlabMergeRequestIid}}'
          merge:
              remote: 'origin'
              branch: '${{gitlabTargetBranch}}'
          included-regions:
          - '{include_path}'
          prune: true
          clean:
            before: true
          wipe-workspace: true
    disabled: '{disable}'
    node: '{node}'
    concurrent: '{concurrent_build}'
    run_stack_analysis_path: ''
    max_previous_builds_count: 20
    <<: *gl_properties
    builders:
    - *stack_analysis
    triggers:
    - gitlab:
        trigger-push: true
        trigger-merge-request: true
        trigger-open-merge-request-push: source
        note-regex: '(?ms).*^(\[test\]|\/retest|\/lgtm|\/lgtm cancel|\/hold|\/hold cancel)\s*$.*'
        set-build-description: true
        add-note-merge-request: true
        add-vote-merge-request: true
        add-ci-message: true
        allow-all-branches: true
        ci-skip: true
        wip-skip: true
        cancel-pending-builds-on-update: true

# Wrappers and Publishers are ignored for 'Pipeline' project type
# https://opendev.org/jjb/jenkins-job-builder/src/commit/a191e0b174322a55eac082ad4815fb7c35de56fa/jenkins_jobs/modules/wrappers.py#L3003-L3006
# https://opendev.org/jjb/jenkins-job-builder/src/commit/a191e0b174322a55eac082ad4815fb7c35de56fa/jenkins_jobs/modules/publishers.py#L8338-L8341
- job-template:
    id: 'insights-vulnerability-gh-build-master'
    name: '{gh_org}-{gh_repo}-gh-build-{branch}'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
        - *vulnerabilitybot_github
    publishers:
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    - naginator:
        max-failed-builds: 3
    <<: *gh_build_master

- job-template:
    id: 'insights-vulnerability-gh-pr-check'
    name: '{gh_org}-{gh_repo}-pr-check'
    branch: "master"
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
        - *quay_api_token
        - *hac_keycloak_secret
        - *ibutsu
        - *hac_prcheck_secret
        - *chrome_cypress
        - *vulnerabilitybot_github
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *insights_gh_pr_check

- job-template:
    id: 'insights-gh-scheduled-rebuild'
    name: '{gh_org}-{gh_repo}-scheduled-rebuild-{branch}'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *insightsdroid_github
        - *quay_api_token
        - *quay_secret_push
    <<: *gh_timed

- job-template:
    id: 'insights-gl-scheduled-rebuild'
    name: '{gl_group}-{gl_project}-scheduled-rebuild-{branch}'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *insightsdroid_github
        - *quay_api_token
        - *quay_secret_push
    <<: *gl_timed

- job-template:
    id: 'hac-gh-pr-check'
    name: '{gh_org}-{gh_repo}-pr-check-{branch}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
        - *quay_api_token
        - *hac_keycloak_secret
        - *ibutsu
        - *hac_prcheck_secret
        - *chrome_cypress
        - *cypress_setup
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    <<: *insights_gh_pr_check
