- job-template:
    id: 'insights-gl-pr-check'
    name: '{gl_group}-{gl_project}-pr-check'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
        - *quay_api_token
        - *sonarqube_token
        - *gitlab_token_iqe_bot
        - *ibutsu
    success_note: false
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - gitlab_message:
        <<: *gitlab_message_defaults
    - gitlab-notifier:
        failure-only: true
        name: '{name}'
        mark-unstable-as-success: false
    - slack: 
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *gl_pr_check

- job-template:
    id: 'insights-gl-smoke-test'
    name: '{gl_group}-{gl_project}-smoke-test-{branch}'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *insightsdroid_github
        - *quay_api_token
        - *quay_secret_push
    builders:
    - shell: './smoke_test.sh'
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *gl_timed

- job-template:
    id: 'insights-gl-smoke-test-dev'
    name: '{gl_group}-{gl_project}-smoke-test-dev-{branch}'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *insightsdroid_github
        - *quay_api_token
        - *quay_secret_push
    builders:
    - shell: './smoke_test.sh'
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    <<: *gl_timed

- job-template:
    id: 'insights-gl-build-master'
    name: '{gl_group}-{gl_project}-gl-build-{branch}'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
    publishers:
    - slack: 
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *gl_build_master

- job-template:
    id: 'insights-platform-gl-build-cicd-cypress'
    name: '{gl_group}-{gl_project}-gl-build-{branch}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
    <<: *gl_build_master

- job-template:
    id: 'insights-gl-build-cypress-image'
    name: '{gl_group}-{gl_project}-gl-build-{branch}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
    <<: *gl_build_master

- job-template:
    id: 'insights-gl-build-iqe-debug-image'
    name: '{gl_group}-{gl_project}-gl-build-{branch}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
    <<: *gl_build_master

- job-template:
    id: 'insights-ephemeral-namespace-reconciler'
    name: 'insights-ephemeral-namespace-reconciler'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
    <<: *gh_timed

- job-template:
    id: 'insights-deploy-notifier'
    name: 'insights-deploy-notifier'
    concurrent: true
    gl_group: insights-platform
    gl_project: cicd-common
    branch: master
    wrappers:
    - timeout_wrapper:
        timeout: 60
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *app_sre_ci_trigger_jobs_bot
        # TODO: add secrets for POST'ing to ibutsu and creating a grafana annotation
    triggers:
    - reverse:
        jobs: '{obj:upstream_saas_jobs}'
        result: 'success'
    builders:
    - shell: './deploy_notifier.sh'
    <<: *gl_checkout

- job-template:
    id: 'insights-saas-templates-sync'
    name: 'insights-saas-templates-sync'
    branch: master
    gl_group: insights-platform
    gl_project: saas-templates
    ci_cmd: './ci.sh'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *gitlab_token
        - *app_sre_bot_push_token
        - *insightsdroid_github
    <<: *gl_timed

- job-template:
    id: 'insights-engine-gl-pr-check'
    name: '{gl_group}-{gl_project}-pr-check'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *prodsec_rules_build_token
        - *insightsdroid_github
        - *quay_api_token
        - *ibutsu
    failure_only: true
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - gitlab_message:
        <<: *gitlab_message_defaults
    - gitlab-notifier:
        failure-only: true
        name: '{name}'
        mark-unstable-as-success: false
    <<: *gl_pr_check

- job-template:
    id: 'insights-engine-gl-build-master'
    name: '{gl_group}-{gl_project}-gl-build-{branch}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *prodsec_rules_build_token
        - *quay_api_token
    <<: *gl_build_master

- job-template:
    id: 'insights-gh-build-master'
    name: '{gh_org}-{gh_repo}-gh-build-{branch}'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
    publishers:
    - slack: 
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    - naginator:
        max-failed-builds: 3
    <<: *gh_build_master

- job-template:
    id: 'insights-gh-pr-check'
    name: '{gh_org}-{gh_repo}-pr-check'
    branch: "master"
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
        - *quay_api_token
        - *hac_keycloak_secret
        - *ibutsu
        - *hac_prcheck_secret
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *insights_gh_pr_check

- job-template:
    id: 'hms-gh-pr-check'
    name: '{gh_org}-{gh_repo}-pr-check'
    branch: "master"
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
        - *quay_api_token
        - *hac_keycloak_secret
        - *ibutsu
    <<: *hms_gh_pr_check

- job-template:
    id: 'insights-deploy-ephemeral'
    description: 'To 1) reserve and deploy an Insight app to ephemeral cluster 2) release namespaces the user has reserved. For additional documentation and usage instructions please see: https://docs.google.com/document/d/1f6D1ZwE40QuyoqsfuXpqPlCqOVwssGNEwr-iGDOYvVY/'
    name: '{name}-ephemeral'
    node: '{node}'
    ci_cmd: ./ephemeral.sh
    gl_group: insights-platform
    gl_project: cicd-common
    app_name: ""
    ui_ref: ""
    ui_image: ""
    component_name: ""
    image: ""
    git_commit: ""
    image_tag: ""
    components: ""
    components_w_resources: ""
    deploy_timeout: ""
    additional_arg: ""
    post_deployment_script: ""
    verbose: false
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - build-user-vars
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
    <<: *gl_checkout
    parameters:
    - bool:
        name: RELEASE_NAMESPACE
        default: false
        description: "(optional) Release a previously reserved namespace. Selecting this will not deploy anything"
    - string:
        name: NAMESPACE
        default: ""
        description: "(REQUIRED only if RELEASE_NAMESPACE=true) Namespace number to release. E.g. if the namepace is ephemeral-01, please enter: 01. Enter 'all' to release all of current user's"
    - string:
        name: APP_NAME
        default: '{app_name}'
        description: "(REQUIRED) name of app-sre 'application' folder this component lives in"
    - choice:
        name: INCLUDE_UI
        choices:
          - "none"
          - "aggregator"
          - "operator"
        description: "What ui to deploy if required"
    - string:
        name: UI_REF
        default: '{ui_ref}'
        description: "(optional) If INCLUDE_UI is set to AGGREGATOR: (default: prod-beta) git ref of the component's UI deployment repo to deploy front-end assets from. If INCLUDE_UI is set to OPERATOR: (default: latest) image tag for the UI/front-end to deploy."
    - string:
        name: UI_IMAGE
        default: '{ui_image}'
        description: "(optional) image location of the UI/front-end on quay. Only used if INCLUDE_UI is set to OPERATOR."
    - string:
        name: COMPONENT_NAME
        default: '{component_name}'
        description: "(REQUIRED) name of app-sre 'resourceTemplate' in deploy.yaml for this component"
    - string:
        name: IMAGE
        default: '{image}'
        description: "(REQUIRED) image location on quay"
    - string:
        name: GIT_COMMIT_INPUT
        default: '{git_commit}'
        description: "(REQUIRED) full git commit hash of the version being tested"
    - string:
        name: IMAGE_TAG_INPUT
        default: '{image_tag}'
        description: "(optional, default matches short GIT_COMMIT_INPUT) image tag for the version being tested"
    - string:
        name: COMPONENTS
        default: '{components}'
        description: "(optional, default: all) space separated components to deploy"
    - string:
        name: COMPONENTS_W_RESOURCES
        default: '{components_w_resources}'
        description: "(optional, default: none) space separated components which should preserve resource settings"
    - string:
        name: DEPLOY_TIMEOUT
        default: '{deploy_timeout}'
        description: "(optional, default: 300) bonfire deployment timeout parameter in seconds"
    - string:
        name: ADDITIONAL_ARG
        default: '{additional_arg}'
        description: "(optional, default: none) additional arguments passed to the bonfire deployment"
    - string:
        name: POST_DEPLOYMENT_SCRIPT
        default: '{post_deployment_script}'
        description: "(optional, default: none) a post deployment script to run from the cicd-common/app_scripts directory."
    - choice:
        name: RESERVATION_DURATION
        choices:
          - "1"
          - "2"
          - "4"
          - "12"
          - "24"
          - "72"
        description: "Number of hours for which the ephemeral namespace is reserved"
    - bool:
        name: VERBOSE
        default: {obj:verbose}
        description: "(optional) if selected, the job's console output will be verbose"
    builders:
    - shell:
        command: "{ci_cmd}"

- job-template:
    id: 'prune-deployed-events-db'
    name: 'prune-deployed-events-db'
    gl_group: insights-platform
    gl_project: cicd-common
    branch: master
    ci_cmd: 'app_scripts/remove_old_deployed_events.sh'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *prune_deploy_events_db_secrets
    <<: *gl_timed
