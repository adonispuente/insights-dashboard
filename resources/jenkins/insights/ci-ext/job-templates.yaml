- base_templates:
    name: insights-base-templates

    gpg_verify: &gpg_verify
        shell: |
            # Load GPG keys from app-interface
            python3 -m venv .
            source bin/activate
            pip3 install graphqlclient
            curl -LO https://raw.githubusercontent.com/RedHatInsights/gpg-verify/master/import_gpg.py
            python3 import_gpg.py

            echo '#!/bin/sh
            exec gpg --no-default-keyring --keyring=$PWD/git.gpg "$@"' > gitgpg
            chmod +x gitgpg
            git config gpg.program $PWD/gitgpg
            git verify-commit $ghprbActualCommit

            if [ $? != 0 ]; then
                echo "GPG signature either not present or not trusted"
                exit 1
            fi


- job-template:
    id: 'insights-operator-gh-pr-check'
    name: '{gh_org}-{gh_repo}-pr-check'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
        - *insights_minikube_ssh_key
        - *insightsdroid_github
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    <<: *gh_pr_check
    builders:
    - *gpg_verify
    - *pr_check
    - *stack_analysis


- job-template:
    id: 'insights-gh-pr-check'
    name: '{gh_org}-{gh_repo}-pr-check'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
        - *insightsdroid_github
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    scm:
    - git:
        url: 'git@github.com:{gh_org}/{gh_repo}.git'
        credentials-id: '{github_ssh_credentials}'
        skip-tag: true
        refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
        branches:
        - '${{ghprbActualCommit}}'
        merge:
            remote: origin
            branch: '{branch}'
        git-config-name: "AppSRE"
        git-config-email: "sd-app-sre@redhat.com"
        included-regions:
        - '{include_path}'
        prune: true
        clean:
            before: true
        wipe-workspace: true
    <<: *gh_pr_check

- job-template:
    id: 'insights-gh-build-master'
    name: '{gh_org}-{gh_repo}-gh-build-{branch}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
    <<: *gh_build_master


- job-template:
    id: 'insights-deploy-ephemeral'
    name: '{name}-ephemeral'
    node: '{node}'
    ci_cmd: ./ephemeral.sh
    gh_org: '{gh_org}'
    gh_repo: '{gh_repo}'
    app_name: '{app_name}'
    component_name: '{component_name}'
    image: '{image}'
    git_commit: '{git_commit}'
    image_tag: '{image_tag}'
    components: '{components}'
    components_w_resources: '{components_w_resources}'
    deploy_timeout: '{deploy_timeout}'
    additional_arg: '{additional_arg}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
    <<: *gh_checkout
    parameters:
    - string:
        name: APP_NAME
        default: '{app_name}'
        description: "(REQUIRED) name of app-sre 'application' folder this component lives in"
    - string:
        name: COMPONENT_NAME
        default: '{component_name}'
        description: "(REQUIRED) name of app-sre 'resourceTemplate' in deploy.yaml for this component"
    - string:
        name: IMAGE
        default: '{app_name}'
        description: "(REQUIRED) image location on quay"
    - string:
        name: GIT_COMMIT_INPUT
        default: '{git_commit}'
        description: "(REQUIRED) full git commit hash of the version being tested"
    - string:
        name: IMAGE_TAG_INPUT
        default: '{image_tag}'
        description: "(optional, default matches short GIT_COMMIT_INPUT) image tag for the version being tested"
    - string:
        name: COMPONENTS
        default: '{components}'
        description: "(optional, default: all) space separated components to deploy"
    - string:
        name: COMPONENTS_W_RESOURCES
        default: '{components_w_resources}'
        description: "(optional, default: none) space separated components which should preserve resource settings"
    - string:
        name: DEPLOY_TIMEOUT
        default: '{deploy_timeout}'
        description: "(optional, default: 300) bonfire deployment timeout parameter in seconds"
    - string:
        name: ADDITIONAL_ARG
        default: '{additional_arg}'
        description: "(optional, default: none) additional arguments passed to the bonfire deployment"
    - choice:
        name: RESERVATION_DURATION
        choices:
          - "1"
          - "2"
        description: "Number of hours for which the ephemeral namespace is reserved"
    builders:
    - shell:
        command: "{ci_cmd}"
