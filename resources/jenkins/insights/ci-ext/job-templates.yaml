- base_templates:
    name: insights-ci-ext-base-templates

    gpg_verify: &gpg_verify
        shell: |
            # Load GPG keys from app-interface
            python3 -m venv .
            source bin/activate
            pip3 install graphqlclient
            curl -LO https://raw.githubusercontent.com/RedHatInsights/gpg-verify/master/import_gpg.py
            python3 import_gpg.py

            echo '#!/bin/sh
            exec gpg --no-default-keyring --keyring=$PWD/git.gpg "$@"' > gitgpg
            chmod +x gitgpg
            git config gpg.program $PWD/gitgpg
            git verify-commit $ghprbActualCommit

            if [ $? != 0 ]; then
                echo "GPG signature either not present or not trusted"
                exit 1
            fi


- job-template:
    id: 'insights-operator-gh-pr-check'
    name: '{gh_org}-{gh_repo}-pr-check'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
        - *insights_minikube_ssh_key
        - *insightsdroid_github
        - *ibutsu
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    <<: *gh_pr_check
    builders:
    - *gpg_verify
    - *pr_check
    - *stack_analysis

- job-template:
    id: 'insights-minikube-gh-pr-check'
    name: '{gh_org}-{gh_repo}-pr-check'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
        - *insights_minikube_ssh_key
        - *insightsdroid_github
        - *ibutsu
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    <<: *gh_pr_check
    builders:
    - *pr_check
    - *stack_analysis


- job-template:
    id: 'insights-gh-pr-check'
    job_type: ''
    name: '{gh_org}-{gh_repo}-pr-check{job_type}'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
        - *insightsdroid_github
        - *ibutsu
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    <<: *insights_gh_pr_check

- job-template:
    id: 'hms-gh-pr-check'
    job_type: ''
    name: '{gh_org}-{gh_repo}-pr-check{job_type}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
        - *insightsdroid_github
        - *ibutsu
    <<: *hms_gh_pr_check

- job-template:
    id: 'insights-gh-smoke-test'
    name: '{gh_org}-{gh_repo}-smoke-test-{branch}'
    wrappers:
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *insightsdroid_github
        - *quay_api_token
        - *quay_secret_push
    builders:
    - shell: './smoke_test.sh'
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: true
        notify-failure: true
        notify-repeated-failure: true
    <<: *gh_timed

- job-template:
    id: 'insights-gh-build-master'
    name: '{gh_org}-{gh_repo}-gh-build-{branch}'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
    publishers:
    - slack: 
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    - naginator:
        max-failed-builds: 3
    <<: *gh_build_master

- job-template:
    id: 'insights-gh-build-master-stable'
    name: '{gh_org}-{gh_repo}-gh-build-{branch}'
    slack_channel_notification: 'consoledot-development-fails'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
    publishers:
    - slack: 
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
    - naginator:
        max-failed-builds: 3
    <<: *gh_build_master


- job-template:
    id: 'insights-deploy-ephemeral'
    description: 'To 1) reserve and deploy an Insight app to ephemeral cluster 2) release namespaces the user has reserved. For additional documentation and usage instructions please see: https://docs.google.com/document/d/1f6D1ZwE40QuyoqsfuXpqPlCqOVwssGNEwr-iGDOYvVY/'
    name: '{name}-ephemeral'
    node: '{node}'
    ci_cmd: ./ephemeral.sh
    gh_org: '{gh_org}'
    gh_repo: '{gh_repo}'
    app_name: ""
    ui_ref: ""
    component_name: ""
    image: ""
    git_commit: ""
    image_tag: ""
    components: ""
    components_w_resources: ""
    deploy_timeout: ""
    additional_arg: ""
    post_deployment_script: ""
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *insightsdroid_github
    <<: *gh_checkout
    parameters:
    - bool:
        name: RELEASE_NAMESPACE
        default: false
        description: "(optional) Release a previously reserved namespace. Selecting this will not deploy anything"
    - string:
        name: NAMESPACE
        default: ""
        description: "(REQUIRED only if RELEASE_NAMESPACE=true) Namespace number to release. E.g. if the namepace is ephemeral-01, please enter: 01. Enter 'all' to release all of current user's"
    - string:
        name: APP_NAME
        default: '{app_name}'
        description: "(REQUIRED) name of app-sre 'application' folder this component lives in"
    - choice:
        name: INCLUDE_UI
        choices:
          - "none"
          - "aggregator"
          - "operator"
        description: "What ui to deploy if required"
    - string:
        name: UI_REF
        default: '{ui_ref}'
        description: "(optional, default: prod-beta) git ref of the component's UI deployment repo to deploy front-end assets from. Only used if INCLUDE_UI is also true."
    - string:
        name: COMPONENT_NAME
        default: '{component_name}'
        description: "(REQUIRED) name of app-sre 'resourceTemplate' in deploy.yaml for this component"
    - string:
        name: IMAGE
        default: '{image}'
        description: "(REQUIRED) image location on quay"
    - string:
        name: GIT_COMMIT_INPUT
        default: '{git_commit}'
        description: "(REQUIRED) full git commit hash of the version being tested"
    - string:
        name: IMAGE_TAG_INPUT
        default: '{image_tag}'
        description: "(optional, default matches short GIT_COMMIT_INPUT) image tag for the version being tested"
    - string:
        name: COMPONENTS
        default: '{components}'
        description: "(optional, default: all) space separated components to deploy"
    - string:
        name: COMPONENTS_W_RESOURCES
        default: '{components_w_resources}'
        description: "(optional, default: none) space separated components which should preserve resource settings"
    - string:
        name: DEPLOY_TIMEOUT
        default: '{deploy_timeout}'
        description: "(optional, default: 300) bonfire deployment timeout parameter in seconds"
    - string:
        name: ADDITIONAL_ARG
        default: '{additional_arg}'
        description: "(optional, default: none) additional arguments passed to the bonfire deployment"
    - string:
        name: POST_DEPLOYMENT_SCRIPT
        default: '{post_deployment_script}'
        description: "(optional, default: none) a post deployment script to run from the cicd-common/app_scripts directory."
    - choice:
        name: RESERVATION_DURATION
        choices:
          - "1"
          - "2"
          - "4"
          - "12"
          - "24"
          - "72"
        description: "Number of hours for which the ephemeral namespace is reserved"
    builders:
    - shell:
        command: "{ci_cmd}"

- job-template:
    id: 'insights-gh-pipeline'
    name: '{gh_org}-{gh_repo}-pipeline'
    slack_channel_notification: 'consoledot-development-fails'
    project-type: pipeline
    parameters:
    - string:
        name: VAULT_ADDRESS
        default: 'https://vault.ci.ext.devshift.net'
    - string:
        name: VAULT_CREDS_ID
        default: 'vault-creds-ci-ext'
    - string:
        name:   VAULT_PATH_SVC_ACCOUNT_EPHEMERAL
        default: 'insights-cicd/ephemeral-bot-svc-account'
    - string:
        name:   VAULT_PATH_QUAY_PUSH
        default: 'app-sre/quay/cloudservices-push'
    - string:
        name: VAULT_PATH_RHR_PULL
        default: 'insights-cicd/rh-registry-pull'
    pipeline-scm:
      # make parameter to override template name
      script-path: 'Jenkinsfile'
      scm:
      - git:
          url: 'git@github.com:{gh_org}/{gh_repo}.git'
          credentials-id: '{github_ssh_credentials}'
          skip-tag: true
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          branches:
          - '${{ghprbActualCommit}}'
          merge:
              remote: origin
              branch: '{branch}'
          git-config-name: "AppSRE"
          git-config-email: "sd-app-sre@redhat.com"
          included-regions:
          - '{include_path}'
          prune: true
          clean:
              before: true
          wipe-workspace: true
    triggers:
        - github-pull-request:
            <<: *insights_default_ghprb_triggers_cfg
            <<: *insights_default_admin_list_cfg
    disabled: '{disable}'
    node: '{node}'
    concurrent: '{concurrent_build}'
    run_stack_analysis_path: ''
    max_previous_builds_count: 20
    <<: *gh_properties
    builders:
    - *stack_analysis
    wrappers:
    - timestamps
    - timeout_wrapper:
        timeout: '{timeout}'
    - ansicolor
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *insights_crcd_oc_login
        - *insights_ephemeral_oc_login
        - *app_interface_creds
        - *insights_rh_registry_pull_secret
        - *quay_secret_push
        - *quay_api_token
        - *insightsdroid_github
        - *ibutsu
    publishers:
    - junit:
        results: 'artifacts/junit-*.xml'
    - archive:
        artifacts: 'artifacts/**/*'
    - slack:
        room: '{slack_channel_notification}'
        notify-start: false
        notify-success: false
        notify-failure: true
        notify-repeated-failure: true
