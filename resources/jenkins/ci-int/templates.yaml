# Deploys all the services defined in the saas repo
#
# vars required in the job definition:
# - gl_group: GitLab group
# - gl_project: GitLab repo
# - kube_cluster: cluster name
# - kube_namespace: Namespace to deploy to
# - image_pattern: Regex of the image path to check against
# - quay_org: name of the quay organisation
#
# Required secrets:
# The secret 'app-sre/creds/kube-configs/{kube_cluster}' must exist.
# The secret 'app-sre/quay/{quay_org}-pull' must exist, with `user`, `token` and `config.json` keys.
- job-template:
    id: 'saas-deploy'
    name: '{gl_group}-{gl_project}-{saasherder_context}-saas-deploy'
    dry_run: "no"
    repo_url: 'https://gitlab.cee.redhat.com/{gl_group}/{gl_project}'
    <<: *gl_build_master
    <<: *saas_deploy
    <<: *saas_notify

# PR check for saas repos
#
# vars required in the job definition:
# - gl_group: GitLab group
# - gl_project: GitLab repo
# - kube_cluster: cluster name
# - kube_namespace: Namespace to deploy to
# - image_pattern: Regex of the image path to check against
#
# Required secrets:
# The secret 'app-sre/creds/kube-configs/{kube_cluster}' must exist.
# The secret 'app-sre/quay/{quay_org}-pull' must exist, with `user`, `token` and `config.json` keys.
- job-template:
    id: 'saas-pr-check'
    name: '{gl_group}-{gl_project}-{saasherder_context}-saas-pr-check'
    dry_run: "yes"
    repo_url: 'https://gitlab.cee.redhat.com/{gl_group}/{gl_project}'
    <<: *gl_pr_check
    <<: *saas_deploy
