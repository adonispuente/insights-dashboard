# Deploys all the services defined in the saas repo
#
# vars required in the job definition:
# - gl_group: GitLab group
# - gl_project: GitLab repo
# - kube_cluster: cluster name
# - kube_namespace: Namespace to deploy to
# - image_pattern: Regex of the image path to check against
# - quay_org: name of the quay organisation
#
# Required secrets:
# The secret 'app-sre/creds/kube-configs/{kube_cluster}' must exist.
# The secret 'app-sre/quay/{quay_org}-pull' must exist, with `user`, `token` and `config.json` keys.
- job-template:
    id: 'saas-deploy'
    name: '{gl_group}-{gl_project}-{saasherder_context}-saas-deploy'
    dry_run: "no"
    repo_url: 'https://gitlab.cee.redhat.com/{gl_group}/{gl_project}'
    include_path: '{saasherder_context}-services/.*'
    <<: *gl_build_master
    <<: *saas_deploy
    <<: *saas_notify

# PR check for saas repos
#
# vars required in the job definition:
# - gl_group: GitLab group
# - gl_project: GitLab repo
# - kube_cluster: cluster name
# - kube_namespace: Namespace to deploy to
# - image_pattern: Regex of the image path to check against
#
# Required secrets:
# The secret 'app-sre/creds/kube-configs/{kube_cluster}' must exist.
# The secret 'app-sre/quay/{quay_org}-pull' must exist, with `user`, `token` and `config.json` keys.
- job-template:
    id: 'saas-pr-check'
    name: '{gl_group}-{gl_project}-{saasherder_context}-saas-pr-check'
    dry_run: "yes"
    repo_url: 'https://gitlab.cee.redhat.com/{gl_group}/{gl_project}'
    include_path: '{saasherder_context}-services/.*'
    <<: *gl_pr_check
    <<: *saas_deploy

# Job template for the openshift-saas-deploy + JJB integrations
# This template should not be directly used.
- job-template:
    id: 'openshift-uber-deployer-template'
    saas_file_name: empty
    env_name: empty
    app_name: empty
    name: 'openshift-uber-deployer-{saas_file_name}-{env_name}'
    node: app-interface
    label: '{app_name}'
    wrappers:
    - timeout_wrapper:
        timeout: '{timeout}'
    - vault-secrets:
        <<: *vault_defaults
        secrets:
        - *reconcile_toml
        - *github_api
        - *app_interface_state
    builders:
    - shell: |
        #!/bin/bash

        echo {app_name} {saas_file_name} {env_name}

        # Write config.toml for reconcile tools
        mkdir -p config
        echo "$CONFIG_TOML" | base64 -d > config/config.toml

        docker run --rm \
            -v `pwd`/config:/config:z \
            -v /etc/pki:/etc/pki:z \
            -e REQUESTS_CA_BUNDLE=/etc/pki/tls/cert.pem \
            -e GITHUB_API=$GITHUB_API \
            -e APP_INTERFACE_STATE_BUCKET=$app_interface_state_bucket \
            -e APP_INTERFACE_STATE_BUCKET_ACCOUNT=$app_interface_state_bucket_account \
            quay.io/app-sre/qontract-reconcile:latest \
            qontract-reconcile --config /config/config.toml --dry-run openshift-saas-deploy --saas-file-name {saas_file_name} --env-name {env_name}
