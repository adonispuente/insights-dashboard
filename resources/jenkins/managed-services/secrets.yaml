- mk_security_scan_token: &mk_security_scan_token
    name: "mk-security-scan-token"
    secret-path: "managed-services-ci/mk-ci-cd/creds/security-scan"
    secret-values:
      - env-var: "SRCCLR_API_TOKEN"
        vault-key: "srcclr_api_token"
- ci_ocm_token: &ci_ocm_token
    name: "ci-ocm-token"
    secret-path: "managed-services-ci/ocm/ci-user"
    secret-values:
      - env-var: "OCM_TOKEN"
        vault-key: "api_token"
- ci_aws_keys: &ci_aws_keys
    name: "ci_aws_keys"
    secret-path: "managed-services-ci/aws/ci/osdCcsAdmin"
    secret-values:
      - env-var: "AWS_ACCOUNT_ID"
        vault-key: "account_id"
      - env-var: "AWS_ACCESS_KEY_ID"
        vault-key: "access_key_id"
      - env-var: "AWS_SECRET_ACCESS_KEY"
        vault-key: "access_key_secret"
- managed_services_test_cluster: &managed_services_test_cluster
    name: "mk-ci-cd"
    secret-path: "managed-services-ci/mk-ci-cd/creds/test-cluster"
    secret-values:
      - env-var: CLUSTER_SERVER
        vault-key: cluster_server
      - env-var: CLUSTER_TOKEN
        vault-key: cluster_token
- managed_services_github_deploy_key: &managed_services_github_deploy_key
    name: "managed-services-github-deploy-key"
    secret-path: "managed-services-ci/mk-ci-cd/creds/github"
    secret-values:
      - env-var: NACHOBOT_TOKEN
        vault-key: nacho-bot-token
      - env-var: BF2_BOT_TOKEN
        vault-key: bf2-bot-token
- ci_aws_keys: &ci_observatorium
    name: "ci_observatorium"
    secret-path: "managed-services-ci/observatorium"
    secret-values:
      - env-var: "OBSERVATORIUM_ROUTE"
        vault-key: "apps_route"
      - env-var: "THANOS_URL"
        vault-key: "thanos_url"
      - env-var: "THANOS_TOKEN"
        vault-key: "thanos_token"
- ci_jenkins_token: &ci_jenkins_token
    name: "mk-cpaas-jenkins-token"
    secret-path: "managed-services-ci/mk-ci-cd/creds/cpaas_jenkins"
    secret-values:
      - env-var: "CPAAS_JENKINS_APIKEY"
        vault-key: "apiKey"
      - env-var: "CPAAS_JENKINS_USERNAME"
        vault-key: "userName"
- kas_fleetshard: &kas_fleetshard
    name: "kas_fleetshard"
    secret-path: "managed-services-ci/kas-fleetshard"
    secret-values:
      - env-var: "ENDPOINT_TLS_CERT"
        vault-key: "ENDPOINT_TLS_CERT"
      - env-var: "ENDPOINT_TLS_KEY"
        vault-key: "ENDPOINT_TLS_KEY"
      - env-var: "OAUTH_CLIENT_ID"
        vault-key: "OAUTH_CLIENT_ID"
      - env-var: "OAUTH_CLIENT_SECRET"
        vault-key: "OAUTH_CLIENT_SECRET"
      - env-var: "OAUTH_ISSUER_ENDPOINT"
        vault-key: "OAUTH_ISSUER_ENDPOINT"
      - env-var: "OAUTH_JWKS_ENDPOINT"
        vault-key: "OAUTH_JWKS_ENDPOINT"
      - env-var: "OAUTH_TLS_CERT"
        vault-key: "OAUTH_TLS_CERT"
      - env-var: "OAUTH_TOKEN_ENDPOINT"
        vault-key: "OAUTH_TOKEN_ENDPOINT"
      - env-var: "OAUTH_USER_CLAIM"
        vault-key: "OAUTH_USER_CLAIM"
      - env-var: "MK_CONFIG"
        vault-key: "MK_CONFIG"
- ci_cd_quay: &ci_cd_quay
    name: "ci_cd_quay"
    secret-path: "managed-services-ci/mk-ci-cd/creds/quay"
    secret-values:
      - env-var: "MK_CI_CD_QUAY_USER"
        vault-key: "MK_CI_CD_QUAY_USER"
      - env-var: "MK_CI_CD_QUAY_TOKEN"
        vault-key: "MK_CI_CD_QUAY_TOKEN"

- kas_fleet_manager_int_tests: &kas_fleet_manager_int_tests
    name: "kas_fleet_manager_int_tests"
    secret-path: "managed-services-ci/managed-service-api/integration-tests"
    secret-values:
      - env-var: AWS_ACCESS_KEY
        vault-key: AWS_ACCESS_KEY
      - env-var: AWS_ACCOUNT_ID
        vault-key: AWS_ACCOUNT_ID
      - env-var: AWS_SECRET_ACCESS_KEY
        vault-key: AWS_SECRET_ACCESS_KEY
      - env-var: OCM_OFFLINE_TOKEN
        vault-key: OCM_OFFLINE_TOKEN
      - env-var: OCM_ENV
        vault-key: OCM_ENV
      - env-var: OBSERVATORIUM_CONFIG_ACCESS_TOKEN
        vault-key: OBSERVATORIUM_CONFIG_ACCESS_TOKEN
- managed_services_cluster_extension: &managed_services_cluster_extension
    name: "managed_services_cluster_extension"
    secret-path: "managed-services-ci/managed-service-api/ocm-cluster"
    secret-values:
      - env-var: OCM_CLIENT_ID
        vault-key: "ocm-service.clientId"
      - env-var: OCM_CLIENT_SECRET
        vault-key: "ocm-service.clientSecret"
      - env-var: OSD_STAGE_CLUSTER_ID
        vault-key: "kafka-stage-cluster-id"

- managed_services_sso_cluster_extension: &managed_services_sso_cluster_extension
    name: "managed_services_sso_cluster_extension"
    secret-path: "managed-services-ci/ocm/sso-cluster"
    secret-values:
      - env-var: OCM_TOKEN
        vault-key: "ocm-service.clientToken"
      - env-var: OSD_STAGE_CLUSTER_ID
        vault-key: "sso-stage-cluster-id"

- mk_e2e_test_suite_staging: &mk_e2e_test_suite_staging
    name: "mk_e2e_test_suite_staging"
    secret-path: "managed-services-ci/mk-e2e-test-suite/staging"
    secret-values:
      - env-var: SSO_USERNAME
        vault-key: sso.main.username
      - env-var: SSO_PASSWORD
        vault-key: sso.main.password
      - env-var: SSO_SECONDARY_USERNAME
        vault-key: sso.secondary.username
      - env-var: SSO_SECONDARY_PASSWORD
        vault-key: sso.secondary.password
      - env-var: SSO_ALIEN_USERNAME
        vault-key: sso.alien.username
      - env-var: SSO_ALIEN_PASSWORD
        vault-key: sso.alien.password
      - env-var: SSO_UNAUTHORIZED_USERNAME
        vault-key: sso.unauthorized.username
      - env-var: SSO_UNAUTHORIZED_PASSWORD
        vault-key: sso.unauthorized.password
      - env-var: DEV_CLUSTER_SERVER
        vault-key: dev-cluster.server
      - env-var: DEV_CLUSTER_NAMESPACE
        vault-key: dev-cluster.namespace
      - env-var: DEV_CLUSTER_TOKEN
        vault-key: dev-cluster.token
      - env-var: BF2_GITHUB_TOKEN
        vault-key: bf2.github.token
      - env-var: REPORTPORTAL_ENDPOINT
        vault-key: reportportal.endpoint
      - env-var: REPORTPORTAL_UUID
        vault-key: reportportal.uuid

- rhoas-quay-access: &rhoas-quay-access
    name: "rhoas-quay-access"
    secret-path: "managed-services-ci/mk-ci-cd/creds/quay-rhoas/robots/rhoas-push"
    secret-values:
      - env-var: RHOAS_QUAY_USER
        vault-key: user
      - env-var: RHOAS_QUAY_TOKEN
        vault-key: token
