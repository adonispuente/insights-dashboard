- mk_security_scan_token: &mk_security_scan_token
    name: "mk-security-scan-token"
    secret-path: "managed-services-ci/mk-ci-cd/creds/security-scan"
    secret-values:
      - env-var: "SRCCLR_API_TOKEN"
        vault-key: "srcclr_api_token"
- ci_ocm_token: &ci_ocm_token
    name: "ci-ocm-token"
    secret-path: "managed-services-ci/ocm/ci-user"
    secret-values:
      - env-var: "OCM_TOKEN"
        vault-key: "api_token"
- ci_test_token: &ci_test_token
    name: "ci-test-token"
    secret-path: "managed-services-ci/ocm/test-user"
    secret-values:
      - env-var: "OCM_TOKEN"
        vault-key: "api_token"
- ci_aws_keys: &ci_aws_keys
    name: "ci_aws_keys"
    secret-path: "managed-services-ci/MK-RTS-CI/aws/ci/aws_mk_running_the_service"
    secret-values:
      - env-var: "AWS_ACCOUNT_ID"
        vault-key: "account_id"
      - env-var: "AWS_ACCESS_KEY_ID"
        vault-key: "access_key_id"
      - env-var: "AWS_SECRET_ACCESS_KEY"
        vault-key: "secret_access_key"
- managed_services_test_cluster: &managed_services_test_cluster
    name: "mk-ci-cd"
    secret-path: "managed-services-ci/mk-ci-cd/creds/test-cluster"
    secret-values:
      - env-var: CLUSTER_SERVER
        vault-key: cluster_server
      - env-var: CLUSTER_TOKEN
        vault-key: cluster_token
- managed_services_github_deploy_key: &managed_services_github_deploy_key
    name: "managed-services-github-deploy-key"
    secret-path: "managed-services-ci/mk-ci-cd/creds/github"
    secret-values:
      - env-var: NACHOBOT_TOKEN
        vault-key: nacho-bot-token
      - env-var: BF2_BOT_TOKEN
        vault-key: bf2-bot-token
- ci_jenkins_token: &ci_jenkins_token
    name: "mk-cpaas-jenkins-token"
    secret-path: "managed-services-ci/mk-ci-cd/creds/cpaas_jenkins"
    secret-values:
      - env-var: "CPAAS_JENKINS_APIKEY"
        vault-key: "apiKey"
      - env-var: "CPAAS_JENKINS_USERNAME"
        vault-key: "userName"
- cpaas_rhosak_token: &cpaas_rhosak_token
    name: "mk-cpaas-rhosak-token"
    secret-path: "managed-services-ci/mk-ci-cd/creds/cpaas-rhosak"
    secret-values:
      - env-var: "CPAAS_RHOSAK_APIKEY"
        vault-key: "apiKey"
      - env-var: "CPAAS_RHOSAK_USERNAME"
        vault-key: "userName"
- kas_fleetshard: &kas_fleetshard
    name: "kas_fleetshard"
    secret-path: "managed-services-ci/kas-fleetshard"
    secret-values:
      - env-var: "ENDPOINT_TLS_CERT"
        vault-key: "ENDPOINT_TLS_CERT"
      - env-var: "ENDPOINT_TLS_KEY"
        vault-key: "ENDPOINT_TLS_KEY"
      - env-var: "OAUTH_CLIENT_ID"
        vault-key: "OAUTH_CLIENT_ID"
      - env-var: "OAUTH_CLIENT_SECRET"
        vault-key: "OAUTH_CLIENT_SECRET"
      - env-var: "OAUTH_ISSUER_ENDPOINT"
        vault-key: "OAUTH_ISSUER_ENDPOINT"
      - env-var: "OAUTH_JWKS_ENDPOINT"
        vault-key: "OAUTH_JWKS_ENDPOINT"
      - env-var: "OAUTH_TLS_CERT"
        vault-key: "OAUTH_TLS_CERT"
      - env-var: "OAUTH_TOKEN_ENDPOINT"
        vault-key: "OAUTH_TOKEN_ENDPOINT"
      - env-var: "OAUTH_USER_CLAIM"
        vault-key: "OAUTH_USER_CLAIM"
      - env-var: "MK_CONFIG"
        vault-key: "MK_CONFIG"
- ci_cd_quay: &ci_cd_quay
    name: "ci_cd_quay"
    secret-path: "managed-services-ci/mk-ci-cd/creds/quay"
    secret-values:
      - env-var: "MK_CI_CD_QUAY_USER"
        vault-key: "MK_CI_CD_QUAY_USER"
      - env-var: "MK_CI_CD_QUAY_TOKEN"
        vault-key: "MK_CI_CD_QUAY_TOKEN"

- kas_fleet_manager_int_tests: &kas_fleet_manager_int_tests
    name: "kas_fleet_manager_int_tests"
    secret-path: "managed-services-ci/MK-Control-Plane-CI/integration-tests"
    secret-values:
      - env-var: AWS_ACCESS_KEY
        vault-key: AWS_ACCESS_KEY
      - env-var: AWS_ACCOUNT_ID
        vault-key: AWS_ACCOUNT_ID
      - env-var: AWS_SECRET_ACCESS_KEY
        vault-key: AWS_SECRET_ACCESS_KEY
      - env-var: OCM_OFFLINE_TOKEN
        vault-key: OCM_OFFLINE_TOKEN
      - env-var: OCM_ENV
        vault-key: OCM_ENV
      - env-var: OBSERVATORIUM_CONFIG_ACCESS_TOKEN
        vault-key: OBSERVATORIUM_CONFIG_ACCESS_TOKEN
      - env-var: MAS_SSO_CLIENT_ID
        vault-key: MAS_SSO_CLIENT_ID
      - env-var: MAS_SSO_CLIENT_SECRET
        vault-key: MAS_SSO_CLIENT_SECRET
      - env-var: OSD_IDP_MAS_SSO_CLIENT_ID
        vault-key: OSD_IDP_MAS_SSO_CLIENT_ID
      - env-var: OSD_IDP_MAS_SSO_CLIENT_SECRET
        vault-key: OSD_IDP_MAS_SSO_CLIENT_SECRET
      - env-var: REPORTPORTAL_PROJECT
        vault-key: REPORTPORTAL_PROJECT

- kas_fleet_manager_perf_test_stage: &kas_fleet_manager_perf_test_stage
    name: "kas_fleet_manager_perf_test_stage"
    secret-path: "managed-services-ci/MK-Control-Plane-CI/perf-tests-stage"
    secret-values:
      - env-var: OCM_OFFLINE_TOKEN
        vault-key: OCM_OFFLINE_TOKEN
      - env-var: PERF_TEST_ROUTE_HOST
        vault-key: PERF_TEST_ROUTE_HOST
      - env-var: PERF_TEST_SINGLE_WORKER_KAFKA_CREATE
        vault-key: PERF_TEST_SINGLE_WORKER_KAFKA_CREATE
      - env-var: PERF_TEST_CLEANUP
        vault-key: PERF_TEST_CLEANUP
      - env-var: PERF_TEST_HIT_ENDPOINTS_HOLD_OFF
        vault-key: PERF_TEST_HIT_ENDPOINTS_HOLD_OFF
      - env-var: PERF_TEST_KAFKA_POST_WAIT_TIME
        vault-key: PERF_TEST_KAFKA_POST_WAIT_TIME
      - env-var: PERF_TEST_GET_ONLY
        vault-key: PERF_TEST_GET_ONLY
      - env-var: PERF_TEST_KAFKAS_PER_WORKER
        vault-key: PERF_TEST_KAFKAS_PER_WORKER
      - env-var: PERF_TEST_PREPOPULATE_DB_KAFKA_PER_WORKER
        vault-key: PERF_TEST_PREPOPULATE_DB_KAFKA_PER_WORKER
      - env-var: PERF_TEST_PREPOPULATE_DB
        vault-key: PERF_TEST_PREPOPULATE_DB
      - env-var: PERF_TEST_WORKERS_NUMBER
        vault-key: PERF_TEST_WORKERS_NUMBER
      - env-var: PERF_TEST_RUN_TIME
        vault-key: PERF_TEST_RUN_TIME
      - env-var: PERF_TEST_BASE_API_URL
        vault-key: PERF_TEST_BASE_API_URL
      - env-var: PERF_TEST_USER_SPAWN_RATE
        vault-key: PERF_TEST_USER_SPAWN_RATE
      - env-var: PERF_TEST_USERS
        vault-key: PERF_TEST_USERS
      - env-var: HORREUM_URL
        vault-key: HORREUM_URL
      - env-var: TEST_NAME
        vault-key: TEST_NAME
      - env-var: OWNER
        vault-key: OWNER
      - env-var: ACCESS
        vault-key: ACCESS
      - env-var: KEYCLOAK_URL
        vault-key: KEYCLOAK_URL
      - env-var: HORREUM_USER
        vault-key: HORREUM_USER
      - env-var: HORREUM_PASSWORD
        vault-key: HORREUM_PASSWORD
      - env-var: RESULTS_FILENAME
        vault-key: RESULTS_FILENAME
      - env-var: QUAY_USER
        vault-key: QUAY_USER
      - env-var: QUAY_TOKEN
        vault-key: QUAY_TOKEN

- kas_fleet_manager_pr_check: &kas_fleet_manager_pr_check
    name: "kas_fleet_manager_pr_check"
    secret-path: "managed-services-ci/MK-Control-Plane-CI/integration-tests"
    secret-values:
      - env-var: MAS_SSO_CLIENT_ID
        vault-key: MAS_SSO_CLIENT_ID
      - env-var: MAS_SSO_CLIENT_SECRET
        vault-key: MAS_SSO_CLIENT_SECRET
      - env-var: OSD_IDP_MAS_SSO_CLIENT_ID
        vault-key: OSD_IDP_MAS_SSO_CLIENT_ID
      - env-var: OSD_IDP_MAS_SSO_CLIENT_SECRET
        vault-key: OSD_IDP_MAS_SSO_CLIENT_SECRET

- notification_payloads_pr_check: &notification_payloads_pr_check
    name: "notification_payloads_pr_check"
    secret-path: "managed-services-ci/MK-Control-Plane-CI/notification-workflow/stage"
    secret-values:
      - env-var: NOTIFICATION_CERT_STAGE
        vault-key: notification-certificate.crt
      - env-var: NOTIFICATION_KEY_STAGE
        vault-key: notification-certificate.key

- notification_payloads_main_build: &notification_payloads_main_build
    name: "notification_payloads_main_build"
    secret-path: "managed-services-ci/MK-Control-Plane-CI/notification-workflow/production"
    secret-values:
      - env-var: NOTIFICATION_CERT_PROD
        vault-key: notification-certificate.crt
      - env-var: NOTIFICATION_KEY_PROD
        vault-key: notification-certificate.key

- managed_services_reportportal: &managed_services_reportportal
    name: "ci_reportportal"
    secret-path: "managed-services-ci/MAS-CI/ReportPortal/Chiron"
    secret-values:
      - env-var: REPORTPORTAL_ENDPOINT
        vault-key: REPORTPORTAL_ENDPOINT
      - env-var: REPORTPORTAL_UUID
        vault-key: REPORTPORTAL_ACCESS_TOKEN

- managed_services_ccit_reportportal: &managed_services_ccit_reportportal
    name: "managed_services_ccit_reportportal"
    secret-path: "managed-services-ci/MAS-CI/ReportPortal/CCIT"
    secret-values:
      - env-var: REPORTPORTAL_ENDPOINT
        vault-key: REPORTPORTAL_ENDPOINT
      - env-var: REPORTPORTAL_ACCESS_TOKEN
        vault-key: REPORTPORTAL_ACCESS_TOKEN

- rhoas-quay-access: &rhoas-quay-access
    name: "rhoas-quay-access"
    secret-path: "managed-services-ci/mk-ci-cd/creds/quay-rhoas/robots/rhoas-push"
    secret-values:
      - env-var: RHOAS_QUAY_USER
        vault-key: user
      - env-var: RHOAS_QUAY_TOKEN
        vault-key: token

- kas_fleet_manager_admin_staging: &kas_fleet_manager_admin_staging
    name: "kas_fleet_manager_admin_staging"
    secret-path: "managed-services-ci/MK-Control-Plane-CI/mas-sso-accounts/staging"
    secret-values:
      - env-var: STAGE_CLIENT_ID
        vault-key: admin-write-account-name
      - env-var: STAGE_CLIENT_SECRET
        vault-key: admin-write-account-password

- kas_fleet_manager_admin_prod: &kas_fleet_manager_admin_prod
    name: "kas_fleet_manager_admin_prod"
    secret-path: "managed-services-ci/MK-Control-Plane-CI/mas-sso-accounts/production"
    secret-values:
      - env-var: CLIENT_ID
        vault-key: admin-write-account-name
      - env-var: CLIENT_SECRET
        vault-key: admin-write-account-password

- kafka_storage_expansions: &kafka_storage_expansions
    name: "kafka_storage_expansions"
    secret-path: "managed-services-ci/MK-Control-Plane-CI/kafka-storage-expansions"
    secret-values:
      - env-var: ENV
        vault-key: ENV

- ci_kas_abnormal_workloads: &ci_kas_abnormal_workloads
    name: "ci_kas_abnormal_workloads"
    secret-path: "managed-services-ci/kas-abnormal-workloads/{env}"
    secret-values:
      - env-var: CLIENT_ID
        vault-key: client_id
      - env-var: CLIENT_SECRET
        vault-key: client_secret
      - env-var: TOKEN_ENDPOINT
        vault-key: token_endpoint
      - env-var: OCM_URL
        vault-key: ocm_url

- saas_mas_sso_perf_test_stage: &saas_mas_sso_perf_test_stage
    name: "saas_mas_sso_perf_test_stage"
    secret-path: "app-interface/mas-sso/mas-sso-perf-test-credentials/stage/credentials"
    secret-values:
      - env-var: "CLIENT_ID"
        vault-key: "clientId"
      - env-var: "CLIENT_SECRET"
        vault-key: "clientSecret"

- aws_rhosak_1: &aws_rhosak_1
    name: "aws_rhosak_1"
    secret-path: "managed-services-ci/MK-RTS-CI/RHOSAK-Tests/aws-rhosak-1"
    secret-values:
      - env-var: "AWS_ACCOUNT_ID"
        vault-key: "AWS_ACCOUNT_ID"
      - env-var: "AWS_ACCESS_KEY_ID"
        vault-key: "AWS_ACCESS_KEY_ID"
      - env-var: "AWS_SECRET_ACCESS_KEY"
        vault-key: "AWS_SECRET_ACCESS_KEY"
