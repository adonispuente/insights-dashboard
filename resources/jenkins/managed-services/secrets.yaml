- mk_security_scan_token: &mk_security_scan_token
    name: "mk-security-scan-token"
    secret-path: "managed-services-ci/RHOSAK/Dev/mk-ci-cd/creds/security-scan"
    secret-values:
      - env-var: "SRCCLR_API_TOKEN"
        vault-key: "srcclr_api_token"
- ci_ocm_token: &ci_ocm_token
    name: "ci-ocm-token"
    secret-path: "managed-services-ci/RHOSAK/Dev/ocm/ci-user"
    secret-values:
      - env-var: "OCM_TOKEN"
        vault-key: "api_token"
- ci_test_token: &ci_test_token
    name: "ci-test-token"
    secret-path: "managed-services-ci/RHOSAK/Dev/ocm/test-user"
    secret-values:
      - env-var: "OCM_TOKEN"
        vault-key: "api_token"
- ci_aws_keys: &ci_aws_keys
    name: "ci_aws_keys"
    secret-path: "managed-services-ci/MK-RTS-CI/aws/ci/aws_mk_running_the_service"
    secret-values:
      - env-var: "AWS_ACCOUNT_ID"
        vault-key: "account_id"
      - env-var: "AWS_ACCESS_KEY_ID"
        vault-key: "access_key_id"
      - env-var: "AWS_SECRET_ACCESS_KEY"
        vault-key: "secret_access_key"
- managed_services_test_cluster: &managed_services_test_cluster
    name: "mk-ci-cd"
    secret-path: "managed-services-ci/RHOSAK/Dev/mk-ci-cd/creds/test-cluster"
    secret-values:
      - env-var: CLUSTER_SERVER
        vault-key: cluster_server
      - env-var: CLUSTER_TOKEN
        vault-key: cluster_token
- managed_services_github_deploy_key: &managed_services_github_deploy_key
    name: "managed-services-github-deploy-key"
    secret-path: "managed-services-ci/RHOSAK/Dev/mk-ci-cd/creds/github"
    secret-values:
      - env-var: NACHOBOT_TOKEN
        vault-key: nacho-bot-token
      - env-var: BF2_BOT_TOKEN
        vault-key: bf2-bot-token
- ci_jenkins_token: &ci_jenkins_token
    name: "mk-cpaas-jenkins-token"
    secret-path: "managed-services-ci/RHOSAK/Dev/mk-ci-cd/creds/cpaas_jenkins"
    secret-values:
      - env-var: "CPAAS_JENKINS_APIKEY"
        vault-key: "apiKey"
      - env-var: "CPAAS_JENKINS_USERNAME"
        vault-key: "userName"
- cpaas_rhosak_token: &cpaas_rhosak_token
    name: "mk-cpaas-rhosak-token"
    secret-path: "managed-services-ci/RHOSAK/Dev/mk-ci-cd/creds/cpaas-rhosak"
    secret-values:
      - env-var: "CPAAS_RHOSAK_APIKEY"
        vault-key: "apiKey"
      - env-var: "CPAAS_RHOSAK_USERNAME"
        vault-key: "userName"
- ci_cd_quay: &ci_cd_quay
    name: "ci_cd_quay"
    secret-path: "managed-services-ci/RHOSAK/Dev/mk-ci-cd/creds/quay"
    secret-values:
      - env-var: "MK_CI_CD_QUAY_USER"
        vault-key: "MK_CI_CD_QUAY_USER"
      - env-var: "MK_CI_CD_QUAY_TOKEN"
        vault-key: "MK_CI_CD_QUAY_TOKEN"

- rhosak_bot: &rhosak_bot
    name: "rhosak_bot"
    secret-path: "managed-services-ci/RHOSAK/Dev/rhosak-ci/bot"
    secret-values:
      - env-var: AUTHOR_EMAIL
        vault-key: AUTHOR_EMAIL
      - env-var: AUTHOR_NAME
        vault-key: AUTHOR_NAME
      - env-var: GITLAB_TOKEN
        vault-key: gitlab-token

- managed_services_reportportal: &managed_services_reportportal
    name: "ci_reportportal"
    secret-path: "managed-services-ci/MAS-CI/ReportPortal/Chiron"
    secret-values:
      - env-var: REPORTPORTAL_ENDPOINT
        vault-key: REPORTPORTAL_ENDPOINT
      - env-var: REPORTPORTAL_UUID
        vault-key: REPORTPORTAL_ACCESS_TOKEN

- managed_services_ccit_reportportal: &managed_services_ccit_reportportal
    name: "managed_services_ccit_reportportal"
    secret-path: "managed-services-ci/MAS-CI/ReportPortal/CCIT"
    secret-values:
      - env-var: REPORTPORTAL_ENDPOINT
        vault-key: REPORTPORTAL_ENDPOINT
      - env-var: REPORTPORTAL_ACCESS_TOKEN
        vault-key: REPORTPORTAL_ACCESS_TOKEN

- rhoas-quay-access: &rhoas-quay-access
    name: "rhoas-quay-access"
    secret-path: "managed-services-ci/RHOSAK/Dev/mk-ci-cd/creds/quay-rhoas/robots/rhoas-push"
    secret-values:
      - env-var: RHOAS_QUAY_USER
        vault-key: user
      - env-var: RHOAS_QUAY_TOKEN
        vault-key: token

- ci_kas_abnormal_workloads: &ci_kas_abnormal_workloads
    name: "ci_kas_abnormal_workloads"
    secret-path: "managed-services-ci/kas-abnormal-workloads/{env}"
    secret-values:
      - env-var: CLIENT_ID
        vault-key: client_id
      - env-var: CLIENT_SECRET
        vault-key: client_secret
      - env-var: TOKEN_ENDPOINT
        vault-key: token_endpoint
      - env-var: OCM_URL
        vault-key: ocm_url

- aws_rhosak_1: &aws_rhosak_1
    name: "aws_rhosak_1"
    secret-path: "managed-services-ci/MK-RTS-CI/RHOSAK-Tests/aws-rhosak-1"
    secret-values:
      - env-var: "AWS_ACCOUNT_ID"
        vault-key: "AWS_ACCOUNT_ID"
      - env-var: "AWS_ACCESS_KEY_ID"
        vault-key: "AWS_ACCESS_KEY_ID"
      - env-var: "AWS_SECRET_ACCESS_KEY"
        vault-key: "AWS_SECRET_ACCESS_KEY"

- iptt_1: &iptt_1
    name: "iptt_1"
    secret-path: "managed-services-ci/IPTT/iptt-1"
    secret-values:
      - env-var: "AWS_ACCOUNT_ID"
        vault-key: "AWS_ACCOUNT_ID"
      - env-var: "AWS_ACCESS_KEY_ID"
        vault-key: "AWS_ACCESS_KEY_ID"
      - env-var: "AWS_SECRET_ACCESS_KEY"
        vault-key: "AWS_SECRET_ACCESS_KEY"
