---
$schema: /app-interface/prometheus-rule-test-1.yml

rule_files:
- /insights-prod/payload-tracker-prod/payload-tracker.prometheusrules.yml

evaluation_interval: 5m 

tests:

# PayloadTrackerDowntimeQuotaReached
- interval: 1m
  input_series:
  - series: up{service="payload-tracker", namespace="payload-tracker-prod"}
    values: 1+0x4 0+0x4 1+0x4
  alert_rule_test:
  - alertname: App-payload-tracker-In-payload-tracker-prod-Downtime-Quota-Reached
    eval_time: 5m
    exp_alerts:
    - exp_labels:
        severity: info
        service: insights
        env: prod
        app_team: data-pipeline
      exp_annotations:
        dashboard: "https://grafana.app-sre.devshift.net/d/eGSUe-SZk/payload-tracker"
        link_url: "https://console-openshift-console.apps.crcp01ue1.o9m8.p1.openshiftapps.com/k8s/ns/payload-tracker-prod/deployments"
        message: "Payload Tracker Service Alert. Payload Tracker pod has exceeded its 5% downtime quota for the past 24 hours."
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/tree/master/docs/console.redhat.com/app-sops/payload-tracker/App-payload-tracker-In-payload-tracker-prod-Downtime-Quota-Reached.rst"

# PayloadTracker5XXQuotaReached
- interval: 1m 
  input_series:
  - series: payload_tracker_api_response_count_total{status!~"5.*"}
    values: 0+0x4 5+5x4 50+0x4
  - series: payload_tracker_api_response_count_total
    values: 0+0x4 10+10x4 100+0x4
  alert_rule_test:
  - alertname: App-payload-tracker-In-payload-tracker-prod-5XX-Quota-Reached
    eval_time: 5m
    exp_alerts:
    - exp_labels:
        severity: info
        service: insights
        env: prod
        app_team: data-pipeline
      exp_annotations:
        dashboard: "https://grafana.app-sre.devshift.net/d/eGSUe-SZk/payload-tracker"
        link_url: "https://console-openshift-console.apps.crcp01ue1.o9m8.p1.openshiftapps.com/k8s/ns/payload-tracker-prod/deployments"
        message: "Payload Tracker Service Alert. Payload Tracker has exceeded 5% 5XX response quota."
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/tree/master/docs/console.redhat.com/app-sops/payload-tracker/App-payload-tracker-In-payload-tracker-prod-5XX-Quota-Reached.rst"

# PayloadTrackerFailedProcessingQuotaReached
- interval: 1m
  input_series:
  - series: payload_tracker_msg_count_total{status="success"}
    values: 0+0x4 5+5x4 50+0x4
  - series: payload_tracker_msg_count_total{status="consumed"}
    values: 0+0x4 10+10x4 100+0x4
  alert_rule_test:
  - alertname: App-payload-tracker-In-payload-tracker-prod-Failed-Processing-Quota-Reached
    eval_time: 5m
    exp_alerts:
    - exp_labels:
        severity: info
        service: insights
        env: prod
        app_team: data-pipeline
      exp_annotations:
        dashboard: "https://grafana.app-sre.devshift.net/d/eGSUe-SZk/payload-tracker"
        link_url: "https://console-openshift-console.apps.crcp01ue1.o9m8.p1.openshiftapps.com/k8s/ns/payload-tracker-prod/deployments"
        message: "Payload Tracker Service Alert. Payload Tracker has exceeded 5% failure quota for processing messages from Kafka in the last 24 hours."
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/tree/master/docs/console.redhat.com/app-sops/payload-tracker/App-payload-tracker-In-payload-tracker-prod-Failed-Processing-Quota-Reached.rst"
