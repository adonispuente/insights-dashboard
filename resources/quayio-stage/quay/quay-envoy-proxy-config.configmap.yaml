apiVersion: v1
kind: ConfigMap
metadata:
  name: quay-envoy-proxy-config
data:
  config.yaml: |
    # The administration endpoint uses a Unix socket instead of TCP in order
    # to avoid exposing it outside of the pod. Requests for metrics and
    # probes will go via an HTTP listener that only accepts requests for the
    # /metrics and /ready paths.
    admin:
      access_log_path: /dev/null
      address:
        pipe:
          path: /tmp/envoy-admin.socket

    static_resources:
      clusters:
      # This backend is used to send metrics and probes requests to the
      # administration endpoint.
      - name: admin
        connect_timeout: 1s
        type: STATIC
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: admin
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  pipe:
                    path: /tmp/envoy-admin.socket

      # This cluster is used to send requests to the backend.
      - name: backend
        connect_timeout: 1s
        type: STATIC
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: backend
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 8443

      listeners:
      # This listener is used to accept traffic to Envoy's admin UI
      - name: admin
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: admin
              route_config:
                name: admin
                virtual_hosts:
                - name: admin
                  domains:
                  - "*"
                  routes:
                  - name: default
                    match:
                      prefix: /
                    route:
                      cluster: admin
              http_filters:
              - name: envoy.filters.http.router

      # This listener is used to accept inbound traffic
      - name: ingress
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9443
        filter_chains:
        - transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                - certificate_chain:
                    filename: /conf/stack/ssl.cert
                  private_key:
                    filename: /conf/stack/ssl.key
          filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout
              use_remote_address: true
              xff_num_trusted_hops: 1
              stat_prefix: ingress
              route_config:
                name: backend
                virtual_hosts:
                - name: all
                  domains:
                  - "*"
                  routes:
                  # Everything else not matching one of the rules above goes
                  # directly to the backend, without rate limits.
                  - name: default
                    match:
                      prefix: /
                    route:
                      cluster: backend
                      timeout: 300s

              http_filters:
              # This is mandatory in order to have the HTTP routes above.
              - name: envoy.filters.http.router
