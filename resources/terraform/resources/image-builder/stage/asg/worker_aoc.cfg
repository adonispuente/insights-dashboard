#cloud-config

write_files:
  - path: /tmp/cloud_init_vars
    content: |
      OSBUILD_COMMIT={{{ osbuild_commit }}}
      COMPOSER_COMMIT={{{ composer_commit }}}
      {{%- if workspace_name == "staging"  %}}
      COMPOSER_HOST={{{ composer_host_aoc_staging }}}
      {{%- else %}}
      COMPOSER_HOST={{{ composer_host_aoc }}}
      {{%- endif %}}
      COMPOSER_PORT=443
      OFFLINE_TOKEN_ARN={{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/workers-stage/offline-token', 'arn') }}}
      OFFLINE_TOKEN_VID={{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/workers-stage/offline-token', 'version_id') }}}
      SUBSCRIPTION_MANAGER_COMMAND_ARN={{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/workers-stage/subscription-manager-command', 'arn') }}}
      SUBSCRIPTION_MANAGER_COMMAND_VID={{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/workers-stage/subscription-manager-command', 'version_id') }}}
      GCP_SERVICE_ACCOUNT_IMAGE_BUILDER_ARN={{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/workers-stage/gcp-service-account', 'arn') }}}
      GCP_SERVICE_ACCOUNT_IMAGE_BUILDER_VID={{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/workers-stage/gcp-service-account', 'version_id') }}}
      AZURE_ACCOUNT_IMAGE_BUILDER_ARN={{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/workers-stage/azure-service-account', 'arn') }}}
      AZURE_ACCOUNT_IMAGE_BUILDER_VID={{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/workers-stage/azure-service-account', 'version_id') }}}
      AWS_ACCOUNT_IMAGE_BUILDER_ARN={{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/workers-stage/aws-account', 'arn') }}}
      AWS_ACCOUNT_IMAGE_BUILDER_VID={{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/workers-stage/aws-account', 'version_id') }}}
      SYSTEM_HOSTNAME_PREFIX={{{ workspace_name }}}-worker-aoc
      WORKER_DIR=/etc/osbuild-worker
      SECRETS_MANAGER_ENDPOINT_URL=https://secretsmanager.{{{ aws_region }}}.amazonaws.com
  - path: /etc/osbuild-worker/osbuild-worker.toml
    content: |
      base_path = "/api/image-builder-worker/v1"
      [authentication]
      oauth_url = "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token"
      offline_token = "/etc/osbuild-worker/offline-token"
      [gcp]
      credentials = "/etc/osbuild-worker/gcp_credentials.json"
      [azure]
      credentials = "/etc/osbuild-worker/azure_credentials.toml"
      [aws]
      credentials = "/etc/osbuild-worker/aws_credentials.toml"
  - path: /etc/vector/vector.toml
    content: |
      [sources.journald]
      type = "journald"
      exclude_units = ["vector.service"]

      [sinks.out]
      type = "aws_cloudwatch_logs"
      inputs = [ "journald" ]
      endpoint = "https://logs.{{{ aws_region }}}.amazonaws.com"
      group_name = "workers-aoc-{{{ workspace_name }}}"
      stream_name = "worker-syslog-{{ host }}"
      encoding.codec = "json"

runcmd:
  - systemctl enable --now vector
