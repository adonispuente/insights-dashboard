---
$schema: /app-interface/prometheus-rule-test-1.yml

rule_files:
  - /insights-stage/content-sources-stage/content-sources-stage.prometheusrules.yml

evaluation_interval: 1m

tests:

# --- Content Sources Backend Pod Down Test --- #
- interval: 1m
  input_series:
  - series: up{service="content-sources-backend-service", namespace="content-sources-stage"}
    values: 1+0x9 0+0x10
  alert_rule_test:
  - eval_time: 5m
    alertname: ContentSourcesBackendDown
    exp_alerts: []
  - eval_time: 20m
    alertname: ContentSourcesBackendDown
    exp_alerts:
    - exp_labels:
        severity: medium
        service: insights
        namespace: "content-sources-stage"
      exp_annotations:
        message: "content-sources-backend-service pod down for 5 minutes."

# --- Availability Tests --- #

# ErrorRateThreshold = BurnRate * (1 - SLO)
# ErrorRateThreshold = 13.44 * (1 - .95) = .675
# 68% error rate from 10m-20m:
#   - No alert in 10m - errors begin after 10m
#   - Alert at 15m
#   - No alert at 30m - errors fall outside 5m window
- interval: 1m
  input_series:
    - series: content_sources_http_status_histogram_count{status="5xx"}
      values: '0+0x9 68+68x9 0+0x9' # 0/min 5xx for first 10m, 68/min for next 10m, 0/min for next 10m.
    - series: content_sources_http_status_histogram_count{status="2xx"}
      values: '0+0x9 32+32x9 0+0x9'
  alert_rule_test:
    - eval_time: 10m
      alertname: ContentSources5mto1hErrorBudgetBurn
      exp_alerts: []
    - eval_time: 15m
      alertname: ContentSources5mto1hErrorBudgetBurn
      exp_alerts:
        - exp_labels:
            severity: medium
            service: insights
          exp_annotations:
            message: "High error budget burn in the last hour (error rate: 68%)"
            runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/console.redhat.com/app-sops/content-sources/ContentSourcesAvailabilityAlert.md"
    - eval_time: 30m
      alertname: ContentSources5mto1hErrorBudgetBurn
      exp_alerts: []

# ErrorRateThreshold = BurnRate * (1 - SLO)
# ErrorRateThreshold = 5.6 * (1 - .95) = .28
- interval: 1m
  input_series:
    - series: content_sources_http_status_histogram_count{status="5xx"}
      values: '0+0x9 29+29x9 0+0x9' # 29% error rate 10m-20m triggers alert at 30m
    - series: content_sources_http_status_histogram_count{status="2xx"}
      values: '0+0x9 71+71x9 0+0x9'
  alert_rule_test:
    - eval_time: 10m
      alertname: ContentSources30mto6hErrorBudgetBurn
      exp_alerts: []
    - eval_time: 30m
      alertname: ContentSources30mto6hErrorBudgetBurn
      exp_alerts:
        - exp_labels:
            severity: medium
            service: insights
          exp_annotations:
            message: "High error budget burn in the last 6 hours (error rate: 29%)"
            runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/console.redhat.com/app-sops/content-sources/ContentSourcesAvailabilityAlert.md"
    - eval_time: 60m
      alertname: ContentSources30mto6hErrorBudgetBurn
      exp_alerts: []

# ErrorRateThreshold = BurnRate * (1 - SLO)
# ErrorRateThreshold = 2.8 * (1 - .95) = .14
- interval: 1m
  input_series:
    - series: content_sources_http_status_histogram_count{status="5xx"}
      values: '0+0x9 15+15x30 0+0x9'
    - series: content_sources_http_status_histogram_count{status="2xx"}
      values: '0+0x9 85+85x30 0+0x9'
  alert_rule_test:
    - eval_time: 10m
      alertname: ContentSources2hto1dErrorBudgetBurn
      exp_alerts: [ ]
    - eval_time: 120m
      alertname: ContentSources2hto1dErrorBudgetBurn
      exp_alerts:
        - exp_labels:
            severity: medium
            service: insights
          exp_annotations:
            message: "High error budget burn in the last day (error rate: 15%)"
            runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/console.redhat.com/app-sops/content-sources/ContentSourcesAvailabilityAlert.md"
    - eval_time: 180m
      alertname: ContentSources2hto1dErrorBudgetBurn
      exp_alerts: [ ]

# ErrorRateThreshold = BurnRate * (1 - SLO)
# ErrorRateThreshold = 1 * (1 - .95) = .05
- interval: 1m
  input_series:
    - series: content_sources_http_status_histogram_count{status="5xx"}
      values: '0+0x360   0+50x360    7200+100x360'
    - series: content_sources_http_status_histogram_count{status="2xx"}
      values: '0+1x360   360+950x360   356760+900x360'
  alert_rule_test:
    - eval_time: 360m
      alertname: ContentSources6hto3dErrorBudgetBurn
      exp_alerts: []
    - eval_time: 1080m
      alertname: ContentSources6hto3dErrorBudgetBurn
      exp_alerts:
        - exp_labels:
            severity: medium
            service: insights
          exp_annotations:
            message: "High error budget burn in the last 3 days (error rate: 11.3%)"
            runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/console.redhat.com/app-sops/content-sources/ContentSourcesAvailabilityAlert.md"
    - eval_time: 6h50m
      alertname: ContentSources6hto3dErrorBudgetBurn
      exp_alerts: [ ]

# ------- Latency Tests ------- #

# Okay in the first 10 minutes: 80% of requests at 100ms
# Alert at 30 min: 35% of requests above 100ms in last 30m (burn rate 5.6 -> error ratio threshold: 28%)
- interval: 1m
  input_series:
    - series: content_sources_http_status_histogram_bucket{le="0.1"}
      values: 8+8x9 6+6x19
    - series: content_sources_http_status_histogram_bucket_count
      values: 10+10x9 10+10x19
  alert_rule_test:
    - eval_time: 10m
      alertname: ContentSourcesLatency5mto1hrOr30mto6hBudgetBurn
      exp_alerts: []
    - eval_time: 30m
      alertname: ContentSourcesLatency5mto1hrOr30mto6hBudgetBurn
      exp_alerts:
        - exp_labels:
            latency: "0.1"
            severity: medium
            service: insights
          exp_annotations:
            message: 'High requests latency budget burn: 34.9% of requests slower than 100ms.'
            runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/console.redhat.com/app-sops/content-sources/ContentSourcesLatencyAlert.md"

- interval: 1m
  input_series:
    - series: content_sources_http_status_histogram_bucket{le="0.1"}
      values: 10+10x120 2+2x120
    - series: content_sources_http_status_histogram_bucket_count
      values: 10+10x120 10+10x120
  alert_rule_test:
    - eval_time: 2h
      alertname: ContentSourcesLatency2hto1dOr6hto3dBudgetBurn
      exp_alerts: []
    - eval_time: 4h
      alertname: ContentSourcesLatency2hto1dOr6hto3dBudgetBurn
      exp_alerts:
        - exp_labels:
            latency: "0.1"
            severity: medium
            service: insights
          exp_annotations:
            message: 'High requests latency budget burn: 39.96% of requests slower than 100ms.'
            runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/console.redhat.com/app-sops/content-sources/ContentSourcesLatencyAlert.md"
