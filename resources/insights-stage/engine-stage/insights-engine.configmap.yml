apiVersion: v1
kind: ConfigMap
metadata:
  name: insights-engine
data:
  config.yaml: |-
    plugins:
        default_component_enabled: true
        packages:
            - insights.specs.default
            - insights.specs.insights_archive
            - telemetry.rules
            - prodsec.rules
            - insights_kafka_service.rules
    configs: []
    service:
        extract_timeout: 10
        extract_tmp_dir:
        format: insights.formats._json.JsonFormat
        target_components: []
        consumer:
          name: "insights_kafka_service.consumer.InsightsKafkaConsumer"
          kwargs:
            services:
              - "advisor"
            incoming_topic: "platform.inventory.host-egress"
            group_id: "insights-core-kafka"
            bootstrap_servers:
        publisher:
          name: "insights_kafka_service.producer.InsightsKafkaProducer"
          kwargs:
            topic: "platform.engine.results"
            bootstrap_servers:
        downloader:
          name: "insights_messaging.downloaders.httpfs.Http"
        logging:
          version: 1
          disable_existing_loggers: false
          formatters:
            logstash:
              (): logstash_formatter.LogstashFormatterV1
          handlers:
            console:
              class: logging.StreamHandler
              formatter: logstash
              stream: ext://sys.stdout
            watchtower:
              formatter: logstash
              (): watchtower.CloudWatchLogHandler
              log_group: "platform"
              stream_name: ext://insights_kafka_service.HOSTNAME
          loggers:
            insights.core.dr:
              level: "ERROR"
            kafka:
              level: "ERROR"
            "":
              handlers:
                - console
                - watchtower
              level: "INFO"
        watchers:
          - name: "insights_kafka_service.metrics.Watcher"