---
$schema: /openshift/prometheus-rule-1.yml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: app-sre
    role: alert-rules
  name: provisioning-stage

spec:
  groups:
  - name: provisioning-missing-pod
    rules:
    - alert: MissingPodServingProvisioningService
      expr: |
        absent(up{namespace="provisioning-stage", service="provisioning-backend-api"} == 1) or absent(up{namespace="provisioning-stage", service="provisioning-backend-statuser"} == 1) or absent(up{namespace="provisioning-stage", service="provisioning-backend-worker"} == 1)
      labels:
        service: insights
        env: stage
        app_team: provisioning
        severity: medium
      annotations:
        message: "One of the provisioning service pods is down"

  - name: provisioning-reservation-success-rate
    rules:
    - alert: ProvisioningReservationSuccessRate
      expr: |
        sum(rate(provisioning_reservation_count{result="success"}[3h]))
        /
        sum(rate(provisioning_reservation_count[3h])) < 0.70
      for: 15m
      labels:
        service: insights
        env: stage
        app_team: provisioning
        severity: medium
      annotations:
        message: "Reservations success rate is low"
        dashboard: "https://grafana.stage.devshift.net/d/211/provisioning"
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/console.redhat.com/app-sops/provisioning/ProvisioningAvailabilityAlert.md"

  - name: provisioning-http-success-rate
    rules:
    - alert: ProvisioningHTTPSuccessRate
      expr: |
        (sum(rate(api_3scale_gateway_api_status{exported_service="provisioning",status="5xx"}[10m]))
        /
        sum(rate(api_3scale_gateway_api_status{exported_service="provisioning"}[10m]))) > 0.15
      for: 15m
      labels:
        service: insights
        env: stage
        app_team: provisioning
        severity: medium
      annotations:
        message: "REST API success rate (3scale) is high"
        dashboard: "https://grafana.stage.devshift.net/d/211/provisioning"
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/console.redhat.com/app-sops/provisioning/ProvisioningAvailabilityAlert.md"

  - name: provisioning-http-latency
    rules:
    - alert: ProvisioningHTTPLatency
      expr: |
        sum(rate(provisioning_http_request_duration_ms_bucket{code=~"2\\d\\d", le="5000"}[10m]))
        /
        sum(rate(provisioning_http_request_duration_ms_bucket{code=~"2\\d\\d",le="+Inf"}[10m])) < 0.85
      for: 15m
      labels:
        service: insights
        env: stage
        app_team: provisioning
        severity: medium
      annotations:
        message: "REST API latency is high"
        dashboard: "https://grafana.stage.devshift.net/d/211/provisioning"
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/console.redhat.com/app-sops/provisioning/ProvisioningHTTPLatencySLO.md"
