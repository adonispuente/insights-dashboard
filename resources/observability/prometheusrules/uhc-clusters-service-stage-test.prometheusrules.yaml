---
$schema: /app-interface/prometheus-rule-test-1.yml

rule_files:
- /observability/prometheusrules/uhc-clusters-service-stage.prometheusrules.yaml

evaluation_interval: 1m

tests:

# Check that the rate limits alert is triggered when the limited calls metric
# increases:
- interval: 1m
  input_series:
  - series: limited_calls{namespace="app-sre-rate-limiting",service="limitador",limitador_namespace="stage:clusters_mgmt"}
    values: 0 0 0 1 1

  alert_rule_test:
  - eval_time: 5m
    alertname: OCMClustersMgmtRateLimits - stage
    exp_alerts:
    - exp_labels:
        email: service-development-a
        severity: info
      exp_annotations:
        message: OCM stage clusters management service is rejecting requests due to exceeded rate limits
        runbook: https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/uhc/sop

# Check that the rate limits alert isn't triggered when the limited calls
# metric doesn't increase:
- interval: 1m
  input_series:
  - series: limited_calls{namespace="app-sre-rate-limiting",service="limitador",limitador_namespace="stage:clusters_mgmt"}
    values: 1 1 1 1 1

  alert_rule_test:
  - eval_time: 5m
    alertname: OCMClustersMgmtRateLimits - stage
    exp_alerts: []

# Check that the rate limits alert isn't triggered when the limited calls
# metric is zero:
- interval: 1m
  input_series:
  - series: limited_calls{namespace="app-sre-rate-limiting",service="limitador",limitador_namespace="stage:clusters_mgmt"}
    values: 0 0 0 0 0

  alert_rule_test:
  - eval_time: 5m
    alertname: OCMClustersMgmtRateLimits - stage
    exp_alerts: []

# Check that the rate limits alert isn't triggered when the limited calls
# metric is reset:
- interval: 1m
  input_series:
  - series: limited_calls{namespace="app-sre-rate-limiting",service="limitador",limitador_namespace="stage:clusters_mgmt"}
    values: 1 1 1 0 0

  alert_rule_test:
  - eval_time: 5m
    alertname: OCMClustersMgmtRateLimits - stage
    exp_alerts: []
