---
$schema: /app-interface/prometheus-rule-test-1.yml

rule_files:
  - /observability/prometheusrules/srs-tenant-manager-slos-latency-production.prometheusrules.yaml

evaluation_interval: 1m

tests:
  - interval: 1m
    input_series:
      # 0m  - 30m   all good
      # 30m - 60m   5% of requests degraded to 2le bucket
      # 60m - 90m   10% of requests degraded to 2le bucket
      - series: 'rest_requests_seconds_bucket{job="tenant-manager",namespace="service-registry-production",le="1.0",status_code_group="2xx"}'
        values: '0+1x30   31+19x30  601+18x30'
      - series: 'rest_requests_seconds_bucket{job="tenant-manager",namespace="service-registry-production",le="2.0",status_code_group="2xx"}'
        values: '0+1x30   31+1x30   61+2x30'
      - series: 'rest_requests_seconds_count{job="tenant-manager",namespace="service-registry-production"}'
        values: '0+1x30   31+20x30  631+20x30'
    alert_rule_test:
      - eval_time: 30m
        alertname: SRSTenantManagerAPILatency30mto6hP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 60m
        alertname: SRSTenantManagerAPILatency30mto6hP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 90m
        alertname: SRSTenantManagerAPILatency30mto6hP99BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSTenantManagerAPILatency30mto6hP99BudgetBurn
              job: tenant-manager
              latency: 1
              namespace: service-registry-production
              quantile: 99
              service: srs-tenant-manager
              severity: critical
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 6h requests latency budget burn for Tenant Manager API p99 (current value: 71.73m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-tenant-manager-latency"
  - interval: 1m
    input_series:
      # 0m    - 60m   all good
      # 60m   - 120m  1% of requests degraded to 2le bucket
      # 120m  - 150m  3% of requests degraded to 2le bucket
      - series: 'rest_requests_seconds_bucket{job="tenant-manager",namespace="service-registry-production",le="1.0",status_code_group="2xx"}'
        values: '0+1x60   61+99x60    6001+97x30'
      - series: 'rest_requests_seconds_bucket{job="tenant-manager",namespace="service-registry-production",le="2.0",status_code_group="2xx"}'
        values: '0+1x60   61+1x60     121+3x30'
      - series: 'rest_requests_seconds_count{job="tenant-manager",namespace="service-registry-production"}'
        values: '0+1x60   61+100x60   6061+100x30'
    alert_rule_test:
      - eval_time: 60m
        alertname: SRSTenantManagerAPILatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 120m
        alertname: SRSTenantManagerAPILatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 150m
        alertname: SRSTenantManagerAPILatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSTenantManagerAPILatency2hto1dor6hto3dP99BudgetBurn
              job: tenant-manager
              latency: 1
              namespace: service-registry-production
              quantile: 99
              service: srs-tenant-manager
              severity: high
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 1d/3d requests latency budget burn for Tenant Manager API p99 (current value: 16.09m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-tenant-manager-latency"
  - interval: 1m
    input_series:
      # 0m  - 30m   all good
      # 30m - 60m   50% of requests degraded to 1le bucket
      # 60m - 90m   70% of requests degraded to 1le bucket
      - series: 'rest_requests_seconds_bucket{job="tenant-manager",namespace="service-registry-production",le="0.1",status_code_group="2xx"}'
        values: '0+1x30   31+5x30   181+3x60'
      - series: 'rest_requests_seconds_bucket{job="tenant-manager",namespace="service-registry-production",le="1.0",status_code_group="2xx"}'
        values: '0+1x30   31+5x30   181+7x60'
      - series: 'rest_requests_seconds_count{job="tenant-manager",namespace="service-registry-production"}'
        values: '0+1x30   31+10x30  331+10x60'
    alert_rule_test:
      - eval_time: 30m
        alertname: SRSTenantManagerAPILatency30mto6hP90BudgetBurn
        exp_alerts: [ ]
      - eval_time: 60m
        alertname: SRSTenantManagerAPILatency30mto6hP90BudgetBurn
        exp_alerts: [ ]
      - eval_time: 120m
        alertname: SRSTenantManagerAPILatency30mto6hP90BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSTenantManagerAPILatency30mto6hP90BudgetBurn
              job: tenant-manager
              latency: 0.1
              namespace: service-registry-production
              quantile: 90
              service: srs-tenant-manager
              severity: high
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 1h/6h requests latency budget burn for Tenant Manager API p90 (current value: 609.3m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-tenant-manager-latency"
  - interval: 1m
    input_series:
      # 0m    - 60m   all good
      # 60m   - 120m  10% of requests degraded to 1le bucket
      # 120m  - 150m  30% of requests degraded to 1le bucket
      - series: 'rest_requests_seconds_bucket{job="tenant-manager",namespace="service-registry-production",le="0.1",status_code_group="2xx"}'
        values: '0+1x60   61+9x60   601+7x30'
      - series: 'rest_requests_seconds_bucket{job="tenant-manager",namespace="service-registry-production",le="1.0",status_code_group="2xx"}'
        values: '0+1x60   61+1x60   121+3x30'
      - series: 'rest_requests_seconds_count{job="tenant-manager",namespace="service-registry-production"}'
        values: '0+1x60   61+10x60  661+10x30'
    alert_rule_test:
      - eval_time: 60m
        alertname: SRSTenantManagerAPILatency2hto1dor6hto3dP90BudgetBurn
        exp_alerts: [ ]
      - eval_time: 120m
        alertname: SRSTenantManagerAPILatency2hto1dor6hto3dP90BudgetBurn
        exp_alerts: [ ]
      - eval_time: 150m
        alertname: SRSTenantManagerAPILatency2hto1dor6hto3dP90BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSTenantManagerAPILatency2hto1dor6hto3dP90BudgetBurn
              job: tenant-manager
              latency: 0.1
              namespace: service-registry-production
              quantile: 90
              service: srs-tenant-manager
              severity: high
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 1d/3d requests latency budget burn for Tenant Manager API p90 (current value: 151.5m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-tenant-manager-latency"
