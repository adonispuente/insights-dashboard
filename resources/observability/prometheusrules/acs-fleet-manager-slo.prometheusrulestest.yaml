---
$schema: /app-interface/prometheus-rule-test-1.yml

rule_files:
  - /observability/prometheusrules/acs-fleet-manager-slo.prometheusrules.yaml

evaluation_interval: 1m

group_eval_order:
  - acs-fleet-manager.sli
  - acs-fleet-manager.slo
  - acs-fleet-manager.alerts

tests:
  # ACS Fleet Manager availability error budget exhaustion - 90%
  - interval: 5m
    input_series:
      # 15m downtime due to pod not ready.
      - series: kube_pod_container_status_ready{container="service", namespace="acs-fleet-manager-prod"}
        values: "1+0x300 0 0 0 1+0x100"
      - series: haproxy_backend_http_responses_total{route="acs-fleet-manager", code="2xx"}
        values: "5+5x400"
      # 5m downtime due 5xx responses.
      - series: haproxy_backend_http_responses_total{route="acs-fleet-manager", code="5xx"}
        values: "0+0x397 0+5x20"
    alert_rule_test:
      - eval_time: 100m
        alertname: ACS Fleet Manager availability error budget exhaustion - 90%
        exp_alerts: []
      - eval_time: 2000m
        alertname: ACS Fleet Manager availability error budget exhaustion - 90%
        exp_alerts:
          - exp_labels:
              alertname: ACS Fleet Manager availability error budget exhaustion - 90%
              environment: {{{ environment }}}
              service: acs-fleet-manager
              severity: {{{ high_severity }}}
              team: appsre
            exp_annotations:
              message: "High availability error budget exhaustion for acs-fleet-manager. Current exhaustion: 100.2%."
              dashboard: "https://grafana.app-sre.devshift.net/d/T2kek3H9a/acs-fleet-manager-slos?orgId=1&from=now-28d&to=now"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/tree/master/docs/acs-fleet-manager/sop#acs-fleet-manager-availability"

  # ACS Fleet Manager availability error budget exhaustion - 90%
  - interval: 5m
    input_series:
      # 10m downtime due to pod not ready.
      - series: kube_pod_container_status_ready{container="service", namespace="acs-fleet-manager-prod"}
        values: "1+0x300 0 0 1+0x100"
      - series: haproxy_backend_http_responses_total{route="acs-fleet-manager", code="2xx"}
        values: "5+5x400"
      # 5m downtime due 5xx responses.
      - series: haproxy_backend_http_responses_total{route="acs-fleet-manager", code="5xx"}
        values: "0+0x397 0+5x20"
    alert_rule_test:
      - eval_time: 100m
        alertname: ACS Fleet Manager availability error budget exhaustion - 70%
        exp_alerts: []
      - eval_time: 2000m
        alertname: ACS Fleet Manager availability error budget exhaustion - 70%
        exp_alerts:
          - exp_labels:
              alertname: ACS Fleet Manager availability error budget exhaustion - 70%
              environment: {{{ environment }}}
              service: acs-fleet-manager
              severity: {{{ low_severity }}}
            exp_annotations:
              message: "High availability error budget exhaustion for acs-fleet-manager. Current exhaustion: 75.15%."
              dashboard: "https://grafana.app-sre.devshift.net/d/T2kek3H9a/acs-fleet-manager-slos?orgId=1&from=now-28d&to=now"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/tree/master/docs/acs-fleet-manager/sop#acs-fleet-manager-availability"

  # ACS Fleet Manager availability error budget exhaustion - 50%
  - interval: 5m
    input_series:
      # 5m downtime due to pod not ready.
      - series: kube_pod_container_status_ready{container="service", namespace="acs-fleet-manager-prod"}
        values: "1+0x300 0 1+0x100"
      - series: haproxy_backend_http_responses_total{route="acs-fleet-manager", code="2xx"}
        values: "5+5x400"
      # 5m downtime due 5xx responses.
      - series: haproxy_backend_http_responses_total{route="acs-fleet-manager", code="5xx"}
        values: "0+0x397 0+5x20"
    alert_rule_test:
      - eval_time: 100m
        alertname: ACS Fleet Manager availability error budget exhaustion - 50%
        exp_alerts: []
      - eval_time: 2000m
        alertname: ACS Fleet Manager availability error budget exhaustion - 50%
        exp_alerts:
          - exp_labels:
              alertname: ACS Fleet Manager availability error budget exhaustion - 50%
              environment: {{{ environment }}}
              service: acs-fleet-manager
              severity: {{{ low_severity }}}
            exp_annotations:
              message: "High availability error budget exhaustion for acs-fleet-manager. Current exhaustion: 50.1%."
              dashboard: "https://grafana.app-sre.devshift.net/d/T2kek3H9a/acs-fleet-manager-slos?orgId=1&from=now-28d&to=now"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/tree/master/docs/acs-fleet-manager/sop#acs-fleet-manager-availability"

  # ACS Fleet Manager high availability burn rate
  - interval: 5m
    input_series:
      # 30m downtime due to pod not ready.
      - series: kube_pod_container_status_ready{container="service", namespace="acs-fleet-manager-prod"}
        values: "1+0x6 0+0x6"
      - series: haproxy_backend_http_responses_total{route="acs-fleet-manager", code="2xx"}
        values: "5+5x14"
    alert_rule_test:
      - eval_time: 30m
        alertname: ACS Fleet Manager high availability burn rate
        exp_alerts: []
      - eval_time: 70m
        alertname: ACS Fleet Manager high availability burn rate
        exp_alerts:
          - exp_labels:
              alertname: ACS Fleet Manager high availability burn rate
              environment: {{{ environment }}}
              service: acs-fleet-manager
              severity: {{{ high_severity }}}
              team: appsre
            exp_annotations:
              message: "High availability burn rate for acs-fleet-manager. Current burn rate per hour: 59.02."
              dashboard: "https://grafana.app-sre.devshift.net/d/T2kek3H9a/acs-fleet-manager-slos?orgId=1&from=now-28d&to=now"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/tree/master/docs/acs-fleet-manager/sop#acs-fleet-manager-availability"
