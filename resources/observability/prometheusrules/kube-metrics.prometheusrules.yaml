---
$schema: /openshift/prometheus-rule-1.yml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: app-sre
    role: alert-rules
  name: kube-metrics
spec:
  groups:
  - name: kubernetes-apps
    rules:
    - alert: KubePodCrashLooping
      annotations:
        message: ({{ $labels.cluster }}/{{ $labels.namespace }}) Pod {{ $labels.pod }} ({{ $labels.container
          }}) is restarting {{ printf "%.2f" $value }} times / 5 minutes.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubePodCrashLooping.md
      expr: 'rate(kube_pod_container_status_restarts_total{job="kube-state-metrics",namespace!~"^openshift-.*$"}[5m])
        * 60 * 5 > 0'
      for: 15m
      labels:
        service: openshift
        severity: high
    - alert: KubePodNotReady
      annotations:
        message: ({{ $labels.cluster }}/{{ $labels.namespace }}) Pod {{ $labels.pod }} has been in a non-ready
          state for longer than 15 minutes.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubePodNotReady.md
      expr: |
        sum by (namespace, pod) (
          max by(namespace, pod) (
            kube_pod_status_phase{job="kube-state-metrics",phase=~"Pending|Unknown",namespace!~"^openshift-.*$"}
          ) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (
            1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!="Job"})
          )
        ) > 0
      for: 15m
      labels:
        service: openshift
        severity: high
    - alert: KubeDeploymentGenerationMismatch
      annotations:
        message: ({{ $labels.cluster }}/{{ $labels.namespace }}) Deployment generation for {{ $labels.deployment }}
          does not match, this indicates that the Deployment has failed but has not
          been rolled back.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeDeploymentGenerationMismatch.md
      expr: |
        kube_deployment_status_observed_generation{job="kube-state-metrics",namespace!~"^openshift-.*$"}
          !=
        kube_deployment_metadata_generation{job="kube-state-metrics",namespace!~"^openshift-.*$"}
      for: 15m
      labels:
        service: openshift
        severity: high
    - alert: KubeStatefulSetReplicasMismatch
      annotations:
        message: ({{ $labels.cluster }}/{{ $labels.namespace }}) StatefulSet {{ $labels.statefulset }} has not
          matched the expected number of replicas for longer than 15 minutes.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeStatefulSetReplicasMismatch.md
      expr: |
        (
          kube_statefulset_status_replicas_ready{job="kube-state-metrics",namespace!~"^openshift-.*$"}
            !=
          kube_statefulset_status_replicas{job="kube-state-metrics",namespace!~"^openshift-.*$"}
        ) and (
          changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics",namespace!~"^openshift-.*$"}[5m])
            ==
          0
        )
      for: 15m
      labels:
        service: openshift
        severity: high
    - alert: KubeStatefulSetGenerationMismatch
      annotations:
        message: ({{ $labels.cluster }}/{{ $labels.namespace }}) StatefulSet generation for {{ $labels.statefulset }}
          does not match, this indicates that the StatefulSet has failed but has
          not been rolled back.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeStatefulSetGenerationMismatch.md
      expr: |
        kube_statefulset_status_observed_generation{job="kube-state-metrics",namespace!~"^openshift-.*$"}
          !=
        kube_statefulset_metadata_generation{job="kube-state-metrics",namespace!~"^openshift-.*$"}
      for: 15m
      labels:
        service: openshift
        severity: high
    - alert: KubeStatefulSetUpdateNotRolledOut
      annotations:
        message: ({{ $labels.cluster }}/{{ $labels.namespace }}) StatefulSet {{ $labels.statefulset }} update
          has not been rolled out.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeStatefulSetUpdateNotRolledOut.md
      expr: |
        max without (revision) (
          kube_statefulset_status_current_revision{job="kube-state-metrics",namespace!~"^openshift-.*$"}
            unless
          kube_statefulset_status_update_revision{job="kube-state-metrics",namespace!~"^openshift-.*$"}
        )
          *
        (
          kube_statefulset_replicas{job="kube-state-metrics",namespace!~"^openshift-.*$"}
            !=
          kube_statefulset_status_replicas_updated{job="kube-state-metrics",namespace!~"^openshift-.*$"}
        )
        and (
          changes(kube_statefulset_status_replicas_updated{job="kube-state-metrics",namespace!~"^openshift-.*$"}[5m])
            ==
          0
        )
      for: 15m
      labels:
        service: openshift
        severity: high
    - alert: KubeDaemonSetRolloutStuck
      annotations:
        message: ({{ $labels.cluster }}/{{ $labels.namespace }}) Only {{ $value | humanizePercentage }} of the desired Pods of DaemonSet
          {{ $labels.daemonset }} are scheduled and ready.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeDaemonSetRolloutStuck.md
      expr: |
        kube_daemonset_status_number_ready{job="kube-state-metrics",namespace!~"^openshift-.*$"}
          /
        kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics",namespace!~"^openshift-.*$"} < 1.00
      for: 15m
      labels:
        service: openshift
        severity: high
    - alert: KubeContainerWaiting
      annotations:
        message: |
          ({{ $labels.cluster }}/{{ $labels.namespace }}) Pod {{ $labels.pod }} container {{ $labels.container }}
          has been in waiting state for longer than 15 minutes. Reason: {{ $labels.reason }}
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeContainerWaiting.md
      expr: 'sum by (namespace, pod, container, reason) (kube_pod_container_status_waiting_reason{job="kube-state-metrics",namespace!~"^(uhc-.*|openshift)-.*$"})
        > 0'
      for: 15m
      labels:
        service: openshift
        severity: high
    - alert: KubeDaemonSetNotScheduled
      annotations:
        message: "({{ $labels.cluster }}/{{ $labels.namespace }}) {{ $value }} Pods of DaemonSet {{ $labels.daemonset }}
          are not scheduled."
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeDaemonSetNotScheduled.md
      expr: |
        kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics",namespace!~"^openshift-.*$"}
          -
        kube_daemonset_status_current_number_scheduled{job="kube-state-metrics",namespace!~"^openshift-.*$"} > 0
      for: 10m
      labels:
        service: openshift
        severity: high
    - alert: KubeDaemonSetMisScheduled
      annotations:
        message: "({{ $labels.cluster }}/{{ $labels.namespace }}) {{ $value }} Pods of DaemonSet {{ $labels.daemonset }}
          are running where they are not supposed to run."
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeDaemonSetMisScheduled.md
      expr: 'kube_daemonset_status_number_misscheduled{job="kube-state-metrics",namespace!~"^openshift-.*$"} > 0'
      for: 15m
      labels:
        service: openshift
        severity: high
  - name: kubernetes-resources
    rules:
    - alert: KubeCPUOvercommit
      annotations:
        message: Cluster has overcommitted CPU resource requests for Pods and cannot
          tolerate node failure.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeCPUOvercommit.md
      expr: |
        sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum{})
          /
        sum(kube_node_status_allocatable_cpu_cores)
          >
        (count(kube_node_status_allocatable_cpu_cores)-1) / count(kube_node_status_allocatable_cpu_cores)
      for: 5m
      labels:
        service: openshift
        severity: high
    - alert: KubeMemoryOvercommit
      annotations:
        message: Cluster has overcommitted memory resource requests for Pods and cannot
          tolerate node failure.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeMemoryOvercommit.md
      expr: |
        sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum{})
          /
        sum(kube_node_status_allocatable_memory_bytes)
          >
        (count(kube_node_status_allocatable_memory_bytes)-1)
          /
        count(kube_node_status_allocatable_memory_bytes)
      for: 5m
      labels:
        service: openshift
        severity: high
    - alert: KubeCPUQuotaOvercommit
      annotations:
        message: Cluster has overcommitted CPU resource requests for Namespaces.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeCPUQuotaOvercommit.md
      expr: |
        sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="cpu"})
          /
        sum(kube_node_status_allocatable_cpu_cores)
          > 1.5
      for: 5m
      labels:
        service: openshift
        severity: high
    - alert: KubeMemoryQuotaOvercommit
      annotations:
        message: Cluster has overcommitted memory resource requests for Namespaces.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeMemoryQuotaOvercommit.md
      expr: |
        sum(kube_resourcequota{job="kube-state-metrics", type="hard", resource="memory"})
          /
        sum(kube_node_status_allocatable_memory_bytes{job="node-exporter"})
          > 1.5
      for: 5m
      labels:
        service: openshift
        severity: high
    - alert: KubeQuotaExceeded
      annotations:
        message: Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage
          }} of its {{ $labels.resource }} quota.
        runbook: https://gitlab.cee.redhat.com/service/app-interface/blob/master/docs/app-sre/sop/kubernetes/KubeQuotaExceeded.md
      expr: |
        kube_resourcequota{job="kube-state-metrics",type="used",namespace!~"^openshift-.*$"}
          / ignoring(instance, job, type)
        (kube_resourcequota{job="kube-state-metrics",type="hard",namespace!~"^openshift-.*$"} > 0)
          > 1
      for: 15m
      labels:
        service: openshift
        severity: high
  - name: kubernetes-storage
    rules:
    - alert: KubePersistentVolumeUsageCritical
      annotations:
        message: The PersistentVolume claimed by {{ $labels.persistentvolumeclaim
          }} in Namespace {{ $labels.namespace }} is only {{ printf "%0.2f" $value
          }}% free.
      expr: |
        100 * kubelet_volume_stats_available_bytes{job="kubelet",namespace!~"^(uhc-.*|openshift)-.*$"}
          /
        kubelet_volume_stats_capacity_bytes{job="kubelet",namespace!~"^(uhc-.*|openshift)-.*$"}
          < 3
      for: 10m
      labels:
        service: openshift
        severity: critical
    - alert: KubePersistentVolumeFullInFourDays
      annotations:
        message: Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim
          }} in Namespace {{ $labels.namespace }} is expected to fill up within four
          days. Currently {{ printf "%0.2f" $value }}% is available.
      expr: |
        100 * (
          kubelet_volume_stats_available_bytes{job="kubelet",namespace!~"^(uhc-.*|openshift)-.*$"}
            /
          kubelet_volume_stats_capacity_bytes{job="kubelet",namespace!~"^(uhc-.*|openshift)-.*$"}
        ) < 15
        and
        predict_linear(kubelet_volume_stats_available_bytes{job="kubelet"}[6h], 4 * 24 * 3600) < 0
      for: 5m
      labels:
        service: openshift
        severity: high
    - alert: KubePersistentVolumeErrors
      annotations:
        message: The persistent volume {{ $labels.persistentvolume }} has status {{
          $labels.phase }}.
      expr: |
        kube_persistentvolume_status_phase{phase=~"Failed|Pending",job="kube-state-metrics",namespace!~"^(uhc-.*|openshift)-.*$"} > 0
      for: 5m
      labels:
        service: openshift
        severity: high
