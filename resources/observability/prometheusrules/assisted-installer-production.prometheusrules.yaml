---
$schema: /openshift/prometheus-rule-1.yml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: app-sre
    role: alert-rules
  name: assisted-installer
spec:
  groups:


  # generated from https://promtools.dev/alerts/errors
  - name: SLOs-haproxy_backend_http_responses_total
    rules:
    - alert: ErrorBudgetBurn
      annotations:
        message: 'High error budget burn for route=assisted-service,exported_namespace=assisted-installer-production (current value: {{ $value }})'
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-low-availability"
      expr: |
        sum(haproxy_backend_http_responses_total:burnrate5m{route="assisted-service",exported_namespace="assisted-installer-production"}) > (14.40 * (1-0.85000))
        and
        sum(haproxy_backend_http_responses_total:burnrate1h{route="assisted-service",exported_namespace="assisted-installer-production"}) > (14.40 * (1-0.85000))
      for: 2m
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
        severity: medium #FIXME: update to high once we go GA
    - alert: ErrorBudgetBurn
      annotations:
        message: 'High error budget burn for route=assisted-service,exported_namespace=assisted-installer-production (current value: {{ $value }})'
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-low-availability"
      expr: |
        sum(haproxy_backend_http_responses_total:burnrate30m{route="assisted-service",exported_namespace="assisted-installer-production"}) > (6.00 * (1-0.85000))
        and
        sum(haproxy_backend_http_responses_total:burnrate6h{route="assisted-service",exported_namespace="assisted-installer-production"}) > (6.00 * (1-0.85000))
      for: 15m
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
        severity: medium #FIXME: update to high once we go GA
    - alert: ErrorBudgetBurn
      annotations:
        message: 'High error budget burn for route=assisted-service,exported_namespace=assisted-installer-production (current value: {{ $value }})'
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-low-availability"
      expr: |
        sum(haproxy_backend_http_responses_total:burnrate2h{route="assisted-service",exported_namespace="assisted-installer-production"}) > (3.00 * (1-0.85000))
        and
        sum(haproxy_backend_http_responses_total:burnrate1d{route="assisted-service",exported_namespace="assisted-installer-production"}) > (3.00 * (1-0.85000))
      for: 1h
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
        severity: warning
    - alert: ErrorBudgetBurn
      annotations:
        message: 'High error budget burn for route=assisted-service,exported_namespace=assisted-installer-production (current value: {{ $value }})'
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-low-availability"
      expr: |
        sum(haproxy_backend_http_responses_total:burnrate6h{route="assisted-service",exported_namespace="assisted-installer-production"}) > (1.00 * (1-0.85000))
        and
        sum(haproxy_backend_http_responses_total:burnrate3d{route="assisted-service",exported_namespace="assisted-installer-production"}) > (1.00 * (1-0.85000))
      for: 3h
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
        severity: warning
    - expr: |
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production",code="5xx"}[1d]))
        /
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production"}[1d]))
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
      record: haproxy_backend_http_responses_total:burnrate1d
    - expr: |
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production",code="5xx"}[1h]))
        /
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production"}[1h]))
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
      record: haproxy_backend_http_responses_total:burnrate1h
    - expr: |
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production",code="5xx"}[2h]))
        /
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production"}[2h]))
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
      record: haproxy_backend_http_responses_total:burnrate2h
    - expr: |
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production",code="5xx"}[30m]))
        /
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production"}[30m]))
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
      record: haproxy_backend_http_responses_total:burnrate30m
    - expr: |
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production",code="5xx"}[3d]))
        /
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production"}[3d]))
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
      record: haproxy_backend_http_responses_total:burnrate3d
    - expr: |
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production",code="5xx"}[5m]))
        /
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production"}[5m]))
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
      record: haproxy_backend_http_responses_total:burnrate5m
    - expr: |
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production",code="5xx"}[6h]))
        /
        sum(rate(haproxy_backend_http_responses_total{route="assisted-service",exported_namespace="assisted-installer-production"}[6h]))
      labels:
        exported_namespace: assisted-installer-production
        route: assisted-service
      record: haproxy_backend_http_responses_total:burnrate6h


  # generated from https://promtools.dev/alerts/latency
  - name: SLOs-http_request_duration_seconds
    rules:
    - alert: LatencyBudgetBurn
      annotations:
        message: 'High requests latency budget burn for endpoint=assisted-svc,namespace=assisted-installer-production,latency=0.1 (current value: {{ $value }})'
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-high-latency"
      expr: |
        (
          latencytarget:http_request_duration_seconds:rate1h{endpoint="assisted-svc",namespace="assisted-installer-production",latency="0.1"} > (14.4*0.01)
          and
          latencytarget:http_request_duration_seconds:rate5m{endpoint="assisted-svc",namespace="assisted-installer-production",latency="0.1"} > (14.4*0.01)
        )
        or
        (
          latencytarget:http_request_duration_seconds:rate6h{endpoint="assisted-svc",namespace="assisted-installer-production",latency="0.1"} > (6*0.01)
          and
          latencytarget:http_request_duration_seconds:rate30m{endpoint="assisted-svc",namespace="assisted-installer-production",latency="0.1"} > (6*0.01)
        )
      labels:
        latency: "0.1"
        namespace: assisted-installer-production
        severity: medium #FIXME: update to high once we go GA
    - alert: LatencyBudgetBurn
      annotations:
        message: 'High requests latency budget burn for endpoint=assisted-svc,namespace=assisted-installer-production,latency=0.1 (current value: {{ $value }})'
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-high-latency"
      expr: |
        (
          latencytarget:http_request_duration_seconds:rate1d{endpoint="assisted-svc",namespace="assisted-installer-production",latency="0.1"} > (3*0.01)
          and
          latencytarget:http_request_duration_seconds:rate2h{endpoint="assisted-svc",namespace="assisted-installer-production",latency="0.1"} > (3*0.01)
        )
        or
        (
          latencytarget:http_request_duration_seconds:rate3d{endpoint="assisted-svc",namespace="assisted-installer-production",latency="0.1"} > (0.01)
          and
          latencytarget:http_request_duration_seconds:rate6h{endpoint="assisted-svc",namespace="assisted-installer-production",latency="0.1"} > (0.01)
        )
      labels:
        latency: "0.1"
        namespace: assisted-installer-production
        severity: warning
    - expr: |
        1 - (
          sum(rate(http_request_duration_seconds_bucket{endpoint="assisted-svc",namespace="assisted-installer-production",le="0.1",code!~"5.."}[5m]))
          /
          sum(rate(http_request_duration_seconds_count{endpoint="assisted-svc",namespace="assisted-installer-production"}[5m]))
        )
      labels:
        latency: "0.1"
        namespace: assisted-installer-production
      record: latencytarget:http_request_duration_seconds:rate5m
    - expr: |
        1 - (
          sum(rate(http_request_duration_seconds_bucket{endpoint="assisted-svc",namespace="assisted-installer-production",le="0.1",code!~"5.."}[30m]))
          /
          sum(rate(http_request_duration_seconds_count{endpoint="assisted-svc",namespace="assisted-installer-production"}[30m]))
        )
      labels:
        latency: "0.1"
        namespace: assisted-installer-production
      record: latencytarget:http_request_duration_seconds:rate30m
    - expr: |
        1 - (
          sum(rate(http_request_duration_seconds_bucket{endpoint="assisted-svc",namespace="assisted-installer-production",le="0.1",code!~"5.."}[1h]))
          /
          sum(rate(http_request_duration_seconds_count{endpoint="assisted-svc",namespace="assisted-installer-production"}[1h]))
        )
      labels:
        latency: "0.1"
        namespace: assisted-installer-production
      record: latencytarget:http_request_duration_seconds:rate1h
    - expr: |
        1 - (
          sum(rate(http_request_duration_seconds_bucket{endpoint="assisted-svc",namespace="assisted-installer-production",le="0.1",code!~"5.."}[2h]))
          /
          sum(rate(http_request_duration_seconds_count{endpoint="assisted-svc",namespace="assisted-installer-production"}[2h]))
        )
      labels:
        latency: "0.1"
        namespace: assisted-installer-production
      record: latencytarget:http_request_duration_seconds:rate2h
    - expr: |
        1 - (
          sum(rate(http_request_duration_seconds_bucket{endpoint="assisted-svc",namespace="assisted-installer-production",le="0.1",code!~"5.."}[6h]))
          /
          sum(rate(http_request_duration_seconds_count{endpoint="assisted-svc",namespace="assisted-installer-production"}[6h]))
        )
      labels:
        latency: "0.1"
        namespace: assisted-installer-production
      record: latencytarget:http_request_duration_seconds:rate6h
    - expr: |
        1 - (
          sum(rate(http_request_duration_seconds_bucket{endpoint="assisted-svc",namespace="assisted-installer-production",le="0.1",code!~"5.."}[1d]))
          /
          sum(rate(http_request_duration_seconds_count{endpoint="assisted-svc",namespace="assisted-installer-production"}[1d]))
        )
      labels:
        latency: "0.1"
        namespace: assisted-installer-production
      record: latencytarget:http_request_duration_seconds:rate1d
    - expr: |
        1 - (
          sum(rate(http_request_duration_seconds_bucket{endpoint="assisted-svc",namespace="assisted-installer-production",le="0.1",code!~"5.."}[3d]))
          /
          sum(rate(http_request_duration_seconds_count{endpoint="assisted-svc",namespace="assisted-installer-production"}[3d]))
        )
      labels:
        latency: "0.1"
        namespace: assisted-installer-production
      record: latencytarget:http_request_duration_seconds:rate3d


  - name: assisted-installer_alerts
    rules:
      - alert: Assisted Installer - Service Is Down - Production
        annotations:
          message: "SERVICE IS DOWN"
          runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-service-is-down"
        expr: absent(up{job="assisted-service",namespace="assisted-installer-production"} == 1)
        for: 5m
        labels:
          severity: medium #FIXME: update to high once we go GA
          service: assisted-installer
      - alert: Assisted Installer - Version Upgrade Failure - Production
        annotations:
          message: "Assisted Installer service is failing to upgrade its version."
          runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-version-upgrade-failed"
        expr: count(up{job="assisted-service",namespace="assisted-installer-production"}) < 3
        for: 5m
        labels:
          severity: info
          service: assisted-installer

