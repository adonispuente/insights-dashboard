$schema: /app-interface/prometheus-rule-test-1.yml

rule_files:
- /observability/prometheusrules/assisted-installer-stage.prometheusrules.yaml

evaluation_interval: 1m

tests:
# Pods not ready (stage)
- interval: 1m
  input_series:
  # Pod going "not ready" for 4 minutes
  - series: kube_pod_status_ready{pod="assisted-image-service-0",namespace="assisted-installer-stage",condition="true"}
    values: 1+0x9 0+0x3 1+0x10
  - series: kube_pod_status_ready{pod="assisted-image-service-0",namespace="assisted-installer-stage",condition="false"}
    values: 0+0x9 1+0x3 0+0x10
  - series: kube_pod_status_ready{pod="assisted-image-service-0",namespace="assisted-installer-stage",condition="unknown"}
    values: 0+0x24
  # Deploy/upgrade simulation, rolling update
  # pod #1
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-85fp6",namespace="assisted-installer-stage",condition="true"}
    values: 1 1 1 0 0 1+0x19
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-85fp6",namespace="assisted-installer-stage",condition="false"}
    values: 0 0 0 1 1 0+0x19
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-85fp6",namespace="assisted-installer-stage",condition="unknown"}
    values: 0+0x24
  # pod #2
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-rb9xq",namespace="assisted-installer-stage",condition="true"}
    values: 1 1 1 1 1 0 0 1+0x17
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-rb9xq",namespace="assisted-installer-stage",condition="false"}
    values: 0 0 0 0 0 1 1 0+0x17
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-rb9xq",namespace="assisted-installer-stage",condition="unknown"}
    values: 0+0x24
  # pod #3
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-zbljb",namespace="assisted-installer-stage",condition="true"}
    values: 1 1 1 1 1 1 1 0 0 1+0x15
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-zbljb",namespace="assisted-installer-stage",condition="false"}
    values: 0 0 0 0 0 0 0 1 1 0+0x15
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-zbljb",namespace="assisted-installer-stage",condition="unknown"}
    values: 0+0x24
  # Pod going "not ready" for 4 minutes
  - series: kube_pod_status_ready{pod="assisted-image-service-1",namespace="assisted-installer-stage",condition="true"}
    values: 1+0x19 0 0 0 0 1+0x10
  - series: kube_pod_status_ready{pod="assisted-image-service-1",namespace="assisted-installer-stage",condition="false"}
    values: 0+0x24
  - series: kube_pod_status_ready{pod="assisted-image-service-1",namespace="assisted-installer-stage",condition="unknown"}
    values: 0+0x19 1+0x4

  alert_rule_test:
  # Test the no alert when starting deploy
  - eval_time: 6m
    alertname: Assisted Installer - Pod not ready
    exp_alerts:
  # Test the no alert when finishing deploy
  - eval_time: 9m
    alertname: Assisted Installer - Pod not ready
    exp_alerts:
  # Test pod not ready (false ready status)
  - eval_time: 13m
    alertname: Assisted Installer - Pod not ready
    exp_alerts:
    - exp_labels:
        pod: assisted-image-service-0
        service: assisted-installer
        severity: info
        namespace: assisted-installer-stage
      exp_annotations:
        message: "Assisted Installer Pod assisted-image-service-0 on namespace assisted-installer-stage not ready"
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-service-is-down"
  # Test pod has "unknown" ready status
  - eval_time: 24m
    alertname: Assisted Installer - Pod not ready
    exp_alerts:
    - exp_labels:
        pod: assisted-image-service-1
        service: assisted-installer
        severity: info
        namespace: assisted-installer-stage
      exp_annotations:
        message: "Assisted Installer Pod assisted-image-service-1 on namespace assisted-installer-stage not ready"
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-service-is-down"
# Pods not ready (integration)
- interval: 1m
  input_series:
  # Pod going "not ready" for 4 minutes
  - series: kube_pod_status_ready{pod="assisted-image-service-0",namespace="assisted-installer-integration",condition="true"}
    values: 1+0x9 0+0x3 1+0x10
  - series: kube_pod_status_ready{pod="assisted-image-service-0",namespace="assisted-installer-integration",condition="false"}
    values: 0+0x9 1+0x3 0+0x10
  - series: kube_pod_status_ready{pod="assisted-image-service-0",namespace="assisted-installer-integration",condition="unknown"}
    values: 0+0x24
  # Deploy/upgrade simulation, rolling update
  # pod #1
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-85fp6",namespace="assisted-installer-integration",condition="true"}
    values: 1 1 1 0 0 1+0x19
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-85fp6",namespace="assisted-installer-integration",condition="false"}
    values: 0 0 0 1 1 0+0x19
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-85fp6",namespace="assisted-installer-integration",condition="unknown"}
    values: 0+0x24
  # pod #2
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-rb9xq",namespace="assisted-installer-integration",condition="true"}
    values: 1 1 1 1 1 0 0 1+0x17
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-rb9xq",namespace="assisted-installer-integration",condition="false"}
    values: 0 0 0 0 0 1 1 0+0x17
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-rb9xq",namespace="assisted-installer-integration",condition="unknown"}
    values: 0+0x24
  # pod #3
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-zbljb",namespace="assisted-installer-integration",condition="true"}
    values: 1 1 1 1 1 1 1 0 0 1+0x15
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-zbljb",namespace="assisted-installer-integration",condition="false"}
    values: 0 0 0 0 0 0 0 1 1 0+0x15
  - series: kube_pod_status_ready{pod="assisted-service-8469669b6-zbljb",namespace="assisted-installer-integration",condition="unknown"}
    values: 0+0x24
  # Pod going "not ready" for 4 minutes
  - series: kube_pod_status_ready{pod="assisted-image-service-1",namespace="assisted-installer-integration",condition="true"}
    values: 1+0x19 0 0 0 0 1+0x10
  - series: kube_pod_status_ready{pod="assisted-image-service-1",namespace="assisted-installer-integration",condition="false"}
    values: 0+0x24
  - series: kube_pod_status_ready{pod="assisted-image-service-1",namespace="assisted-installer-integration",condition="unknown"}
    values: 0+0x19 1+0x4

  alert_rule_test:
  # Test the no alert when starting deploy
  - eval_time: 6m
    alertname: Assisted Installer - Pod not ready
    exp_alerts:
  # Test the no alert when finishing deploy
  - eval_time: 9m
    alertname: Assisted Installer - Pod not ready
    exp_alerts:
  # Test pod not ready (false ready status)
  - eval_time: 13m
    alertname: Assisted Installer - Pod not ready
    exp_alerts:
    - exp_labels:
        pod: assisted-image-service-0
        service: assisted-installer
        severity: info
        namespace: assisted-installer-integration
      exp_annotations:
        message: "Assisted Installer Pod assisted-image-service-0 on namespace assisted-installer-integration not ready"
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-service-is-down"
  # Test pod has "unknown" ready status
  - eval_time: 24m
    alertname: Assisted Installer - Pod not ready
    exp_alerts:
    - exp_labels:
        pod: assisted-image-service-1
        service: assisted-installer
        severity: info
        namespace: assisted-installer-integration
      exp_annotations:
        message: "Assisted Installer Pod assisted-image-service-1 on namespace assisted-installer-integration not ready"
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#assisted-installer-service-is-down"
- interval: 30s
  input_series:
  - series: container_memory_working_set_bytes{container="assisted-service", pod="pod1", job="assisted-service",namespace="assisted-installer-stage"}
    values: 500000 500000 910000 930000 930000 800000 800000
  - series: kube_pod_container_resource_limits{container="assisted-service", pod="pod1", job="assisted-service",namespace="assisted-installer-stage", resource="memory"}
    values: 1000000 1000000 1000000 1000000 1000000 1000000 1000000
  alert_rule_test:
  # before - No alert
  - eval_time: 30s
    alertname: Assisted Installer - Memory usage is above 90%
    exp_alerts:
  # only 30s with high memory usage - No alert
  - eval_time: 1m30s
    alertname: Assisted Installer - Memory usage is above 90%
    exp_alerts:
  # 60s with high memory usage - Alert
  - eval_time: 2m
    alertname: Assisted Installer - Memory usage is above 90%
    exp_alerts:
    - exp_labels:
        pod: pod1
        severity: warning
        service: assisted-installer
        namespace: assisted-installer-stage
      exp_annotations:
        message: "Assisted Installer Pod pod1 on namespace assisted-installer-stage usages is above 90%(93) <!subteam^S01T3MZGJ9M>"
  # 90s with high memory usage - Alert
  - eval_time: 2m30s
    alertname: Assisted Installer - Memory usage is above 90%
    exp_alerts: 
    - exp_labels:
        pod: pod1
        severity: warning
        service: assisted-installer
        namespace: assisted-installer-stage
      exp_annotations:
        message: "Assisted Installer Pod pod1 on namespace assisted-installer-stage usages is above 90%(93) <!subteam^S01T3MZGJ9M>"
  # Memory usage isn't high - No alert
  - eval_time: 3m
    alertname: Assisted Installer - Memory usage is above 90%
    exp_alerts:
- interval: 30s
  input_series:
  - series: container_memory_working_set_bytes{container="assisted-service", pod="pod1", job="assisted-service",namespace="assisted-installer-stage"}
    values: 500000 500000 810000 830000 830000 700000 700000
  - series: kube_pod_container_resource_limits{container="assisted-service", pod="pod1", job="assisted-service",namespace="assisted-installer-stage", resource="memory"}
    values: 1000000 1000000 1000000 1000000 1000000 1000000 1000000
  alert_rule_test:
  # before - No alert
  - eval_time: 30s
    alertname: Assisted Installer - Memory usage is above 80%
    exp_alerts:
  # only 30s with high memory usage - No alert
  - eval_time: 1m30s
    alertname: Assisted Installer - Memory usage is above 80%
    exp_alerts:
  # 60s with high memory usage - Alert
  - eval_time: 2m
    alertname: Assisted Installer - Memory usage is above 80%
    exp_alerts:
    - exp_labels:
        pod: pod1
        severity: info
        service: assisted-installer
        namespace: assisted-installer-stage
      exp_annotations:
        message: "Assisted Installer Pod pod1 on namespace assisted-installer-stage usages is above 80%(83)"
  # 90s with high memory usage - Alert
  - eval_time: 2m30s
    alertname: Assisted Installer - Memory usage is above 80%
    exp_alerts:
    - exp_labels:
        pod: pod1
        severity: info
        service: assisted-installer
        namespace: assisted-installer-stage
      exp_annotations:
        message: "Assisted Installer Pod pod1 on namespace assisted-installer-stage usages is above 80%(83)"
  # Memory usage isn't high - No alert
  - eval_time: 3m
    alertname: Assisted Installer - Memory usage is above 80%
    exp_alerts:
- interval: 30s
  input_series:
  - series: container_cpu_usage_seconds_total{container="assisted-service", pod="pod1",namespace="assisted-installer-stage"}
    values: 0 21 48 70 100 130 157 160 163
  alert_rule_test:
  # before - No alert
  - eval_time: 1m
    alertname: Assisted Installer - CPU usage is above 90%
    exp_alerts:
  # 90s with high CPU usage - Alert
  - eval_time: 3m
    alertname: Assisted Installer - CPU usage is above 90%
    exp_alerts:
    - exp_labels:
        pod: pod1
        severity: warning
        service: assisted-installer
        namespace: assisted-installer-stage
        container: assisted-service
      exp_annotations:
        message: "Assisted Installer Container CPU usages (pod pod1, namespace assisted-installer-stage) is above 90%(96.67%) <!subteam^S01T3MZGJ9M>"
    # CPU usage isn't high - No alert
  - eval_time: 4m
    alertname: Assisted Installer - CPU usage is above 90%
    exp_alerts:

# Check that the assisted installer service crashing alert fires when there are two restarts in the
# same container and pod in less than ten minutes:
- interval: 1m
  input_series:
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage",pod="assisted-service-123-456",container="assisted-service"}
    values: 0 0 0 1 2

  alert_rule_test:
  - eval_time: 5m
    alertname: Assisted Installer - Service is crashing
    exp_alerts:
    - exp_labels:
        pod: assisted-service-123-456
        container: assisted-service
        service: assisted-installer
        severity: warning
      exp_annotations:
        message: Assisted Installer container 'assisted-service' of pod 'assisted-service-123-456' is crashing <!subteam^S01T3MZGJ9M>

# Check that the assisted installer service crashing alert doesn't fire when there is only one
# restart in the last ten minutes:
- interval: 1m
  input_series:
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage",pod="assisted-service-123-456",container="assisted-service"}
    values: 0 0 0 1 0

  alert_rule_test:
  - eval_time: 5m
    alertname: Assisted Installer - Service is crashing
    exp_alerts: []

# Check that the assisted installer service crashing alert fires independently for different pods:
- interval: 1m
  input_series:
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage",pod="assisted-service-123-456",container="assisted-service"}
    values: 0 0 0 1 2
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage",pod="assisted-service-123-789",container="assisted-service"}
    values: 0 0 0 1 2

  alert_rule_test:
  - eval_time: 5m
    alertname: Assisted Installer - Service is crashing
    exp_alerts:
    - exp_labels:
        pod: assisted-service-123-456
        container: assisted-service
        service: assisted-installer
        severity: warning
      exp_annotations:
        message: Assisted Installer container 'assisted-service' of pod 'assisted-service-123-456' is crashing <!subteam^S01T3MZGJ9M>
    - exp_labels:
        pod: assisted-service-123-789
        container: assisted-service
        service: assisted-installer
        severity: warning
      exp_annotations:
        message: Assisted Installer container 'assisted-service' of pod 'assisted-service-123-789' is crashing <!subteam^S01T3MZGJ9M>

# Check that the crashing alert clears after ten minutes without restarts:
- interval: 1m
  input_series:
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage",pod="assisted-service-123-456",container="assisted-service"}
    values: 0 0 0 1 2 2 2 2 2 2 2 2 2 2 2

# Check that the assisted image service crashing alert fires when there are two restarts in the same
# container and pod in less than ten minutes:
- interval: 1m
  input_series:
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage",pod="assisted-image-service-123-456",container="assisted-image-service"}
    values: 0 0 0 1 2

  alert_rule_test:
  - eval_time: 5m
    alertname: Assisted Installer - Image service is crashing
    exp_alerts:
    - exp_labels:
        pod: assisted-image-service-123-456
        container: assisted-image-service
        service: assisted-installer
        severity: warning
      exp_annotations:
        message: Assisted Installer container 'assisted-image-service' of pod 'assisted-image-service-123-456' is crashing <!subteam^S01T3MZGJ9M>

# Check that the assisted image service crashing alert doesn't fire when there is only one restart
# in the last ten minutes:
- interval: 1m
  input_series:
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage",pod="assisted-image-service-123-456",container="assisted-image-service"}
    values: 0 0 0 1 0

  alert_rule_test:
  - eval_time: 5m
    alertname: Assisted Installer - Image service is crashing
    exp_alerts: []

# Check that the assisted image service crashing alert fires independently for different pods:
- interval: 1m
  input_series:
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage",pod="assisted-image-service-123-456",container="assisted-image-service"}
    values: 0 0 0 1 2
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage",pod="assisted-image-service-123-789",container="assisted-image-service"}
    values: 0 0 0 1 2

  alert_rule_test:
  - eval_time: 5m
    alertname: Assisted Installer - Image service is crashing
    exp_alerts:
    - exp_labels:
        pod: assisted-image-service-123-456
        container: assisted-image-service
        service: assisted-installer
        severity: warning
      exp_annotations:
        message: Assisted Installer container 'assisted-image-service' of pod 'assisted-image-service-123-456' is crashing <!subteam^S01T3MZGJ9M>
    - exp_labels:
        pod: assisted-image-service-123-789
        container: assisted-image-service
        service: assisted-installer
        severity: warning
      exp_annotations:
        message: Assisted Installer container 'assisted-image-service' of pod 'assisted-image-service-123-789' is crashing <!subteam^S01T3MZGJ9M>

# Check that the assisted image service crashing alert clears after ten minutes without restarts:
- interval: 1m
  input_series:
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage",pod="assisted-image-service-123-456",container="assisted-image-service"}
    values: 0 0 0 1 2 2 2 2 2 2 2 2 2 2 2

# When a container restarts, we should alert with the reason
- interval: 1m
  input_series:
  - series: kube_pod_container_status_last_terminated_reason{namespace="assisted-installer-stage", pod="assisted-service-000-123",reason="Error", container="assisted-service"}
    values: 0+0x60 1+0x60 0+0x60
  - series: kube_pod_container_status_last_terminated_reason{namespace="assisted-installer-stage", pod="assisted-service-000-123",reason="OOMKilled", container="assisted-service"}
    values: 0+0x60 0+0x60 1+0x60
  - series: kube_pod_container_status_restarts_total{namespace="assisted-installer-stage", pod="assisted-service-000-123", container="assisted-service"}
    values: 0+0x60 1+0x60 2+0x60
  alert_rule_test:
  # No errors, no restarts
  - eval_time: 30m
    alertname: "Assisted Installer - Container restarted"
    exp_alerts: []
  # Error ocurred, should be reported
  - eval_time: 1h5m
    alertname: "Assisted Installer - Container restarted"
    exp_alerts:
    - exp_labels:
        service: assisted-installer
        severity: warning
        container: assisted-service
        namespace: assisted-installer-stage
        pod: assisted-service-000-123
        reason: Error
      exp_annotations:
        message: "Assisted Installer container assisted-service in pod assisted-service-000-123 restarted due to Error <!subteam^S01T3MZGJ9M>"
  # OOMKill ocurred, should be reported
  - eval_time: 2h5m
    alertname: "Assisted Installer - Container restarted"
    exp_alerts:
    - exp_labels:
        service: assisted-installer
        severity: warning
        container: assisted-service
        namespace: assisted-installer-stage
        pod: assisted-service-000-123
        reason: OOMKilled
      exp_annotations:
        message: "Assisted Installer container assisted-service in pod assisted-service-000-123 restarted due to OOMKilled <!subteam^S01T3MZGJ9M>"

# Check PVC usage
- interval: 1m
  input_series:
  - series: kubelet_volume_stats_used_bytes{namespace="assisted-installer-stage",persistentvolumeclaim="assisted-image-service-assisted-image-service-1"}
    values: 2000+100x80
  - series: kubelet_volume_stats_available_bytes{namespace="assisted-installer-stage",persistentvolumeclaim="assisted-image-service-assisted-image-service-1"}
    values: 8000-100x80

  alert_rule_test:
    # 10m past threshold
  - eval_time: 71m
    alertname: "Assisted Installer - Volume claim high disk usage"
    exp_alerts:
    - exp_labels:
        namespace: assisted-installer-stage
        persistentvolumeclaim: assisted-image-service-assisted-image-service-1
        service: assisted-installer
        severity: warning
      exp_annotations:
        message: Assisted Installer (assisted-installer-stage) volume claim assisted-image-service-assisted-image-service-1 volume usage higher than 80% (91.00%) <!subteam^S01T3MZGJ9M>
        redhat_cloud_url: "https://console-openshift-console.apps.app-sre-stage-0.k3s7.p1.openshiftapps.com/k8s/ns/assisted-installer-stage/persistentvolumeclaims/assisted-image-service-assisted-image-service-1"
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#persistent-volume-claim-high-usage"
    # 9m past threshold: should not alert
  - eval_time: 70m
    alertname: "Assisted Installer - Volume claim high disk usage"
    exp_alerts:
      []
    # ratio still within 80%: should not alert
  - eval_time: 60m
    alertname: "Assisted Installer - Volume claim high disk usage"
    exp_alerts:
      []

# RDS free disk space (stage)
- interval: 1m
  input_series:
  - series: aws_rds_free_storage_space_sum{dbinstance_identifier="assisted-installer-stage"}
    values: 10000-100x90
  - series: aws_resources_exporter_rds_allocatedstorage{dbinstance_identifier="assisted-installer-stage"}
    values: 10000+0x90

  alert_rule_test:
    # 10m past threshold
  - eval_time: 81m
    alertname: "Assisted Installer - RDS disk usage too high"
    exp_alerts:
    - exp_labels:
        dbinstance_identifier: "assisted-installer-stage"
        service: assisted-installer
        severity: warning
      exp_annotations:
        message: Assisted Installer RDS instance assisted-installer-stage free disk space less than 30% (19.00%) <!subteam^S01T3MZGJ9M>
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#RDS-free-disk-space-running-low"
        dashboard: "https://grafana.app-sre.devshift.net/d/ezEQIcPnk/rds-postgres?orgId=1&var-instance=assisted-installer-stage&var-datasource=app-sre-prod-01-prometheus"

    # 9m past threshold: should not alert
  - eval_time: 80m
    alertname: "Assisted Installer - RDS disk usage too high"
    exp_alerts:
      []
    # ratio still above 30%: should not alert
  - eval_time: 60m
    alertname: "Assisted Installer - RDS disk usage too high"
    exp_alerts:
      []

# RDS free disk space (integration)
- interval: 1m
  input_series:
  - series: aws_rds_free_storage_space_sum{dbinstance_identifier="assisted-installer-integration-v4"}
    values: 10000-100x90
  - series: aws_resources_exporter_rds_allocatedstorage{dbinstance_identifier="assisted-installer-integration-v4"}
    values: 10000+0x90

  alert_rule_test:
    # 10m past threshold
  - eval_time: 81m
    alertname: "Assisted Installer - RDS disk usage too high"
    exp_alerts:
    - exp_labels:
        dbinstance_identifier: "assisted-installer-integration-v4"
        service: assisted-installer
        severity: warning
      exp_annotations:
        message: Assisted Installer RDS instance assisted-installer-integration-v4 free disk space less than 30% (19.00%) <!subteam^S01T3MZGJ9M>
        runbook: "https://gitlab.cee.redhat.com/service/app-interface/-/blob/master/docs/assisted-installer/sop#RDS-free-disk-space-running-low"
        dashboard: "https://grafana.app-sre.devshift.net/d/ezEQIcPnk/rds-postgres?orgId=1&var-instance=assisted-installer-integration-v4&var-datasource=app-sre-prod-01-prometheus"

    # 9m past threshold: should not alert
  - eval_time: 80m
    alertname: "Assisted Installer - RDS disk usage too high"
    exp_alerts:
      []
    # ratio still above 30%: should not alert
  - eval_time: 60m
    alertname: "Assisted Installer - RDS disk usage too high"
    exp_alerts:
      []
