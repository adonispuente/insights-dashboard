---
$schema: /app-interface/prometheus-rule-test-1.yml

rule_files:
  - /observability/prometheusrules/srs-service-registry-slos-latency-production.prometheusrules.yaml

evaluation_interval: 1m

tests:
  # === All
  - interval: 1m
    input_series:
      # 0m  - 30m   all good
      # 30m - 60m   5% of requests degraded to 2le bucket
      # 60m - 90m   10% of requests degraded to 2le bucket
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="1.0",status_code_group="2xx"}'
        values: '0+1x30   31+19x30  601+18x30'
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="2.0",status_code_group="2xx"}'
        values: '0+1x30   31+1x30   61+2x30'
      - series: 'rest_requests_seconds_count{job="apicurio-registry",namespace="service-registry-production"}'
        values: '0+1x30   31+20x30  631+20x30'
    alert_rule_test:
      - eval_time: 30m
        alertname: SRSServiceRegistryAPIAllLatency30mto6hP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 60m
        alertname: SRSServiceRegistryAPIAllLatency30mto6hP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 90m
        alertname: SRSServiceRegistryAPIAllLatency30mto6hP99BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSServiceRegistryAPIAllLatency30mto6hP99BudgetBurn
              job: apicurio-registry
              latency: "1.0"
              namespace: service-registry-production
              quantile: 99
              service: srs-service-registry
              severity: critical
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 6h requests latency budget burn for Service Registry API p99 (current value: 71.73m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-service-registry-latency"
  - interval: 1m
    input_series:
      # 0m    - 60m   all good
      # 60m   - 120m  1% of requests degraded to 2le bucket
      # 120m  - 150m  3% of requests degraded to 2le bucket
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="1.0",status_code_group="2xx"}'
        values: '0+1x60   61+99x60    6001+97x30'
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="2.0",status_code_group="2xx"}'
        values: '0+1x60   61+1x60     121+3x30'
      - series: 'rest_requests_seconds_count{job="apicurio-registry",namespace="service-registry-production"}'
        values: '0+1x60   61+100x60   6061+100x30'
    alert_rule_test:
      - eval_time: 60m
        alertname: SRSServiceRegistryAPIAllLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 120m
        alertname: SRSServiceRegistryAPIAllLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 150m
        alertname: SRSServiceRegistryAPIAllLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSServiceRegistryAPIAllLatency2hto1dor6hto3dP99BudgetBurn
              job: apicurio-registry
              latency: "1.0"
              namespace: service-registry-production
              quantile: 99
              service: srs-service-registry
              severity: high
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 1d/3d requests latency budget burn for Service Registry API p99 (current value: 16.09m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-service-registry-latency"
  # === Read
  - interval: 1m
    input_series:
      # CurrentErrorRate * (t / WindowSize) = BurnRate * (1 - SLOGoal)
      # ErrorRate = BurnRate * (1 - SLOTarget) per the given time period
      # 0m  - 30m  all good
      # 30m - 60m  5% burn rate ~> 6 * (1 - 0.99) = 0.06 error rate ~> 6 per 100 requests, which should be just below the alert threshold
      # 60m - 90m  10% burn rate ~> 2 * 6 * (1 - 0.99) = 0.12 error rate ~> 12 per 100 requests, which should trigger the alert
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="0.25",status_code_group="2xx", method="GET", path="/apis/v2/registry/groups/default/artifacts"}'
        values: '0+1x30  30+94x30   2914+88x30'
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="1.0",status_code_group="2xx", method="GET", path="/apis/v2/registry/groups/default/artifacts"}'
        values: '0+1x30  30+6x30     210+12x30'
      - series: 'rest_requests_seconds_count{job="apicurio-registry",namespace="service-registry-production", method="GET", path="/apis/v2/registry/groups/default/artifacts"}'
        values: '0+1x30  30+100x30  3030+100x30'
    alert_rule_test:
      - eval_time: 30m
        alertname: SRSServiceRegistryAPIReadLatency30mto6hP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 60m
        alertname: SRSServiceRegistryAPIReadLatency30mto6hP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 90m
        alertname: SRSServiceRegistryAPIReadLatency30mto6hP99BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSServiceRegistryAPIReadLatency30mto6hP99BudgetBurn
              job: apicurio-registry
              latency: "0.25"
              namespace: service-registry-production
              quantile: "99"
              service: srs-service-registry
              severity: critical
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 6h requests latency budget burn for Service Registry API Read ops p99 (current value: 76.79m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-service-registry-latency"
  - interval: 1m
    input_series:
      # 0m   - 120m   all good
      # 120m - 240m  10% burn rate ~> 3 * (1 - 0.99) = 0.03 error rate ~> 3 per 100 requests, which should be just below the alert threshold
      # 240m - 360m  20% burn rate ~> 2 * 3 * (1 - 0.99) = 0.06 error rate ~> 6 per 100 requests, which should trigger the alert
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="0.25",status_code_group="2xx", method="GET", path="/apis/v2/registry/groups/default/artifacts"}'
        values: '0+1x120   120+97x120   11760+94x120'
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="1.0",status_code_group="2xx", method="GET", path="/apis/v2/registry/groups/default/artifacts"}'
        values: '0+1x120   120+3x120    480+6x120'
      - series: 'rest_requests_seconds_count{job="apicurio-registry",namespace="service-registry-production", method="GET", path="/apis/v2/registry/groups/default/artifacts"}'
        values: '0+1x120   120+100x120  1200120+100x120'
    alert_rule_test:
      - eval_time: 60m
        alertname: SRSServiceRegistryAPIReadLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 120m
        alertname: SRSServiceRegistryAPIReadLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 150m
        alertname: SRSServiceRegistryAPIReadLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSServiceRegistryAPIReadLatency2hto1dor6hto3dP99BudgetBurn
              job: apicurio-registry
              latency: "0.25"
              namespace: service-registry-production
              quantile: "99"
              service: srs-service-registry
              severity: high
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 1d/3d requests latency budget burn for Service Registry API Read ops p99 (current value: 28.77m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-service-registry-latency"
  # === Write
  - interval: 1m
    input_series:
      # 0m    - 60m   all good
      # 60m   - 120m  1% of requests degraded to 0.1le bucket
      # 120m  - 150m  3% of requests degraded to 1.0le bucket
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="1.0",status_code_group="2xx", method="DELETE", path="/apis/v2/registry/groups/default/artifacts/foo"}'
        values: '0+1x60   61+99x60    6001+97x30'
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="2.0",status_code_group="2xx", method="DELETE", path="/apis/v2/registry/groups/default/artifacts/foo"}'
        values: '0+1x60   61+1x60     121+3x30'
      - series: 'rest_requests_seconds_count{job="apicurio-registry",namespace="service-registry-production", method="DELETE", path="/apis/v2/registry/groups/default/artifacts/foo"}'
        values: '0+1x60   61+100x60   6061+100x30'
    alert_rule_test:
      - eval_time: 60m
        alertname: SRSServiceRegistryAPIWriteLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 120m
        alertname: SRSServiceRegistryAPIWriteLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 150m
        alertname: SRSServiceRegistryAPIWriteLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSServiceRegistryAPIWriteLatency2hto1dor6hto3dP99BudgetBurn
              job: apicurio-registry
              latency: 1.0
              namespace: service-registry-production
              quantile: 99
              service: srs-service-registry
              severity: high
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 1d/3d requests latency budget burn for Service Registry API Write ops p99 (current value: 16.09m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-service-registry-latency"
  - interval: 1m
    input_series:
      # 0m   - 30m  all good
      # 30m  - 60m  3% of requests degraded to 1le bucket
      # 60m  - 90m  6% of requests degraded to 2le bucket
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="1.0",status_code_group="2xx", method="DELETE", path="/apis/v2/registry/groups/default/artifacts/foo"}'
        values: '0+1x30   31+19x30  601+18x30'
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="2.0",status_code_group="2xx", method="DELETE", path="/apis/v2/registry/groups/default/artifacts/foo"}'
        values: '0+1x30   31+1x30   61+2x30'
      - series: 'rest_requests_seconds_count{job="apicurio-registry",namespace="service-registry-production", method="DELETE", path="/apis/v2/registry/groups/default/artifacts/foo"}'
        values: '0+1x30   31+20x30  631+20x30'
    alert_rule_test:
      - eval_time: 30m
        alertname: SRSServiceRegistryAPIWriteLatency30mto6hP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 60m
        alertname: SRSServiceRegistryAPIWriteLatency30mto6hP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 90m
        alertname: SRSServiceRegistryAPIWriteLatency30mto6hP99BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSServiceRegistryAPIWriteLatency2hto1dor6hto3dP99BudgetBurn
              job: apicurio-registry
              latency: 1.0
              namespace: service-registry-production
              quantile: 99
              service: srs-service-registry
              severity: critical
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 6h requests latency budget burn for Service Registry API Write ops p99 (current value: 71.73m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-service-registry-latency"
  # === Search
  - interval: 1m
    input_series:
      # 0m    - 60m   all good
      # 60m   - 120m  1% of requests degraded to 0.1le bucket
      # 120m  - 150m  3% of requests degraded to 1.0le bucket
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="1.0",status_code_group="2xx",method="POST",path="/apis/v2/registry/search/artifacts"}'
        values: '0+1x60   61+99x60    6001+97x30'
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="2.0",status_code_group="2xx",method="GET",path="/apis/v2/registry/search/artifacts"}'
        values: '0+1x60   61+1x60     121+3x30'
      - series: 'rest_requests_seconds_count{job="apicurio-registry",namespace="service-registry-production",path="/apis/v2/registry/search/artifacts"}'
        values: '0+1x60   61+100x60   6061+100x30'
    alert_rule_test:
      - eval_time: 60m
        alertname: SRSServiceRegistryAPISearchLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 120m
        alertname: SRSServiceRegistryAPISearchLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 150m
        alertname: SRSServiceRegistryAPISearchLatency2hto1dor6hto3dP99BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSServiceRegistryAPISearchLatency2hto1dor6hto3dP99BudgetBurn
              job: apicurio-registry
              latency: 1.0
              namespace: service-registry-production
              quantile: 99
              service: srs-service-registry
              severity: high
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 1d/3d requests latency budget burn for Service Registry API Search ops p99 (current value: 16.09m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-service-registry-latency"
  - interval: 1m
    input_series:
      # 0m   - 30m  all good
      # 30m  - 60m  3% of requests degraded to 1le bucket
      # 60m  - 90m  6% of requests degraded to 2le bucket
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="1.0",status_code_group="2xx",method="POST",path="/apis/v2/registry/search/artifacts"}'
        values: '0+1x30   31+19x30  601+18x30'
      - series: 'rest_requests_seconds_bucket{job="apicurio-registry",namespace="service-registry-production",le="2.0",status_code_group="2xx",method="GET",path="/apis/v2/registry/search/artifacts"}'
        values: '0+1x30   31+1x30   61+2x30'
      - series: 'rest_requests_seconds_count{job="apicurio-registry",namespace="service-registry-production",path="/apis/v2/registry/search/artifacts"}'
        values: '0+1x30   31+20x30  631+20x30'
    alert_rule_test:
      - eval_time: 30m
        alertname: SRSServiceRegistryAPISearchLatency30mto6hP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 60m
        alertname: SRSServiceRegistryAPISearchLatency30mto6hP99BudgetBurn
        exp_alerts: [ ]
      - eval_time: 90m
        alertname: SRSServiceRegistryAPISearchLatency30mto6hP99BudgetBurn
        exp_alerts:
          - exp_labels:
              alertname: SRSServiceRegistryAPISearchLatency2hto1dor6hto3dP99BudgetBurn
              job: apicurio-registry
              latency: 1.0
              namespace: service-registry-production
              quantile: 99
              service: srs-service-registry
              severity: critical
            exp_annotations:
              dashboard: "https://grafana.app-sre.devshift.net/d/VRxU14jZ1/service-registry-data-plane-metrics?var-datasource=app-sre-prod-04-prometheus&var-namespace=service-registry-production&var-datasouce_aws=AWS%20app-sre&var-DBInstanceIdentifier_aws=srs-service-registry-production&var-interval=5m"
              message: "High 6h requests latency budget burn for Service Registry API Search ops p99 (current value: 71.73m)"
              runbook: "https://gitlab.cee.redhat.com/service/app-interface/tree/master/docs/service-registry/sop#srs-service-registry-latency"
