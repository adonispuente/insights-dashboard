kind: ConfigMap
apiVersion: v1
metadata:
  name: cluster-monitoring-config
  namespace: openshift-monitoring
data:
  config.yaml: |
    enableUserWorkload: true
    prometheusK8s:
      externalLabels:
        source: "DP"
      replicas: 2
      remoteWrite:
        - url: https://metrics-forwarder.apps.hst01ue1.hypershift.local
          remoteTimeout: 30s
          writeRelabelConfigs:
          - sourceLabels: [__tmp_openshift_cluster_id__]
            targetLabel: _id
            action: replace
          - sourceLabels: [__name__]
            action: keep
          queueConfig:
            capacity: 10000
            maxShards: 500
            minShards: 1
            maxSamplesPerSend: 2000
            batchSendDeadline: 60s
            minBackoff: 30ms
            maxBackoff: 30s
          tlsConfig:
            insecureSkipVerify: true
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/worker
          operator: Exists
      retention: 30d
      retentionSize: 90GB
      volumeClaimTemplate:
        metadata:
          name: prometheus-data
        spec:
          resources:
            requests:
              storage: 100Gi
    alertmanagerMain:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/worker
          operator: Exists
      volumeClaimTemplate:
        metadata:
          name: alertmanager-data
        spec:
          resources:
            requests:
              storage: 10Gi
    telemeterClient:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/worker
          operator: Exists
      telemeterServerURL: https://infogw.api.stage.openshift.com
    prometheusOperator:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/worker
          operator: Exists
    k8sPrometheusAdapter:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/worker
          operator: Exists
    kubeStateMetrics:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/worker
          operator: Exists
    openshiftStateMetrics:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/worker
          operator: Exists
    thanosQuerier:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/worker
          operator: Exists
