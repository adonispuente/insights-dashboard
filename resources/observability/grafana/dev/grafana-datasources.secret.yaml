---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-datasources
  annotations:
    qontract.recycle: "true"
    qontract.ignore_reconcile_time: "true"
data:
  datasources.yaml:
    {{% b64encode %}}
    {
        "apiVersion": 1,
        "datasources": [
            {{%- for cluster in clusters %}}
            {{%- with token = vault('app-sre/integrations-output/openshift-serviceaccount-tokens/' ~ cluster.name ~ '/app-sre-observability-per-cluster/' ~ cluster.name ~ '-app-sre-observability-per-cluster-grafana', 'token') %}}
            {
                "access": "proxy",
                "editable": false,
                "jsonData": {
                    "httpHeaderName1": "Authorization"
                },
                "name": "{{{ cluster.name }}}-prometheus",
                "orgId": 1,
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ token }}}"
                },
                "type": "prometheus",
                "url": "https://prometheus.{{{ cluster.name }}}.devshift.net",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "jsonData": {
                    "httpHeaderName1": "Authorization"
                },
                "name": "{{{ cluster.name }}}-cluster-prometheus",
                "orgId": 1,
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ token }}}"
                },
                "type": "prometheus",
                "url": "https://prometheus-k8s-openshift-monitoring.apps.{{{ cluster.slug }}}.openshiftapps.com",
                "version": 1
            },
            {{%- if cluster.cloudwatch | default(true) %}}
            {
                "orgId": 1,
                "name": "{{{ cluster.name }}}-cloudwatch",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "assumeRoleArn": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/' ~ cluster.name ~ '-cloudwatch-access', 'role_arn') }}}",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/' ~ cluster.name ~ '-cloudwatch-access', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/' ~ cluster.name ~ '-cloudwatch-access', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {{%- endif %}}
            {{%- endwith %}}
            {{%- endfor %}}
            {
                "orgId": 1,
                "name": "AWS app-sre-stage",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/aws-cloudwatch-exporter-app-sre', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/aws-cloudwatch-exporter-app-sre', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {
                "orgId": 1,
                "name": "AWS app-sre-logs",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/appsrep05ue1/app-sre-observability-production/aws-app-sre-logs-grafana', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/appsrep05ue1/app-sre-observability-production/aws-app-sre-logs-grafana', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {
                "name": "dashdotdb-stage-rds",
                "orgId": 1,
                "type": "postgres",
                "database": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/dashdot/dashdotdb-rds', 'db.name')}}}",
                "url": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/dashdot/dashdotdb-rds', 'db.host')}}}:{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/dashdot/dashdotdb-rds', 'db.port')}}}",
                "version": 1,
                "jsonData": {
                    "sslmode": "disable"
                },
                "access": "proxy",
                "editable": false,
                "user": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/dashdot/dashdotdb-rds', 'db.user')}}}",
                "secureJsonData": {
                    "password": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/dashdot/dashdotdb-rds', 'db.password')}}}"
                }
            },
            {
                "name": "dashdotdb-rds",
                "orgId": 1,
                "type": "postgres",
                "database": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/dashdot/dashdotdb-rds', 'db.name')}}}",
                "url": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/dashdot/dashdotdb-rds', 'db.host')}}}:{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/dashdot/dashdotdb-rds', 'db.port')}}}",
                "version": 1,
                "jsonData": {
                    "sslmode": "disable"
                },
                "access": "proxy",
                "editable": false,
                "user": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/dashdot/dashdotdb-rds', 'db.user')}}}",
                "secureJsonData": {
                    "password": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/dashdot/dashdotdb-rds', 'db.password')}}}"
                }
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "osd-observatorium-stage",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://osd-token-refresher-stage",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "hypershift-observatorium-stage",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://hypershift-token-refresher-stage",
                "version": 1
            },
            {
                "name": "telemeter-recent-stage",
                "type": "prometheus",
                "typeLogoUrl": "",
                "access": "proxy",
                "url": "https://infogw-proxy.api.stage.openshift.com/",
                "basicAuth": false,
                "withCredentials": false,
                "jsonData": {
                    "tlsSkipVerify": true,
                    "httpHeaderName1": "Authorization"
                },
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('app-sre/integrations-output/openshift-serviceaccount-tokens/app-sre-stage-01/telemeter-stage/app-sre-stage-01-telemeter-stage-telemeter-prometheus-access', 'token') }}}"
                }
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "poc-loki-stage",
                "orgId": 1,
                "type": "loki",
                "url": "http://grafana-loki-token-refresher-stage",
                "version": 1,
                "jsonData": {
                    "maxLines": 1000
                },
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "app-interface-dev-infinity",
                "orgId": 1,
                "type": "yesoreyeram-infinity-datasource",
                "typeLogoUrl": "public/plugins/yesoreyeram-infinity-datasource/img/icon.svg",
                "url": "https://app-interface.dev.devshift.net",
                "jsonData": {
                    "datasource_mode": "advanced"
                },
            },
        ],
        "deleteDatasources": []
    }
    {{% endb64encode %}}
