apiVersion: v1
data:
  dashdotdb.json: |
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 15,
      "iteration": 1597835631325,
      "links": [],
      "panels": [
        {
          "cacheTimeout": null,
          "datasource": "dashdotdb-rds",
          "gridPos": {
            "h": 7,
            "w": 5,
            "x": 0,
            "y": 0
          },
          "id": 9,
          "links": [],
          "options": {
            "fieldOptions": {
              "calcs": [
                "first"
              ],
              "defaults": {
                "mappings": [],
                "max": 1000,
                "min": 0,
                "nullValueMode": "connected",
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 100
                    }
                  ]
                },
                "unit": "none"
              },
              "overrides": [],
              "values": true
            },
            "orientation": "horizontal",
            "showThresholdLabels": false,
            "showThresholdMarkers": true
          },
          "pluginVersion": "6.6.2",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "WITH last_token as (\n            SELECT token.id\n            FROM token, pod, namespace, cluster\n            WHERE pod.token_id = token.id\n              AND namespace.id = pod.namespace_id\n              AND cluster.name = '$cluster'\n              AND namespace.name = '$namespace'\n              AND cluster.id = namespace.cluster_id\n            ORDER BY token.timestamp DESC\n            LIMIT 1),\nvulnerabilities as (\n        SELECT\n            DISTINCT vulnerability.name as vulnerability,\n                     feature.name as feature,\n                     severity.name as severity\n        FROM cluster,\n             namespace,\n             pod,\n             image,\n             imagefeature,\n             feature,\n             vulnerability,\n             severity,\n             last_token\n        WHERE pod.namespace_id = namespace.id\n          AND namespace.cluster_id = cluster.id\n          AND cluster.id = namespace.cluster_id\n          AND pod.image_id = image.id\n          AND image.id = imagefeature.image_id\n          AND imagefeature.feature_id = feature.id\n          AND feature.id = vulnerability.feature_id\n          AND vulnerability.severity_id = severity.id\n          AND pod.token_id = last_token.id\n          AND cluster.name =  '$cluster'\n          AND namespace.name = '$namespace'\n          AND severity.name = 'Low'\n        GROUP BY feature.name,\n                 vulnerability.name,\n                 severity.name)\nSELECT now() AS time,\n       count(feature) as value,\n       severity as metric\nFROM vulnerabilities\nGROUP BY severity;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Low",
          "type": "gauge"
        },
        {
          "cacheTimeout": null,
          "datasource": "dashdotdb-rds",
          "gridPos": {
            "h": 7,
            "w": 5,
            "x": 5,
            "y": 0
          },
          "id": 10,
          "links": [],
          "options": {
            "fieldOptions": {
              "calcs": [
                "first"
              ],
              "defaults": {
                "mappings": [],
                "max": 1000,
                "min": 0,
                "nullValueMode": "connected",
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 100
                    }
                  ]
                },
                "unit": "none"
              },
              "overrides": [],
              "values": true
            },
            "orientation": "horizontal",
            "showThresholdLabels": false,
            "showThresholdMarkers": true
          },
          "pluginVersion": "6.6.2",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "WITH last_token as (\n            SELECT token.id\n            FROM token, pod, namespace, cluster\n            WHERE pod.token_id = token.id\n              AND namespace.id = pod.namespace_id\n              AND cluster.name = '$cluster'\n              AND namespace.name = '$namespace'\n              AND cluster.id = namespace.cluster_id\n            ORDER BY token.timestamp DESC\n            LIMIT 1),\nvulnerabilities as (\n        SELECT\n            DISTINCT vulnerability.name as vulnerability,\n                     feature.name as feature,\n                     severity.name as severity\n        FROM cluster,\n             namespace,\n             pod,\n             image,\n             imagefeature,\n             feature,\n             vulnerability,\n             severity,\n             last_token\n        WHERE pod.namespace_id = namespace.id\n          AND namespace.cluster_id = cluster.id\n          AND cluster.id = namespace.cluster_id\n          AND pod.image_id = image.id\n          AND image.id = imagefeature.image_id\n          AND imagefeature.feature_id = feature.id\n          AND feature.id = vulnerability.feature_id\n          AND vulnerability.severity_id = severity.id\n          AND pod.token_id = last_token.id\n          AND cluster.name =  '$cluster'\n          AND namespace.name = '$namespace'\n          AND severity.name = 'Medium'\n        GROUP BY feature.name,\n                 vulnerability.name,\n                 severity.name)\nSELECT now() AS time,\n       count(feature) as value,\n       severity as metric\nFROM vulnerabilities\nGROUP BY severity;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Medium",
          "type": "gauge"
        },
        {
          "cacheTimeout": null,
          "datasource": "dashdotdb-rds",
          "gridPos": {
            "h": 7,
            "w": 5,
            "x": 10,
            "y": 0
          },
          "id": 11,
          "links": [],
          "options": {
            "fieldOptions": {
              "calcs": [
                "first"
              ],
              "defaults": {
                "mappings": [],
                "max": 1000,
                "min": 0,
                "nullValueMode": "connected",
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 100
                    }
                  ]
                },
                "unit": "none"
              },
              "overrides": [],
              "values": true
            },
            "orientation": "horizontal",
            "showThresholdLabels": false,
            "showThresholdMarkers": true
          },
          "pluginVersion": "6.6.2",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "WITH last_token as (\n            SELECT token.id\n            FROM token, pod, namespace, cluster\n            WHERE pod.token_id = token.id\n              AND namespace.id = pod.namespace_id\n              AND cluster.name = '$cluster'\n              AND namespace.name = '$namespace'\n              AND cluster.id = namespace.cluster_id\n            ORDER BY token.timestamp DESC\n            LIMIT 1),\nvulnerabilities as (\n        SELECT\n            DISTINCT vulnerability.name as vulnerability,\n                     feature.name as feature,\n                     severity.name as severity\n        FROM cluster,\n             namespace,\n             pod,\n             image,\n             imagefeature,\n             feature,\n             vulnerability,\n             severity,\n             last_token\n        WHERE pod.namespace_id = namespace.id\n          AND namespace.cluster_id = cluster.id\n          AND cluster.id = namespace.cluster_id\n          AND pod.image_id = image.id\n          AND image.id = imagefeature.image_id\n          AND imagefeature.feature_id = feature.id\n          AND feature.id = vulnerability.feature_id\n          AND vulnerability.severity_id = severity.id\n          AND pod.token_id = last_token.id\n          AND cluster.name =  '$cluster'\n          AND namespace.name = '$namespace'\n          AND severity.name = 'High'\n        GROUP BY feature.name,\n                 vulnerability.name,\n                 severity.name)\nSELECT now() AS time,\n       count(feature) as value,\n       severity as metric\nFROM vulnerabilities\nGROUP BY severity;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "High",
          "type": "gauge"
        },
        {
          "cacheTimeout": null,
          "datasource": "dashdotdb-rds",
          "gridPos": {
            "h": 7,
            "w": 5,
            "x": 15,
            "y": 0
          },
          "id": 12,
          "links": [],
          "options": {
            "fieldOptions": {
              "calcs": [
                "first"
              ],
              "defaults": {
                "mappings": [],
                "max": 1000,
                "min": 0,
                "nullValueMode": "connected",
                "thresholds": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 100
                    }
                  ]
                },
                "unit": "none"
              },
              "overrides": [],
              "values": true
            },
            "orientation": "horizontal",
            "showThresholdLabels": false,
            "showThresholdMarkers": true
          },
          "pluginVersion": "6.6.2",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "WITH last_token as (\n            SELECT token.id\n            FROM token, pod, namespace, cluster\n            WHERE pod.token_id = token.id\n              AND namespace.id = pod.namespace_id\n              AND cluster.name = '$cluster'\n              AND namespace.name = '$namespace'\n              AND cluster.id = namespace.cluster_id\n            ORDER BY token.timestamp DESC\n            LIMIT 1),\nvulnerabilities as (\n        SELECT\n            DISTINCT vulnerability.name as vulnerability,\n                     feature.name as feature,\n                     severity.name as severity\n        FROM cluster,\n             namespace,\n             pod,\n             image,\n             imagefeature,\n             feature,\n             vulnerability,\n             severity,\n             last_token\n        WHERE pod.namespace_id = namespace.id\n          AND namespace.cluster_id = cluster.id\n          AND cluster.id = namespace.cluster_id\n          AND pod.image_id = image.id\n          AND image.id = imagefeature.image_id\n          AND imagefeature.feature_id = feature.id\n          AND feature.id = vulnerability.feature_id\n          AND vulnerability.severity_id = severity.id\n          AND pod.token_id = last_token.id\n          AND cluster.name =  '$cluster'\n          AND namespace.name = '$namespace'\n          AND severity.name = 'Critical'\n        GROUP BY feature.name,\n                 vulnerability.name,\n                 severity.name)\nSELECT now() AS time,\n       count(feature) as value,\n       severity as metric\nFROM vulnerabilities\nGROUP BY severity;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Critical",
          "type": "gauge"
        },
        {
          "columns": [],
          "datasource": "dashdotdb-rds",
          "fontSize": "100%",
          "gridPos": {
            "h": 19,
            "w": 20,
            "x": 0,
            "y": 7
          },
          "id": 8,
          "links": [],
          "options": {},
          "pageSize": null,
          "scroll": true,
          "showHeader": true,
          "sort": {
            "col": 5,
            "desc": false
          },
          "styles": [
            {
              "alias": "Time",
              "align": "auto",
              "dateFormat": "YYYY-MM-DD HH:mm:ss",
              "pattern": "Time",
              "type": "date"
            },
            {
              "alias": "",
              "align": "auto",
              "colorMode": null,
              "colors": [
                "rgba(245, 54, 54, 0.9)",
                "rgba(237, 129, 40, 0.89)",
                "rgba(50, 172, 45, 0.97)"
              ],
              "decimals": 2,
              "pattern": "/.*/",
              "thresholds": [],
              "type": "number",
              "unit": "short"
            }
          ],
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "        WITH last_token as (\n            SELECT token.id as id\n            FROM token, pod, namespace, cluster\n            WHERE pod.token_id = token.id\n              AND namespace.id = pod.namespace_id\n              AND cluster.name = '$cluster'\n              AND namespace.name = '$namespace'\n              AND cluster.id = namespace.cluster_id\n            ORDER BY token.timestamp DESC\n            LIMIT 1)\n        SELECT\n            image.name as image,\n            feature.namespacename as tag,\n            SUBSTR(image.manifest, 1, 14) as manifest,\n            COUNT(pod.name) as affected_pods,\n            vulnerability.name as vulnerability,\n            severity.name as severity,\n            feature.name as package,\n            feature.version as current_version,\n            vulnerability.fixedby as fixed_in_version,\n            vulnerability.link as errata\n        FROM cluster,\n             namespace,\n             pod,\n             image,\n             imagefeature,\n             feature,\n             vulnerability,\n             severity,\n             last_token\n        WHERE pod.namespace_id = namespace.id\n          AND namespace.cluster_id = cluster.id\n          AND cluster.id = namespace.cluster_id\n          AND pod.image_id = image.id\n          AND image.id = imagefeature.image_id\n          AND imagefeature.feature_id = feature.id\n          AND feature.id = vulnerability.feature_id\n          AND vulnerability.severity_id = severity.id\n          AND pod.token_id = last_token.id\n          AND cluster.name = '$cluster'\n          AND namespace.name = '$namespace'\n        GROUP BY\n            image.name,\n            feature.namespacename,\n            image.manifest,\n            vulnerability.name,\n            severity.name,\n            feature.name,\n            feature.version,\n            vulnerability.fixedby,\n            vulnerability.link;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "title": "Table",
          "transform": "table",
          "type": "table"
        }
      ],
      "schemaVersion": 22,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "allValue": null,
            "current": {
              "selected": true,
              "text": "app-sre-prod-01",
              "value": "app-sre-prod-01"
            },
            "datasource": "dashdotdb-rds",
            "definition": "select cluster.name from cluster order by cluster.name;",
            "hide": 0,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "cluster",
            "options": [
              {
                "selected": true,
                "text": "app-sre-prod-01",
                "value": "app-sre-prod-01"
              },
              {
                "selected": false,
                "text": "app-sre-prod-03",
                "value": "app-sre-prod-03"
              },
              {
                "selected": false,
                "text": "app-sre-prod-04",
                "value": "app-sre-prod-04"
              },
              {
                "selected": false,
                "text": "app-sre-stage-01",
                "value": "app-sre-stage-01"
              },
              {
                "selected": false,
                "text": "app-sre-stage-02",
                "value": "app-sre-stage-02"
              },
              {
                "selected": false,
                "text": "codereadyi01ue1",
                "value": "codereadyi01ue1"
              },
              {
                "selected": false,
                "text": "crcp01ue1",
                "value": "crcp01ue1"
              },
              {
                "selected": false,
                "text": "crcs01ue1",
                "value": "crcs01ue1"
              },
              {
                "selected": false,
                "text": "hivep01ue1",
                "value": "hivep01ue1"
              },
              {
                "selected": false,
                "text": "hivep02ue1",
                "value": "hivep02ue1"
              },
              {
                "selected": false,
                "text": "hive-stage-01",
                "value": "hive-stage-01"
              },
              {
                "selected": false,
                "text": "quayio-stage",
                "value": "quayio-stage"
              },
              {
                "selected": false,
                "text": "quayp01ue1",
                "value": "quayp01ue1"
              },
              {
                "selected": false,
                "text": "quayp02ue2",
                "value": "quayp02ue2"
              },
              {
                "selected": false,
                "text": "quayp03ue1",
                "value": "quayp03ue1"
              },
              {
                "selected": false,
                "text": "quayp04ue2",
                "value": "quayp04ue2"
              },
              {
                "selected": false,
                "text": "quay-p-ue1",
                "value": "quay-p-ue1"
              },
              {
                "selected": false,
                "text": "quay-p-ue2",
                "value": "quay-p-ue2"
              },
              {
                "selected": false,
                "text": "quays02ue1",
                "value": "quays02ue1"
              },
              {
                "selected": false,
                "text": "quay-s-ue1",
                "value": "quay-s-ue1"
              },
              {
                "selected": false,
                "text": "telemeterp02ue1",
                "value": "telemeterp02ue1"
              },
              {
                "selected": false,
                "text": "telemeter-prod-01",
                "value": "telemeter-prod-01"
              }
            ],
            "query": "select cluster.name from cluster order by cluster.name;",
            "refresh": 0,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {
              "selected": true,
              "text": "app-interface-production",
              "value": "app-interface-production"
            },
            "datasource": "dashdotdb-rds",
            "definition": "select namespace.name from cluster, namespace where cluster.id = namespace.cluster_id and cluster.name = '$cluster' order by namespace.name;",
            "hide": 0,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "namespace",
            "options": [
              {
                "selected": true,
                "text": "app-interface-production",
                "value": "app-interface-production"
              },
              {
                "selected": false,
                "text": "app-sre-observability-per-cluster",
                "value": "app-sre-observability-per-cluster"
              },
              {
                "selected": false,
                "text": "app-sre-observability-production",
                "value": "app-sre-observability-production"
              },
              {
                "selected": false,
                "text": "code-quarkus-production",
                "value": "code-quarkus-production"
              },
              {
                "selected": false,
                "text": "code-quarkus-redhat-production",
                "value": "code-quarkus-redhat-production"
              },
              {
                "selected": false,
                "text": "dashdot",
                "value": "dashdot"
              },
              {
                "selected": false,
                "text": "github-mirror-production",
                "value": "github-mirror-production"
              },
              {
                "selected": false,
                "text": "openshift-cloud-ingress-operator",
                "value": "openshift-cloud-ingress-operator"
              },
              {
                "selected": false,
                "text": "openshift-cluster-version",
                "value": "openshift-cluster-version"
              },
              {
                "selected": false,
                "text": "openshift-customer-monitoring",
                "value": "openshift-customer-monitoring"
              },
              {
                "selected": false,
                "text": "openshift-managed-upgrade-operator",
                "value": "openshift-managed-upgrade-operator"
              },
              {
                "selected": false,
                "text": "openshift-monitoring",
                "value": "openshift-monitoring"
              },
              {
                "selected": false,
                "text": "openshift-rbac-permissions",
                "value": "openshift-rbac-permissions"
              },
              {
                "selected": false,
                "text": "openshift-security",
                "value": "openshift-security"
              },
              {
                "selected": false,
                "text": "openshift-splunk-forwarder-operator",
                "value": "openshift-splunk-forwarder-operator"
              },
              {
                "selected": false,
                "text": "openshift-sre-inventory-in6t0",
                "value": "openshift-sre-inventory-in6t0"
              },
              {
                "selected": false,
                "text": "openshift-validation-webhook",
                "value": "openshift-validation-webhook"
              },
              {
                "selected": false,
                "text": "openshift-velero",
                "value": "openshift-velero"
              },
              {
                "selected": false,
                "text": "sentry-production",
                "value": "sentry-production"
              },
              {
                "selected": false,
                "text": "unleash",
                "value": "unleash"
              },
              {
                "selected": false,
                "text": "vault-prod",
                "value": "vault-prod"
              },
              {
                "selected": false,
                "text": "visual-qontract-prod",
                "value": "visual-qontract-prod"
              }
            ],
            "query": "select namespace.name from cluster, namespace where cluster.id = namespace.cluster_id and cluster.name = '$cluster' order by namespace.name;",
            "refresh": 0,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "Dash.DB",
      "uid": "dashdotdb",
      "version": 1
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: grafana-dashboard-dashdotdb
  labels:
    grafana_dashboard: "true"
  annotations:
    grafana-folder: /grafana-dashboard-definitions/AppSRE
