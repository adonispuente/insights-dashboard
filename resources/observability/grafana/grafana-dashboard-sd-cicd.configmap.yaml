apiVersion: v1
data:
  sd-cicd-database-powered-global-health-dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "description": "A broad summary of the health of all CI/CD jobs managed by the Service Delivery CI/CD team. Only intended for consumption by those with a lot of context about our pipelines and their various purposes.",
      "editable": true,
      "fiscalYearStartMonth": 0,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 179,
      "iteration": 1641411785503,
      "links": [],
      "liveNow": false,
      "panels": [
        {
          "datasource": "sd_cicd_job_result_database",
          "fieldConfig": {
            "defaults": {
              "displayName": "$__cell_0",
              "mappings": [
                {
                  "options": {
                    "": {
                      "text": "empty"
                    }
                  },
                  "type": "value"
                }
              ],
              "max": 1,
              "min": 0,
              "thresholds": {
                "mode": "percentage",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 80
                  },
                  {
                    "color": "green",
                    "value": 90
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 16,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 7,
          "options": {
            "displayMode": "lcd",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "limit": 1000,
              "values": true
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "8.2.7",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "with counts as (\n\tselect\n\t\tjobs.job_name,\n\t\tcount(case when jobs.result='passed' then 1 end) as passed,\n\t\tcount(case when jobs.result='failed' then 1 end) as failed,\n\t\tcount(case when jobs.result='aborted' then 1 end) as aborted\n\tfrom\n\t\tjobs\n\twhere\n\t\t$__timeFilter(jobs.started)\n\t\tand jobs.job_name != ''\n\t\tand jobs.cluster_version like '${Versions:raw}%'\n\tgroup by\n\t\tjobs.job_name\n)\nselect\n\tjob_name,\n\t(passed::float)/(greatest(failed+aborted+passed,1)::float) as pass_rate\nfrom counts\norder by pass_rate desc\n;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Job Overall Pass Rate",
          "type": "bargauge"
        },
        {
          "datasource": "sd_cicd_job_result_database",
          "description": "The percentage of non-skipped tests executed within a given pipeline that passed.",
          "fieldConfig": {
            "defaults": {
              "displayName": "$__cell_0",
              "mappings": [],
              "max": 1,
              "min": 0,
              "thresholds": {
                "mode": "percentage",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 90
                  },
                  {
                    "color": "green",
                    "value": 98
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 4,
          "options": {
            "displayMode": "lcd",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "8.2.7",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "with recent_tests as (\n\tselect\n\t\tjobs.*,\n\t\ttestcases.result as testresult\n\tfrom\n\t\ttestcases\n\t\tjoin jobs on jobs.id = testcases.job_id\n\twhere\n\t\t$__timeFilter(jobs.started)\n\t\tand jobs.job_name != ''\n\t\tand jobs.cluster_version like '${Versions:raw}%'\n),\ncounts as (\n\tselect\n\t\trecent_tests.job_name,\n\t\tcount(case when recent_tests.testresult='failure' then 1 end) as failure,\n\t\tcount(case when recent_tests.testresult='error' then 1 end) as error,\n\t\tcount(case when recent_tests.testresult='passed' then 1 end) as passed,\n\t\tcount(case when recent_tests.testresult='skipped' then 1 end) as skipped\n\tfrom\n\t\trecent_tests\n\tgroup by\n\t\trecent_tests.job_name\n)\nselect\n\tjob_name as name,\n\t(passed::float)/(greatest(failure+error+passed,1)::float) as metric\nfrom counts\norder by metric\n;\n",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Job Testcase Pass Rates",
          "type": "bargauge"
        },
        {
          "datasource": "sd_cicd_job_result_database",
          "description": "This shows the percentage of test cases skipped by each pipeline. A certain amount of skipping is expected, as some tests do not apply to some pipelines. However, pipelines skipping most of their tests deserve investigation.",
          "fieldConfig": {
            "defaults": {
              "displayName": "$__cell_0",
              "mappings": [],
              "max": 1,
              "min": 0,
              "thresholds": {
                "mode": "percentage",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 35
                  },
                  {
                    "color": "red",
                    "value": 50
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8
          },
          "id": 5,
          "options": {
            "displayMode": "lcd",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "8.2.7",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "with recent_tests as (\n\tselect\n\t\tjobs.*,\n\t\ttestcases.result as testresult\n\tfrom\n\t\ttestcases\n\t\tjoin jobs on jobs.id = testcases.job_id\n\twhere\n\t\t$__timeFilter(jobs.started)\n\t\tand jobs.job_name != ''\n\t\tand jobs.cluster_version like '${Versions:raw}%'\n),\ncounts as (\n\tselect\n\t\trecent_tests.job_name,\n\t\tcount(case when recent_tests.testresult='failure' then 1 end) as failure,\n\t\tcount(case when recent_tests.testresult='error' then 1 end) as error,\n\t\tcount(case when recent_tests.testresult='passed' then 1 end) as passed,\n\t\tcount(case when recent_tests.testresult='skipped' then 1 end) as skipped\n\tfrom\n\t\trecent_tests\n\tgroup by\n\t\trecent_tests.job_name\n)\nselect\n\tjob_name as name,\n\t(skipped::float)/(greatest(failure+error+passed+skipped,1)::float) as metric\nfrom counts\norder by metric\n;\n",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Job Testcase Skip Rates",
          "type": "bargauge"
        },
        {
          "datasource": "sd_cicd_job_result_database",
          "description": "The percentage of jobs with a given install version that passed.",
          "fieldConfig": {
            "defaults": {
              "displayName": "$__cell_0",
              "mappings": [],
              "max": 1,
              "min": 0,
              "thresholds": {
                "mode": "percentage",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 80
                  },
                  {
                    "color": "green",
                    "value": 95
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 16
          },
          "id": 14,
          "options": {
            "displayMode": "lcd",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "8.2.7",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "with counts as (\n\tselect\n\t\tjobs.cluster_version,\n\t\tcount(case when jobs.result='passed' then 1 end) as passed,\n\t\tcount(case when jobs.result='failed' then 1 end) as failed,\n\t\tcount(case when jobs.result='aborted' then 1 end) as aborted\n\tfrom\n\t\tjobs\n\twhere\n\t\t$__timeFilter(jobs.started)\n\t\tand jobs.job_name != ''\n\t\tand jobs.cluster_version like '${Versions:raw}%'\n\tgroup by\n\t\tjobs.cluster_version\n)\nselect\n\tcluster_version,\n\t(passed::float)/(greatest(failed+aborted+passed,1)::float) as pass_rate\nfrom counts\norder by pass_rate asc\n;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Install Version Pass Rate (by Job)",
          "type": "bargauge"
        },
        {
          "datasource": "sd_cicd_job_result_database",
          "description": "The percentage of clusters that failed to get a cluster ID.",
          "fieldConfig": {
            "defaults": {
              "displayName": "$__cell_0",
              "mappings": [],
              "max": 1,
              "min": 0,
              "thresholds": {
                "mode": "percentage",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 5
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 2,
            "w": 12,
            "x": 12,
            "y": 16
          },
          "id": 9,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "vertical",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.2.7",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "select\n\tfailures.environment,\n\tfailures.count::float / total.count::float as rate\nfrom\n(\n\tselect\n\t\tenvironment,\n\t\tcount(*)\n\tfrom\n\t\tjobs\n\twhere\n\t\t$__timeFilter(jobs.started)\n\t\tand jobs.cluster_id like ''\n\t\tand jobs.job_name != ''\n\t\tand jobs.cluster_version like '${Versions:raw}%'\n\tgroup by\n\t\tenvironment\n) as failures\njoin (\n\tselect\n\t\tenvironment,\n\t\tcount(*)\n\tfrom\n\t\tjobs\n\twhere\n\t\t$__timeFilter(jobs.started)\n\tgroup by\n\t\tenvironment\n) as total\non failures.environment = total.environment\n;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Cluster Provisioning Failure By Environment",
          "type": "stat"
        },
        {
          "datasource": "sd_cicd_job_result_database",
          "description": "Testcases that fail more than once in the given time window, along with the number of times they failed.",
          "fieldConfig": {
            "defaults": {
              "displayName": "$__cell_0",
              "mappings": [],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 5
                  },
                  {
                    "color": "red",
                    "value": 10
                  }
                ]
              },
              "unit": "failures"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 18
          },
          "id": 12,
          "options": {
            "displayMode": "basic",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "8.2.7",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "with recent_tests as (\n    select \n        jobs.*,\n        regexp_replace(name, '\\[(install|upgrade)\\] (.*)', '\\2') as name,\n        testcases.result as testresult\n    from jobs\n        join testcases\n        on jobs.id = testcases.job_id\n    where\n        -- filter kinds of test we do not care about\n        testcases.name !~ '.*\\[Suite: (informing|addons|conformance)\\].*'\n        -- ensure this test does belong to a suite\n        and testcases.name ~ '.*\\[Suite:.*'\n        and testcases.name !~ '.*sig-.*'\n        and $__timeFilter(jobs.started)\n        -- filter out osde2e's own CI jobs\n        and jobs.job_id != '-1'\n        and jobs.cluster_version like '${Versions:raw}%'\n), counts as (\n        -- synthesize a table with the name of a test and columns counting how often it has resulted\n        -- in each result type\n        select\n            name,\n            count(CASE WHEN recent_tests.testresult='failure' THEN 1 END) as failure,\n            count(CASE WHEN recent_tests.testresult='error' THEN 1 END) as error\n        from recent_tests\n        group by name\n)\nselect \n    counts.name,\n    (counts.error + counts.failure) as problems\nfrom\n    counts\nwhere counts.error + counts.failure > 1\norder by problems desc\n;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Problematic Test Failures",
          "type": "bargauge"
        },
        {
          "datasource": "sd_cicd_job_result_database",
          "description": "The percentage of testcases with a given install version that passed.",
          "fieldConfig": {
            "defaults": {
              "displayName": "$__cell_0",
              "mappings": [],
              "max": 1,
              "min": 0,
              "thresholds": {
                "mode": "percentage",
                "steps": [
                  {
                    "color": "red",
                    "value": null
                  },
                  {
                    "color": "yellow",
                    "value": 80
                  },
                  {
                    "color": "green",
                    "value": 95
                  }
                ]
              },
              "unit": "percentunit"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 24
          },
          "id": 15,
          "options": {
            "displayMode": "lcd",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "8.2.7",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "with recent_tests as (\n\tselect\n\t\tjobs.*,\n\t\ttestcases.result as testresult\n\tfrom\n\t\ttestcases\n\t\tjoin jobs on jobs.id = testcases.job_id\n\twhere\n\t\t$__timeFilter(jobs.started)\n\t\tand jobs.job_name != ''\n\t\tand jobs.cluster_version like '${Versions:raw}%'\n),\ncounts as (\n\tselect\n\t\trecent_tests.cluster_version,\n\t\tcount(case when recent_tests.testresult='failure' then 1 end) as failure,\n\t\tcount(case when recent_tests.testresult='error' then 1 end) as error,\n\t\tcount(case when recent_tests.testresult='passed' then 1 end) as passed,\n\t\tcount(case when recent_tests.testresult='skipped' then 1 end) as skipped\n\tfrom\n\t\trecent_tests\n\tgroup by\n\t\trecent_tests.cluster_version\n)\nselect\n\tcluster_version,\n\t(passed::float)/(greatest(failure+error+passed,1)::float) as pass_rate\nfrom counts\norder by pass_rate\n;\n",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Install Version Pass Rate (by Testcase)",
          "type": "bargauge"
        },
        {
          "datasource": "sd_cicd_job_result_database",
          "description": "The number of times each job has failed to report testcase results (excluding jobs that failed to provision a cluster).",
          "fieldConfig": {
            "defaults": {
              "displayName": "$__cell_0",
              "mappings": [],
              "min": 0,
              "noValue": "0",
              "thresholds": {
                "mode": "percentage",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "green",
                    "value": 0
                  },
                  {
                    "color": "red",
                    "value": 1
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 26
          },
          "id": 10,
          "options": {
            "displayMode": "lcd",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": true
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "8.2.7",
          "targets": [
            {
              "format": "table",
              "group": [],
              "metricColumn": "none",
              "rawQuery": true,
              "rawSql": "\nselect\n\tjob_name,\n\tcount(*)\nfrom\n\tjobs\n\tleft join testcases\n\ton testcases.job_id = jobs.id\nwhere\n\t$__timeFilter(jobs.started)\n\tand testcases.id IS NULL\n\tand cluster_id IS NOT NULL and cluster_id not like ''\n\tand jobs.job_name != ''\n\tand jobs.cluster_version like '${Versions:raw}%'\ngroup by job_name\norder by count desc\n;",
              "refId": "A",
              "select": [
                [
                  {
                    "params": [
                      "value"
                    ],
                    "type": "column"
                  }
                ]
              ],
              "timeColumn": "time",
              "where": [
                {
                  "name": "$__timeFilter",
                  "params": [],
                  "type": "macro"
                }
              ]
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Jobs Failing to Post Results",
          "type": "bargauge"
        }
      ],
      "schemaVersion": 32,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "allValue": "%",
            "current": {
              "selected": true,
              "text": "openshift-v4.9",
              "value": "openshift-v4.9"
            },
            "datasource": "sd_cicd_job_result_database",
            "definition": "select\n  distinct concat(split_part(openshift.cluster_version, '.', 1), '.', split_part(openshift.cluster_version, '.', 2)) as versions\nfrom\n( select distinct jobs.cluster_version\n from jobs\n where jobs.job_name != ''\n and  $__timeFilter(jobs.started)) as openshift\n order by versions asc ",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": null,
            "multi": false,
            "name": "Versions",
            "options": [],
            "query": "select\n  distinct concat(split_part(openshift.cluster_version, '.', 1), '.', split_part(openshift.cluster_version, '.', 2)) as versions\nfrom\n( select distinct jobs.cluster_version\n from jobs\n where jobs.job_name != ''\n and  $__timeFilter(jobs.started)) as openshift\n order by versions asc ",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "type": "query"
          }
        ]
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "SD CI/CD Global Health Dashboard",
      "uid": "JqU_Pzz7z",
      "version": 7
    }
  sd-cicd-addon-weather-report.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 164,
      "iteration": 1617045203242,
      "links": [],
      "panels": [
        {
          "datasource": "app-sre-prod-01-prometheus",
          "description": "Passing tests divided by the number of non-skipped tests.",
          "fieldConfig": {
            "defaults": {
              "custom": {},
              "links": [
                {
                  "targetBlank": true,
                  "title": "${__field.labels.job} Prow History",
                  "url": "https://prow.ci.openshift.org/job-history/gs/origin-ci-test/logs/${__field.labels.job}"
                }
              ],
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 2,
          "options": {
            "displayMode": "gradient",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true
          },
          "pluginVersion": "7.2.1",
          "targets": [
            {
              "expr": "1 - (\n  sum by (job) (\n    count_over_time(\n      cicd_jUnitResult{job=~\".*-addon-[[addon]].*\", result=\"failed\"}[$__range]\n    )\n  ) / (\n    sum by (job) (\n      count_over_time(\n        cicd_jUnitResult{job=~\".*-addon-[[addon]].*\", result=~\"(failed|passed)\"}[$__range]\n      )\n    )\n  )\n)",
              "instant": true,
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Addon Test Success Rate",
          "type": "bargauge"
        },
        {
          "datasource": "app-sre-prod-01-prometheus",
          "fieldConfig": {
            "defaults": {
              "custom": {
                "align": null,
                "filterable": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 4,
          "options": {
            "displayMode": "gradient",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "max"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true
          },
          "pluginVersion": "7.2.1",
          "targets": [
            {
              "expr": "count by (testname) (cicd_jUnitResult{job=~\".*-addon-$addon.*\", result=\"failed\"})",
              "instant": false,
              "interval": "",
              "legendFormat": "{{testname}}",
              "refId": "A"
            }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Failures by test case",
          "type": "bargauge"
        }
      ],
      "refresh": false,
      "schemaVersion": 26,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "current": {
              "selected": false,
              "text": ".*",
              "value": ".*"
            },
            "hide": 0,
            "label": null,
            "name": "addon",
            "options": [
              {
                "selected": true,
                "text": ".*",
                "value": ".*"
              }
            ],
            "query": ".*",
            "skipUrlSync": false,
            "type": "textbox"
          }
        ]
      },
      "time": {
        "from": "now-24h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Addon CI/CD Health",
      "uid": "bgP2lxQGk",
      "version": 12
    }
  sd-cicd-weather-report.json: |-
    {
      "annotations": {
          "list": [
          {
              "builtIn": 1,
              "datasource": "-- Grafana --",
              "enable": true,
              "hide": true,
              "iconColor": "rgba(0, 211, 255, 1)",
              "name": "Annotations & Alerts",
              "type": "dashboard"
          }
          ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 133,
      "links": [],
      "panels": [
          {
          "datasource": "app-sre-prod-01-prometheus",
          "fieldConfig": {
              "defaults": {
              "custom": {
                  "align": null,
                  "filterable": false
              },
              "links": [
                  {
                  "targetBlank": true,
                  "title": "${__field.labels.job} Prow History",
                  "url": "https://prow.ci.openshift.org/job-history/gs/origin-ci-test/logs/${__field.labels.job}"
                  }
              ],
              "mappings": [],
              "noValue": "0.0",
              "thresholds": {
                  "mode": "percentage",
                  "steps": [
                  {
                      "color": "red",
                      "value": null
                  },
                  {
                      "color": "yellow",
                      "value": 90
                  },
                  {
                      "color": "green",
                      "value": 98
                  }
                  ]
              },
              "unit": "percentunit"
              },
              "overrides": [
              {
                  "matcher": {
                  "id": "byName",
                  "options": "osde2e-int-aws-e2e-osd-default-nightly"
                  },
                  "properties": []
              }
              ]
          },
          "gridPos": {
              "h": 29,
              "w": 12,
              "x": 0,
              "y": 0
          },
          "id": 2,
          "interval": "14400",
          "options": {
              "displayMode": "lcd",
              "orientation": "horizontal",
              "reduceOptions": {
              "calcs": [
                  "mean"
              ],
              "fields": "",
              "values": false
              },
              "showUnfilled": true
          },
          "pluginVersion": "7.2.1",
          "targets": [
              {
              "expr": "1 - (sum by (job) (count_over_time(cicd_jUnitResult{job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"failed\"}[12h:4h]) or vector(0)) / on(job) group_right sum by (job) (count_over_time(cicd_jUnitResult{job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"passed|failed\"}[12h:4h]))) or (sum by (job) (count_over_time(cicd_jUnitResult{job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"passed\"}[12h:4h]) or vector(0)) / on(job) group_right sum by (job) (count_over_time(cicd_jUnitResult{job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"passed|failed\"}[12h:4h])))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{job}}",
              "refId": "A"
              }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Job Pass Rates",
          "transformations": [],
          "type": "bargauge"
          },
          {
          "datasource": "app-sre-prod-01-prometheus",
          "fieldConfig": {
              "defaults": {
              "custom": {
                  "align": null,
                  "filterable": false
              },
              "links": [
                  {
                  "targetBlank": true,
                  "title": "Search for failures using ${__field.labels.install_version} ",
                  "url": "https://search.ci.openshift.org/?search=CLUSTER_VERSION+set+to+${__field.labels.install_version}&maxAge=48h&context=1&type=build-log&name=osde2e.*&maxMatches=5&maxBytes=20971520&groupBy=job"
                  }
              ],
              "mappings": [],
              "noValue": "0.0",
              "thresholds": {
                  "mode": "percentage",
                  "steps": [
                  {
                      "color": "red",
                      "value": null
                  },
                  {
                      "color": "yellow",
                      "value": 90
                  },
                  {
                      "color": "green",
                      "value": 98
                  }
                  ]
              },
              "unit": "percentunit"
              },
              "overrides": [
              {
                  "matcher": {
                  "id": "byName",
                  "options": "osde2e-int-aws-e2e-osd-default-nightly"
                  },
                  "properties": []
              }
              ]
          },
          "gridPos": {
              "h": 29,
              "w": 12,
              "x": 12,
              "y": 0
          },
          "id": 5,
          "interval": "14400",
          "options": {
              "displayMode": "lcd",
              "orientation": "horizontal",
              "reduceOptions": {
              "calcs": [
                  "mean"
              ],
              "fields": "",
              "values": false
              },
              "showUnfilled": true
          },
          "pluginVersion": "7.2.1",
          "targets": [
              {
              "expr": "1 - (sum by (install_version) (count_over_time(cicd_jUnitResult{phase=\"install\", job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"failed\"}[12h:4h]) or vector(0)) / on(install_version) group_right sum by (install_version) (count_over_time(cicd_jUnitResult{phase=\"install\", job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"passed|failed\"}[12h:4h]))) or (sum by (install_version) (count_over_time(cicd_jUnitResult{phase=\"install\", job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"passed\"}[12h:4h]) or vector(0)) / on(install_version) group_right sum by (install_version) (count_over_time(cicd_jUnitResult{phase=\"install\", job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"passed|failed\"}[12h:4h])))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{job}}",
              "refId": "A"
              }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Install Version Pass Rates",
          "transformations": [],
          "type": "bargauge"
          },
          {
          "datasource": "app-sre-prod-01-prometheus",
          "fieldConfig": {
              "defaults": {
              "custom": {
                  "align": null,
                  "filterable": false
              },
              "mappings": [],
              "thresholds": {
                  "mode": "absolute",
                  "steps": [
                  {
                      "color": "green",
                      "value": null
                  },
                  {
                      "color": "#EAB839",
                      "value": 5
                  },
                  {
                      "color": "red",
                      "value": 10
                  }
                  ]
              }
              },
              "overrides": []
          },
          "gridPos": {
              "h": 29,
              "w": 12,
              "x": 0,
              "y": 29
          },
          "id": 4,
          "options": {
              "displayMode": "gradient",
              "orientation": "horizontal",
              "reduceOptions": {
              "calcs": [
                  "max"
              ],
              "fields": "",
              "values": false
              },
              "showUnfilled": true
          },
          "pluginVersion": "7.2.1",
          "targets": [
              {
              "expr": "count by (testname) (cicd_jUnitResult{job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result=\"failed\"})",
              "format": "time_series",
              "interval": "",
              "legendFormat": "{{testname}}",
              "refId": "A"
              }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Aggregate failures by JUnitResult",
          "type": "bargauge"
          },
          {
          "datasource": "app-sre-prod-01-prometheus",
          "fieldConfig": {
              "defaults": {
              "custom": {
                  "align": null,
                  "filterable": false
              },
              "links": [
                  {
                  "targetBlank": true,
                  "title": "${__field.labels.install_version} to ${__field.labels.upgrade_version} Failures",
                  "url": "https://search.ci.openshift.org/?search=Selecting+version+%27${__field.labels.install_version}%27+to+be+able+to+upgrade+to+%27${__field.labels.upgrade_version}%27&maxAge=48h&context=1&type=build-log&name=osde2e.*&maxMatches=5&maxBytes=20971520&groupBy=job"
                  }
              ],
              "mappings": [],
              "noValue": "0.0",
              "thresholds": {
                  "mode": "percentage",
                  "steps": [
                  {
                      "color": "red",
                      "value": null
                  },
                  {
                      "color": "yellow",
                      "value": 90
                  },
                  {
                      "color": "green",
                      "value": 98
                  }
                  ]
              },
              "unit": "percentunit"
              },
              "overrides": [
              {
                  "matcher": {
                  "id": "byName",
                  "options": "osde2e-int-aws-e2e-osd-default-nightly"
                  },
                  "properties": []
              }
              ]
          },
          "gridPos": {
              "h": 29,
              "w": 12,
              "x": 12,
              "y": 29
          },
          "id": 6,
          "interval": "14400",
          "options": {
              "displayMode": "lcd",
              "orientation": "horizontal",
              "reduceOptions": {
              "calcs": [
                  "mean"
              ],
              "fields": "",
              "values": false
              },
              "showUnfilled": true
          },
          "pluginVersion": "7.2.1",
          "targets": [
              {
              "expr": "1 - (sum by (upgrade_version, install_version) (count_over_time(cicd_jUnitResult{phase=\"upgrade\", job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"failed\"}[12h:4h]) or vector(0)) / on(upgrade_version, install_version) group_right sum by (upgrade_version, install_version) (count_over_time(cicd_jUnitResult{phase=\"upgrade\", job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"passed|failed\"}[12h:4h]))) or (sum by (upgrade_version, install_version) (count_over_time(cicd_jUnitResult{phase=\"upgrade\", job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"passed\"}[12h:4h]) or vector(0)) / on(upgrade_version, install_version) group_right sum by (upgrade_version, install_version) (count_over_time(cicd_jUnitResult{phase=\"upgrade\", job=~\".*-e2e-.*\", testname !~ \".*Log Metrics.*\", result =~ \"passed|failed\"}[12h:4h])))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{install_version}} to {{upgrade_version}}",
              "refId": "A"
              }
          ],
          "timeFrom": null,
          "timeShift": null,
          "title": "Upgrade Version Pass Rates",
          "transformations": [],
          "type": "bargauge"
          }
      ],
      "refresh": false,
      "schemaVersion": 26,
      "style": "dark",
      "tags": [],
      "templating": {
          "list": []
      },
      "time": {
          "from": "now-24h",
          "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "SD-CICD Weather Report",
      "uid": "sd-cicd-weather",
      "version": 4
    }
kind: ConfigMap
metadata:
  name: grafana-dashboard-sd-cicd
  labels:
    grafana_dashboard: "true"
  annotations:
    grafana-folder: /grafana-dashboard-definitions/SD-CICD
