apiVersion: v1
kind: Secret
metadata:
  name: grafana-config
  annotations:
    qontract.recycle: "true"
data:
  grafana.ini:
    {{% b64encode %}}
    [auth]
    disable_login_form = true
    disable_signout_menu = true
    [auth.basic]
    enabled = false
    [auth.proxy]
    auto_sign_up = true
    enabled = true
    header_name = X-Forwarded-User
    [paths]
    data = /var/lib/grafana
    logs = /var/lib/grafana/logs
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    http_addr = 0.0.0.0
    http_port = 3001
    [users]
    viewers_can_edit = true
    auto_assign_org_role = {{{auto_assign_org_role}}}
    [metrics]
    enabled = true
    [alerting]
    enabled = false
    [dataproxy]
    timeout = 60
    [security]
    admin_user = {{{ vault('app-interface/app-sre/{{ resource.namespace.name }}/grafana/grafana-admin-user', 'user', 1) }}}
    admin_password = {{{ vault('app-interface/app-sre/{{ resource.namespace.name }}/grafana/grafana-admin-user', 'password', 1) }}}
    [database]
    type = postgres
    host = {{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/grafana-db', 'db.host') }}}:{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/grafana-db', 'db.port') }}}
    name = {{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/grafana-db', 'db.name') }}}
    user = {{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/grafana-db', 'db.user') }}}
    password = {{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/grafana-db', 'db.password') }}}
    {{% endb64encode %}}
