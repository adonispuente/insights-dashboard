---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-datasources
  annotations:
    qontract.recycle: "true"
    qontract.ignore_reconcile_time: "true"
data:
  datasources.yaml:
    {{% b64encode %}}
    {
        "apiVersion": 1,
        "datasources": [
            {{%- for cluster in clusters %}}
            {{%- if current_cluster.update({'name': cluster.name}) %}}{{%- endif %}}
            {
                "access": "proxy",
                "editable": false,
                "jsonData": {
                    "tlsSkipVerify": {{{ cluster.private }}},
                    "httpHeaderName1": "Authorization"
                },
                "name": "{{{ cluster.name }}}-prometheus",
                "orgId": 1,
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('app-sre/creds/kube-configs/{{ current_cluster.name }}', 'token') }}}"
                },
                "type": "prometheus",
                "url": "https://prometheus.{{{ cluster.name }}}.devshift.net",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "jsonData": {
                    "httpHeaderName1": "Authorization"
                },
                "name": "{{{ cluster.name }}}-cluster-prometheus",
                "orgId": 1,
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('app-sre/creds/kube-configs/{{ current_cluster.name }}', 'token') }}}"
                },
                "type": "prometheus",
                "url": "https://prometheus-k8s-openshift-monitoring.apps.{{{ cluster.slug }}}.openshiftapps.com",
                "version": 1
            },
            {
                "orgId": 1,
                "name": "{{{ cluster.name }}}-cloudwatch",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "assumeRoleArn": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/{{ current_cluster.name }}-cloudwatch-access', 'role_arn') }}}",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/{{ current_cluster.name }}-cloudwatch-access', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/{{ current_cluster.name }}-cloudwatch-access', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {{%- endfor %}}
            {
                "access": "proxy",
                "editable": false,
                "jsonData": {
                    "httpHeaderName1": "Authorization"
                },
                "name": "c-rh-c-eph-prometheus",
                "orgId": 1,
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('insights/creds/kube-configs/c-rh-c-eph', 'token', 2) }}}"
                },
                "type": "prometheus",
                "url": "https://prometheus.c-rh-c-eph.devshift.net",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "jsonData": {
                    "httpHeaderName1": "Authorization"
                },
                "name": "c-rh-c-eph-cluster-prometheus",
                "orgId": 1,
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('insights/creds/kube-configs/c-rh-c-eph', 'token', 2) }}}"
                },
                "type": "prometheus",
                "url": "https://prometheus-k8s-openshift-monitoring.apps.c-rh-c-eph.8p0c.p1.openshiftapps.com",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "jsonData": {
                    "httpHeaderName1": "Authorization"
                },
                "name": "rhobs-testing-prometheus",
                "orgId": 1,
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('rhobs/testing/creds/grafana', 'token', 2) }}}"
                },
                "type": "prometheus",
                "url": "https://prometheus.rhobs-testing.devshift.net",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "jsonData": {
                    "httpHeaderName1": "Authorization"
                },
                "name": "rhobs-testing-cluster-prometheus",
                "orgId": 1,
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('rhobs/testing/creds/grafana-cluster-prometheus', 'token', 3) }}}"
                },
                "type": "prometheus",
                "url": "https://prometheus-k8s-openshift-monitoring.apps.rhobs-testing.qqzf.p1.openshiftapps.com",
                "version": 1
            },
            {
                "orgId": 1,
                "name": "AWS app-sre",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-cloudwatch-exporter-app-sre', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-cloudwatch-exporter-app-sre', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {
                "orgId": 1,
                "name": "AWS app-sre-logs",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-app-sre-logs-grafana', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-app-sre-logs-grafana', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {
                "orgId": 1,
                "name": "AWS osio",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-cloudwatch-exporter-osio', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-cloudwatch-exporter-osio', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {
                "orgId": 1,
                "name": "AWS quayio-stage",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/aws-cloudwatch-exporter-quay', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/aws-cloudwatch-exporter-quay', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {
                "orgId": 1,
                "name": "AWS quayio-prod",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-cloudwatch-exporter-quay', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-cloudwatch-exporter-quay', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {
                "orgId": 1,
                "name": "AWS ocm-quay",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-cloudwatch-exporter-ocm-quay', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-cloudwatch-exporter-ocm-quay', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {
                "orgId": 1,
                "name": "AWS insights-stage",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/aws-cloudwatch-exporter-crc', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/app-sre-observability-stage/aws-cloudwatch-exporter-crc', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {
                "orgId": 1,
                "name": "AWS insights-prod",
                "type": "cloudwatch",
                "typeLogoUrl": "public/app/plugins/datasource/cloudwatch/img/amazon-web-services.png",
                "access": "proxy",
                "basicAuth": false,
                "isDefault": false,
                "jsonData": {
                    "authType": "keys",
                    "defaultRegion": "us-east-1",
                    "timeField": "@timestamp"
                },
                "secureJsonData": {
                    "accessKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-cloudwatch-exporter-crc', 'aws_access_key_id') }}}",
                    "secretKey": "{{{ vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/app-sre-observability-production/aws-cloudwatch-exporter-crc', 'aws_secret_access_key') }}}"
                },
                "readOnly": false
            },
            {
                "name": "elasticsearch-monitoring",
                "type": "elasticsearch",
                "url": "https://77be01c52f3649b1820041058e10d538.us-east-1.aws.found.io:9243",
                "access": "proxy",
                "basicAuth": true,
                "basicAuthUser": "grafana",
                "editable": false,
                "database": ".monitoring-es*",
                "jsonData": {
                    "timeField": "timestamp",
                    "esVersion": 70
                },
                "secureJsonData": {
                    "basicAuthPassword": "{{{ vault('app-interface/app-sre/app-sre-observability-production/grafana/datasources', 'elasticsearch-production', 40) }}}"
                },
                "isDefault": false
            },
            {
                "name": "elasticsearch-logstash",
                "type": "elasticsearch",
                "url": "https://77be01c52f3649b1820041058e10d538.us-east-1.aws.found.io:9243",
                "access": "proxy",
                "basicAuth": true,
                "basicAuthUser": "grafana",
                "editable": false,
                "database": ".monitoring-logstash*",
                "jsonData": {
                    "timeField": "timestamp",
                    "esVersion": 70
                },
                "secureJsonData": {
                    "basicAuthPassword": "{{{ vault('app-interface/app-sre/app-sre-observability-production/grafana/datasources', 'elasticsearch-production', 40) }}}"
                },
                "isDefault": false
            },
            {
                "name": "deploy-events-db",
                "orgId": 1,
                "type": "postgres",
                "database": "{{{vault('app-sre/integrations-output/terraform-resources/appsrep05ue1/app-sre-pipeline-utils/deploy-events-db', 'db.name')}}}",
                "url": "{{{vault('app-sre/integrations-output/terraform-resources/appsrep05ue1/app-sre-pipeline-utils/deploy-events-db', 'db.host')}}}:{{{vault('app-sre/integrations-output/terraform-resources/appsrep05ue1/app-sre-pipeline-utils/deploy-events-db', 'db.port')}}}",
                "version": 1,
                "jsonData": {
                    "sslmode": "disable"
                },
                "access": "proxy",
                "editable": false,
                "user": "{{{vault('app-sre/integrations-output/terraform-resources/appsrep05ue1/app-sre-pipeline-utils/deploy-events-db', 'db.user')}}}",
                "secureJsonData": {
                    "password": "{{{vault('app-sre/integrations-output/terraform-resources/appsrep05ue1/app-sre-pipeline-utils/deploy-events-db', 'db.password')}}}"
                }
            },
            {
                "name": "dashdotdb-stage-rds",
                "orgId": 1,
                "type": "postgres",
                "database": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/dashdot/dashdotdb-stage-replica-rds', 'db.name')}}}",
                "url": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/dashdot/dashdotdb-stage-replica-rds', 'db.host')}}}:{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/dashdot/dashdotdb-rds', 'db.port')}}}",
                "version": 1,
                "jsonData": {
                    "sslmode": "disable"
                },
                "access": "proxy",
                "editable": false,
                "user": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/dashdot/dashdotdb-stage-replica-rds', 'db.user')}}}",
                "secureJsonData": {
                    "password": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/dashdot/dashdotdb-stage-replica-rds', 'db.password')}}}"
                }
            },
            {
                "name": "dashdotdb-rds",
                "orgId": 1,
                "type": "postgres",
                "database": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/dashdot/dashdotdb-rds', 'db.name')}}}",
                "url": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/dashdot/dashdotdb-rds', 'db.host')}}}:{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/dashdot/dashdotdb-rds', 'db.port')}}}",
                "version": 1,
                "jsonData": {
                    "sslmode": "disable"
                },
                "access": "proxy",
                "editable": false,
                "user": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/dashdot/dashdotdb-rds', 'db.user')}}}",
                "secureJsonData": {
                    "password": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-01/dashdot/dashdotdb-rds', 'db.password')}}}"
                }
            },
            {
                "name": "assisted-installer-integration-rds",
                "orgId": 1,
                "type": "postgres",
                "database": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/assisted-installer-integration/assisted-installer-rds', 'db.name')}}}",
                "url": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/assisted-installer-integration/assisted-installer-rds', 'db.host')}}}:{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/assisted-installer-integration/assisted-installer-rds', 'db.port')}}}",
                "version": 1,
                "jsonData": {
                    "sslmode": "disable"
                },
                "access": "proxy",
                "editable": false,
                "user": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/assisted-installer-integration/assisted-installer-rds', 'db.user')}}}",
                "secureJsonData": {
                    "password": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/assisted-installer-integration/assisted-installer-rds', 'db.password')}}}"
                }
            },
            {
                "name": "assisted-installer-stage-rds",
                "orgId": 1,
                "type": "postgres",
                "database": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/assisted-installer-stage/assisted-installer-rds', 'db.name')}}}",
                "url": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/assisted-installer-stage/assisted-installer-rds', 'db.host')}}}:{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/assisted-installer-stage/assisted-installer-rds', 'db.port')}}}",
                "version": 1,
                "jsonData": {
                    "sslmode": "disable"
                },
                "access": "proxy",
                "editable": false,
                "user": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/assisted-installer-stage/assisted-installer-rds', 'db.user')}}}",
                "secureJsonData": {
                    "password": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-stage-01/assisted-installer-stage/assisted-installer-rds', 'db.password')}}}"
                }
            },
            {
                "name": "assisted-installer-production-rds",
                "orgId": 1,
                "type": "postgres",
                "database": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-04/assisted-installer-production/assisted-installer-replica-01-rds', 'db.name')}}}",
                "url": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-04/assisted-installer-production/assisted-installer-replica-01-rds', 'db.host')}}}:{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-04/assisted-installer-production/assisted-installer-replica-01-rds', 'db.port')}}}",
                "version": 1,
                "jsonData": {
                    "sslmode": "disable"
                },
                "access": "proxy",
                "editable": false,
                "user": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-04/assisted-installer-production/assisted-installer-replica-01-rds', 'db.user')}}}",
                "secureJsonData": {
                    "password": "{{{vault('app-sre/integrations-output/terraform-resources/app-sre-prod-04/assisted-installer-production/assisted-installer-replica-01-rds', 'db.password')}}}"
                }
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "osd-observatorium-stage",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://osd-token-refresher.app-sre-observability-stage.svc.cluster.local",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "osd-observatorium-production",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://osd-token-refresher.app-sre-observability-production.svc.cluster.local",
                "version": 1,
                "timeout": "120"
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "mk-observatorium-stage",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://mk-token-refresher.app-sre-observability-stage.svc.cluster.local",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "rhoc-observatorium-stage",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://rhoc-token-refresher.app-sre-observability-stage.svc.cluster.local",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "rhoc-observatorium-production",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://rhoc-token-refresher.app-sre-observability-production.svc.cluster.local",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "mk-observatorium-production",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://mk-token-refresher.app-sre-observability-production.svc.cluster.local",
                "version": 1
            },
            {
                "name": "sd_cicd_job_result_database",
                "orgId": 1,
                "type": "postgres",
                "database": "{{{vault('osde2e/cicd_job_result_database','db.name')}}}",
                "url": "{{{vault('osde2e/cicd_job_result_database', 'db.host')}}}:{{{vault('osde2e/cicd_job_result_database', 'db.port')}}}",
                "version": 1,
                "jsonData": {
                    "sslmode": "require"
                },
                "access": "proxy",
                "editable": false,
                "user": "{{{vault('osde2e/cicd_job_result_database', 'db.user')}}}",
                "secureJsonData": {
                    "password": "{{{vault('osde2e/cicd_job_result_database', 'db.password')}}}"
                }
            },
            {
                "name": "telemeter-recent-production",
                "type": "prometheus",
                "typeLogoUrl": "",
                "access": "proxy",
                "url": "https://infogw-proxy.api.openshift.com/",
                "basicAuth": false,
                "isDefault": true,
                "withCredentials": false,
                "jsonData": {
                    "tlsSkipVerify": true,
                    "httpHeaderName1": "Authorization"
                },
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('app-sre/integrations-output/openshift-serviceaccount-tokens/telemeter-prod-01/telemeter-production/telemeter-prod-01-telemeter-production-telemeter-prometheus-access', 'token') }}}"
                }
            },
            {
                "name": "telemeter-recent-stage",
                "type": "prometheus",
                "typeLogoUrl": "",
                "access": "proxy",
                "url": "https://infogw-proxy.api.stage.openshift.com/",
                "basicAuth": false,
                "withCredentials": false,
                "jsonData": {
                    "tlsSkipVerify": true,
                    "httpHeaderName1": "Authorization"
                },
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('app-sre/integrations-output/openshift-serviceaccount-tokens/app-sre-stage-01/telemeter-stage/app-sre-stage-01-telemeter-stage-telemeter-prometheus-access', 'token') }}}"
                }
            },
            {
                "name": "telemeter-historical-production",
                "type": "prometheus",
                "typeLogoUrl": "",
                "access": "proxy",
                "url": "https://telemeter-lts.datahub.redhat.com",
                "basicAuth": false,
                "withCredentials": false,
                "jsonData": {
                    "tlsSkipVerify": true,
                    "httpHeaderName1": "Authorization"
                },
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('app-sre/creds/kube-configs/datahub-psi', 'token') }}}"
                }
            },
            {
                "name": "telemeter-historical-stage",
                "type": "prometheus",
                "typeLogoUrl": "",
                "access": "proxy",
                "url": "https://prometheus-dh-stage-prometheus-lts.cloud.datahub.psi.redhat.com",
                "basicAuth": false,
                "withCredentials": false,
                "jsonData": {
                    "tlsSkipVerify": true,
                    "httpHeaderName1": "Authorization"
                },
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('app-sre/creds/kube-configs/datahub-psi', 'token') }}}"
                }
            },
            {
                "access": "proxy",
                "editable": false,
                "jsonData": {
                    "httpHeaderName1": "Authorization"
                },
                "name": "crcd01ue1-prometheus",
                "orgId": 1,
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('insights/creds/kube-configs/crcd01ue1', 'token', 3) }}}"
                },
                "type": "prometheus",
                "url": "https://prometheus.crcd01ue1.devshift.net",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "jsonData": {
                    "httpHeaderName1": "Authorization"
                },
                "name": "crcd01ue1-cluster-prometheus",
                "orgId": 1,
                "secureJsonData": {
                    "httpHeaderValue1": "Bearer {{{ vault('insights/creds/kube-configs/crcd01ue1', 'token', 3) }}}"
                },
                "type": "prometheus",
                "url": "https://prometheus-k8s-openshift-monitoring.apps.crcd01ue1.8p0c.p1.openshiftapps.com",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "odfms-observatorium-stage",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://odfms-token-refresher.app-sre-observability-stage.svc.cluster.local",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "odfms-observatorium-production",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://odfms-token-refresher.app-sre-observability-production.svc.cluster.local",
                "version": 1
            },
            {
                "access": "proxy",
                "editable": false,
                "name": "poc-loki-stage",
                "orgId": 1,
                "type": "loki",
                "url": "http://grafana-loki-token-refresher.app-sre-observability-stage.svc.cluster.local",
                "version": 1,
                "jsonData": {
                    "maxLines": 1000
                },
            },
        ]
    }
    {{% endb64encode %}}
