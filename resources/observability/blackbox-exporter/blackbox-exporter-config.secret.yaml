apiVersion: v1
kind: Secret
metadata:
  name: blackbox-exporter-config
  annotations:
    qontract.recycle: "true"
    qontract.ignore_reconcile_time: "true"
data:
  blackbox.yaml:
    {{% b64encode %}}
    modules:
      http_2xx:
        prober: http
        timeout: 5s
        http:
          valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
          valid_status_codes: [] # Defaults to 2xx
          method: GET
          no_follow_redirects: false
          fail_if_ssl: false
          fail_if_not_ssl: false
          tls_config:
            insecure_skip_verify: false
          preferred_ip_protocol: "ip4"
      http_3xx:
        prober: http
        timeout: 5s
        http:
          valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
          valid_status_codes: [301,302,303,307,308]
          method: GET
          no_follow_redirects: true
          fail_if_ssl: false
          fail_if_not_ssl: false
          tls_config:
            insecure_skip_verify: false
          preferred_ip_protocol: "ip4"
    # Site-specific modules
      # ci.ext.devshift.net
      http_ci_ext:
        prober: http
        timeout: 5s
        http:
          method: GET
          basic_auth:
            username: "{{{ vault('app-sre/ci-ext/jjb-ini', 'username') }}}"
            password: "{{{ vault('app-sre/ci-ext/jjb-ini', 'password') }}}"
      # infogw-data.api.stage.openshift.com and infogw-proxy.api.stage.openshift.com
      infogw-stage:
        prober: http
        timeout: 5s
        http:
          method: GET
          bearer_token: "{{{ vault('app-sre/integrations-output/openshift-serviceaccount-tokens/app-sre-stage-01/telemeter-stage/app-sre-stage-01-telemeter-stage-telemeter-prometheus-access', 'token') }}}"
          fail_if_body_not_matches_regexp:
          - "Prometheus"
      # infogw-data.api.openshift.com and infogw-proxy.api.openshift.com
      infogw-prod:
        prober: http
        timeout: 5s
        http:
          method: GET
          bearer_token: "{{{ vault('app-sre/integrations-output/openshift-serviceaccount-tokens/telemeter-prod-01/telemeter-production/telemeter-prod-01-telemeter-production-telemeter-prometheus-access', 'token') }}}"
          fail_if_body_not_matches_regexp:
          - "Prometheus"
      # skupper prometheus
      app-sre-prod-01-prometheus:
        prober: http
        timeout: 5s
        http:
          method: GET
          bearer_token: "{{{ vault('app-sre/creds/kube-configs/app-sre-prod-01', 'token') }}}"
          tls_config:
            insecure_skip_verify: true
      app-sre-prod-03-prometheus:
        prober: http
        timeout: 5s
        http:
          method: GET
          bearer_token: "{{{ vault('app-sre/creds/kube-configs/app-sre-prod-03', 'token') }}}"
          tls_config:
            insecure_skip_verify: true
      appsrep05ue1-prometheus:
        prober: http
        timeout: 5s
        http:
          method: GET
          bearer_token: "{{{ vault('app-sre/creds/kube-configs/appsrep05ue1', 'token') }}}"
          tls_config:
            insecure_skip_verify: true
    {{% endb64encode %}}
