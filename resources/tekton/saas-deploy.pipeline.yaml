apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: saas-deploy
  annotations:
    ignore-check.kube-linter.io/unset-cpu-requirements: "no cpu limits"
spec:
  params:
  - name: saas_file_name
    type: string
  - name: env_name
    type: string
  - name: tkn_cluster_console_url
    type: string
  - name: tkn_namespace_name
    type: string
  - name: trigger_integration
    type: string
    default: manual
  - name: trigger_reason
    type: string
    default: manual
  tasks:
  - name: openshift-saas-deploy
    taskRef:
      kind: Task
      name: openshift-saas-deploy
    params:
    - name: saas_file_name
      value: "$(params.saas_file_name)"
    - name: env_name
      value: "$(params.env_name)"
    - name: trigger_reason
      value: "$(params.trigger_reason)"
  finally:
  - name: push-deploy-event-to-db
    params:
      - name: env_name
        value: $(params.env_name)
      - name: app_name
        value: $(params.saas_file_name)
      - name: task_status
        value: $(tasks.openshift-saas-deploy.status)
      - name: trigger_reason
        value: $(params.trigger_reason)
      - name: trigger_integration
        value: $(params.trigger_integration)
    taskRef:
      kind: Task
      name: push-deploy-event-to-db
  - name: push-http-splunk-tekton-pipeline-metadata
    retries: 2
    taskRef:
      kind: Task
      name: push-http-splunk-tekton-pipeline-metadata
    params:
    - name: saas_file_name
      value: "$(params.saas_file_name)"
    - name: env_name
      value: "$(params.env_name)"
    - name: aggregate_task_status
      value: "$(tasks.status)"
    - name: tkn_cluster_console_url
      value: "$(params.tkn_cluster_console_url)"
    - name: tkn_namespace_name
      value: "$(params.tkn_namespace_name)"
    - name: pipelinerun_name
      value: "$(context.pipelineRun.name)"
  - name: push-gateway-openshift-saas-deploy-task-status-metric
    retries: 10
    taskRef:
      kind: Task
      name: push-gateway-task-status-metric
    params:
    - name: saas_file_name
      value: "$(params.saas_file_name)"
    - name: env_name
      value: "$(params.env_name)"
    - name: metric_name
      value: app_sre_tekton_pipelinerun_task_status
    - name: job_name
      value: openshift-saas-deploy-push-metric
    - name: task_name
      value: openshift-saas-deploy
    - name: task_status
      value: "$(tasks.openshift-saas-deploy.status)"
    - name: pipeline_name
      value: openshift-saas-deploy
    - name: pipelinerun_name
      value: "$(context.pipelineRun.name)"
    - name: retry_cooldown_seconds
      value: "60"
    - name: tkn_cluster_console_url
      value: "$(params.tkn_cluster_console_url)"
    - name: tkn_namespace_name
      value: "$(params.tkn_namespace_name)"
  - name: push-deploy-event-to-changelog
    params:
      - name: env_name
        value: $(params.env_name)
      - name: app_name
        value: $(params.saas_file_name)
      - name: task_status
        value: $(tasks.openshift-saas-deploy.status)
    taskRef:
      kind: Task
      name: push-deploy-event-to-changelog
    when:
      - input: $(params.env_name)
        operator: in
        values:
          # Only curl deploy events to changelog for insights jobs for now
          - insights-stage
